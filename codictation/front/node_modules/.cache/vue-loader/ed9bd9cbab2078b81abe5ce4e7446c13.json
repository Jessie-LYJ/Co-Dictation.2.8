{"remainingRequest":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\src\\components\\profile\\mybadges.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\src\\components\\profile\\mybadges.vue","mtime":1615344162168},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoucHJvZ3Jlc3N7DQogIHdpZHRoOiA1MHJlbTsNCn0NCg0KaW1nIHsNCmRpc3BsYXk6YmxvY2s7DQp3aWR0aDoyNDBweDsNCmhlaWdodDoyMDBweDsNCn0NCg0KLnBpYy5hY3RpdmUgew0KICAgIC13ZWJraXQtZmlsdGVyOiBncmF5c2NhbGUoMTAwJSk7IA0KICAgIGZpbHRlcjogZ3JheXNjYWxlKDEwMCUpOw0KfQ0KDQojY29udGFpbmVyew0KICBkaXNwbGF5OiBpbmxpbmUtZ3JpZDsNCiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyNTBweCAyNTBweCAyNTBweDsNCiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAyNTBweCAyNTBweCAyNTBweDsNCn0NCg0KLnBpYyB7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgLyogYm9yZGVyOiAxcHggc29saWQgI2U1ZTRlOTsgKi8NCn0NCg0KLyogY2FsZW5kYXIgY3NzLWNvZGUgKi8NCi5ncmlkLWNvbHMtNyB7DQogICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNyxtaW5tYXgoMCwxZnIpKTsNCn0NCi5wLTQgew0KICAgIHBhZGRpbmc6IDFyZW07DQp9DQouZ3JpZCB7DQogICAgZGlzcGxheTogZ3JpZDsNCn0NCi50ZXh0LWNlbnRlciB7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KLnRleHQtd2hpdGUgew0KICAgIC0tdHctdGV4dC1vcGFjaXR5OiAxOw0KICAgIGNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LHZhcigtLXR3LXRleHQtb3BhY2l0eSkpOw0KfQ0KLnJvdW5kZWQtZnVsbCB7DQogICAgYm9yZGVyLXJhZGl1czogOTk5OXB4Ow0KfQ0KLmJnLWJsdWUtNjAwIHsNCiAgICAtLXR3LWJnLW9wYWNpdHk6IDE7DQogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzNyw5OSwyMzUsdmFyKC0tdHctYmctb3BhY2l0eSkpOw0KfQ0KLmp1c3RpZnktYmV0d2VlbiB7DQogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KfQ0KLmZsZXggew0KICAgIGRpc3BsYXk6IGZsZXg7DQp9DQouaC1zY3JlZW4gew0KICAgIGhlaWdodDogNTB2aDsNCiAgICB3aWR0aDogNTB2aDsNCn0NCi8qIC5wbGFjZS1pdGVtcy1jZW50ZXIgew0KICAgIHBsYWNlLWl0ZW1zOiBjZW50ZXI7DQp9ICovDQoNCg=="},{"version":3,"sources":["mybadges.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4TA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mybadges.vue","sourceRoot":"src/components/profile","sourcesContent":["<template>\r\n\r\n  <div class=\"q-pa-lg\">\r\n\r\n    <h3>Daily Study Plan</h3>\r\n    <br><span>Daily study time：</span>\r\n\r\n    <div>\r\n  <el-button-group>\r\n  <el-button type=\"primary\"  @click=\"changepro(15)\">15</el-button>\r\n  <el-button type=\"primary\" @click=\"changepro(30)\">30</el-button>\r\n  <el-button type=\"primary\" @click=\"changepro(45)\">45</el-button>\r\n  <el-button type=\"primary\" @click=\"changepro(60)\">60</el-button>\r\n  <!-- <el-button type=\"primary\"  value=15 v-model=\"progress\">15</el-button>\r\n  <el-button type=\"primary\" value=30 v-model=\"progress\">30</el-button>\r\n  <el-button type=\"primary\" value=45 v-model=\"progress\">45</el-button>\r\n  <el-button type=\"primary\" value=60 v-model=\"progress\">60</el-button> -->\r\n</el-button-group>\r\n</div>\r\n\r\n<br>\r\n<span>{{this.test1}}/{{this.progress}}mins</span>\r\n<el-progress :text-inside=\"true\" :stroke-width=\"18\" :percentage=\"(this.test1/this.progress)*100\"  class=\"progress\"></el-progress>\r\n<el-button type=\"primary\" >打卡</el-button>\r\n\r\n<div id=\"app\">\r\n  <div class=\"grid h-screen place-items-center bg-gray-100\">\r\n    <div class=\"place-self-center bg-white shadow\">\r\n      <div class=\"flex justify-between p-4\">\r\n        <div class=\"text-gray-400\" v-text=\"currentMonthName\"></div>\r\n        <div class=\"flex\">\r\n          <button @click=\"prevMonth\">Prev</button>\r\n          <button class=\"ml-6\" @click=\"nextMonth\">Next</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"grid grid-cols-7 p-4\">\r\n        <div class=\"p-4\" v-for=\"(dayHeader,index) in daysHeaders\" :key=\"index\" v-text=\"dayHeader\"></div>\r\n        <div class=\"p-2\" v-for=\"(offset,index) in offsetDays\" :key=\"index\"></div>\r\n        <div class=\"p-2\" v-for=\"(day,index) in getDays\" :key=\"index\">\r\n          <div class=\"text-center\" v-text=\"day\" :class=\"setTodayDate(day)\"></div>\r\n          <div class=\"text-sm\" v-if=\"isEventDay(day)\">{{ isEventDay(day) }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<!-- 徽章 -->\r\n    <div id=\"container\">\r\n    <div class=\"pic\" :class=\"{ active: task1 }\"><img src=\"@/assets/badges/1.svg\"  /> </div>\r\n    <div class=\"pic\" :class=\"{ active: task2 }\"><img src=\"@/assets/badges/1.svg\"  /></div>\r\n    <div class=\"pic\" :class=\"{ active: task3 }\"><img src=\"@/assets/badges/1.svg\"  /></div>\r\n    <div class=\"pic\" :class=\"{ active: coin1 }\"><img src=\"@/assets/badges/2.svg\"  /></div>\r\n    <div class=\"pic\" :class=\"{ active: coin2 }\"><img src=\"@/assets/badges/2.svg\"  /></div>\r\n    <div class=\"pic\" :class=\"{ active: coin3 }\"><img src=\"@/assets/badges/2.svg\"  /></div>\r\n    <div class=\"pic\" :class=\"{ active: rank50 }\"><img src=\"@/assets/badges/3.svg\"  /></div>\r\n    <div class=\"pic\" :class=\"{ active: rank30 }\"><img src=\"@/assets/badges/3.svg\"  /></div>\r\n    <div class=\"pic\" :class=\"{ active: rank10 }\"><img src=\"@/assets/badges/3.svg\"  /></div>\r\n  </div>\r\n  \r\n\r\n    <div id=\"eChartsContainer\" style=\"height: 350%\"></div>\r\n    <button @click=\"test()\">test</button>\r\n    <div>{{test1}}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nvar echarts = require(\"../../echarts.min.js\");\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: \"\", //当前用户的用户名\r\n      //userId: \"\", //当前用户的_id  可根据这两个信息去数据库User取数据\r\n      api: \"/score\",\r\n      task1: true,\r\n      task2: true,\r\n      task3: true,\r\n      coin1: true,\r\n      coin2: true,\r\n      coin3: true,\r\n      rank10: true,\r\n      rank30: true,\r\n      rank50: true,\r\n      today:\"\",\r\n      studyre:[],\r\n      test1:0,\r\n      progress:15,\r\n      todayTime:\"\",\r\n      goal:\"\",\r\n      //calendar \r\n    selectedMonth: this.$moment(),\r\n    daysInMonth: this.$moment().daysInMonth(),\r\n    offsetDays: this.$moment().startOf(\"month\").day() - 1,\r\n    daysHeaders: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n    currentMonthName: this.$moment().format(\"MMMM, Y\"),\r\n    counter: 0,\r\n    events: [\r\n      {\r\n        id: 1,\r\n        name: \"event\",\r\n        date: \"2021-01-10\"\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"event\",\r\n        date: \"2021-01-21\"\r\n      }\r\n    ]\r\n\r\n  }},\r\n  components: {\r\n   \r\n  },\r\n  computed: {\r\n    getDays() {\r\n      return this.daysInMonth;\r\n    }\r\n  },\r\n\r\n  created() {\r\n    \r\n    // this.today=this.$moment(new Date()).format(\"YYYY/MM/DD HH:mm:ss\");//2019-04-12\r\n    // const {data} = await this.$axios.get('/score/studyRecord?name='+this.name)\r\n    // console.log(data)\r\n\r\n    this.name = sessionStorage.getItem(\"userName\");\r\n    console.log(this.name);\r\n    this.$axios.get(this.api + \"/badges/?name=\" + this.name).then((res) => {\r\n    var records = res.data\r\n    \r\n    this.$axios.get(this.api+\"/studyRecord/?name=\" + this.name).then((res)=>{\r\n      this.studyre = res.data\r\n      this.formEcharts();\r\n      this.test();\r\n    })\r\n\r\n\r\n    if (records.taskNums>=10){\r\n      this.task1=false\r\n    }\r\n    if (records.taskNums>=50){\r\n      this.task2=false\r\n    }\r\n    if (records.taskNums>=100){\r\n      this.task3=false\r\n    }\r\n    if (records.taskNums>=10){\r\n      this.task1=false\r\n    }\r\n    if (records.totalCoins>=100){\r\n      this.coin1=false\r\n    }\r\n    if (records.totalCoins>=500){\r\n      this.coin2=false\r\n    }\r\n    if (records.totalCoins>=1000){\r\n      this.coin3=false\r\n    }\r\n    if (records.rank50s>=10){\r\n      this.rank50=false\r\n    }\r\n    if (records.rank30s>=10){\r\n      this.rank30=false\r\n    }\r\n    if (records.rank10s>=10){\r\n      this.rank10=false\r\n    }\r\n     });\r\n\r\n  \r\n  },\r\n  updated() {\r\n\r\n    \r\n  },\r\n  mounted(){\r\n\r\n  },\r\n  methods: {\r\n    changepro(num){\r\n      this.progress = num\r\n    },\r\n    test(){\r\n    var arr = this.studyre\r\n    var arry = []\r\n    var today = this.$moment(new Date()).format('MM/DD')\r\n    arr.forEach(d =>{\r\n      const recordTime = this.$moment(d.recordTime,\"YYYY/MM/DD hh:mm:ss\").format('MM/DD')\r\n      const listenTime = parseInt(d.listenTime/60,10)\r\n      if (recordTime == today){\r\n        arry.push(parseInt(d.listenTime/60,10)) \r\n      }     \r\n    })\r\n    //console.log(arry)\r\n    var x= eval(arry.join(\"+\"))\r\n    //console.log(x)\r\n    if (!x){\r\n      this.test1 = 0\r\n    }else{\r\n      this.test1 = x\r\n    }\r\n\r\n    },\r\n\r\n\r\n    \r\n//折线图\r\n    formEcharts() {    \r\n      var container = document.getElementById(\"eChartsContainer\");\r\n      var myChart = echarts.init(container);\r\n      var xData = [];\r\n      var yData = [];\r\n      \r\n      //处理数据，1.合并同一个日期的听写时间 2.改变时间样式成MM/DD 3.将具体听写时间转化成分钟\r\n    var arr = this.studyre\r\n    var arry = []\r\n    arr.forEach(d =>{\r\n      const recordTime = this.$moment(d.recordTime,\"YYYY/MM/DD hh:mm:ss\").format('MM/DD')\r\n      const listenTime = parseInt(d.listenTime/60,10)\r\n      arry.push({recordTime,listenTime})\r\n    })\r\n    let newArr=[];\r\n    var temp = {};\r\n        for(var i in arry) {\r\n            var key= arry[i].recordTime;\r\n            if(temp[key]) {\r\n                temp[key].recordTime = temp[key].recordTime ;\r\n                temp[key].listenTime = temp[key].listenTime+ arry[i].listenTime;\r\n\r\n            } else {\r\n                temp[key] = {};\r\n                temp[key].recordTime = arry[i].recordTime;\r\n                temp[key].listenTime = arry[i].listenTime;\r\n\r\n            }\r\n        }\r\n      for(var k in temp){\r\n         newArr.push(temp[k])\r\n      }\r\n      \r\n\r\n      for (var i = 0; i < newArr.length; i++) {\r\n        if (newArr[i].listenTime != \"\") {\r\n          xData.push(newArr[i].recordTime);\r\n          yData.push(newArr[i].listenTime);\r\n        }\r\n      }\r\n\r\n      var option = {\r\n          xAxis: {\r\n            name: \"Date\",\r\n            type: \"category\",\r\n            data: xData,\r\n          },\r\n          yAxis: {\r\n            name:'min',\r\n            type: \"value\",\r\n          },\r\n          series: [\r\n            {\r\n              data: yData,\r\n              type: \"line\",\r\n            },\r\n          ],\r\n        };\r\n        // 使用刚指定的配置项和数据显示图表。\r\n        myChart.setOption(option);\r\n      \r\n      },\r\n//日历表\r\n    prevMonth() {\r\n      const prevMonth = this.selectedMonth.add(-1, \"M\");\r\n      this.daysInMonth = prevMonth.daysInMonth();\r\n      this.offsetDays = prevMonth.startOf(\"month\").day() - 1;\r\n      this.currentMonthName = prevMonth.format(\"MMMM, Y\");\r\n    },\r\n    nextMonth() {\r\n      const nextMonth = this.selectedMonth.add(1, \"M\");\r\n      this.daysInMonth = nextMonth.daysInMonth();\r\n      this.offsetDays = nextMonth.startOf(\"month\").day() - 1;\r\n      this.currentMonthName = nextMonth.format(\"MMMM, Y\");\r\n    },\r\n\r\n    isEventDay(dayToCheck) {\r\n      let eventName;\r\n      const currentDay = this.$moment().format(\"D\");\r\n      const currentMonth = this.$moment().format(\"M\");\r\n      const selectedMonth = this.selectedMonth.format(\"M\");\r\n      this.events.find((event) => {\r\n        let eventDay = event.date.split(\"-\")[2];\r\n        let eventMonth = event.date.split(\"-\")[1].slice(1);\r\n        if (dayToCheck == eventDay && eventMonth == selectedMonth) {\r\n          eventName = event.name;\r\n        }\r\n      });\r\n      return eventName;\r\n    },\r\n    \r\n    setTodayDate(dayToCheck) {\r\n      const currentDay = this.$moment().format(\"D\");\r\n      const currentMonth = this.$moment().format(\"M\");\r\n      const selectedMonth = this.selectedMonth.format(\"M\");\r\n      if (dayToCheck == currentDay && currentMonth == selectedMonth) {\r\n        return \"bg-blue-600 text-white rounded-full\";\r\n      }\r\n    }\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.progress{\r\n  width: 50rem;\r\n}\r\n\r\nimg {\r\ndisplay:block;\r\nwidth:240px;\r\nheight:200px;\r\n}\r\n\r\n.pic.active {\r\n    -webkit-filter: grayscale(100%); \r\n    filter: grayscale(100%);\r\n}\r\n\r\n#container{\r\n  display: inline-grid;\r\n  grid-template-columns: 250px 250px 250px;\r\n  grid-template-rows: 250px 250px 250px;\r\n}\r\n\r\n.pic {\r\n  text-align: center;\r\n  /* border: 1px solid #e5e4e9; */\r\n}\r\n\r\n/* calendar css-code */\r\n.grid-cols-7 {\r\n    grid-template-columns: repeat(7,minmax(0,1fr));\r\n}\r\n.p-4 {\r\n    padding: 1rem;\r\n}\r\n.grid {\r\n    display: grid;\r\n}\r\n.text-center {\r\n    text-align: center;\r\n}\r\n.text-white {\r\n    --tw-text-opacity: 1;\r\n    color: rgba(255,255,255,var(--tw-text-opacity));\r\n}\r\n.rounded-full {\r\n    border-radius: 9999px;\r\n}\r\n.bg-blue-600 {\r\n    --tw-bg-opacity: 1;\r\n    background-color: rgba(37,99,235,var(--tw-bg-opacity));\r\n}\r\n.justify-between {\r\n    justify-content: space-between;\r\n}\r\n.flex {\r\n    display: flex;\r\n}\r\n.h-screen {\r\n    height: 50vh;\r\n    width: 50vh;\r\n}\r\n/* .place-items-center {\r\n    place-items: center;\r\n} */\r\n\r\n</style>\r\n"]}]}
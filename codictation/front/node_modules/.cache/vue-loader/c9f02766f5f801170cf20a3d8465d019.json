{"remainingRequest":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\src\\components\\basic\\Avatar.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\src\\components\\basic\\Avatar.vue","mtime":1612749277000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbmFtZTogIiIsIC8v5b2T5YmN55So5oi355qE55So5oi35ZCNCiAgICB9OwogIH0sCiAgbW91bnRlZCgpIHsKICAgIGdlbmVyYXRlKHRoaXMuJHJlZnMuY2FudmFzLCB0aGlzLm5hbWUpOwogIH0sCiAgd2F0Y2g6IHsKICAgIG5hbWUodmFsdWUpIHsKICAgICAgZ2VuZXJhdGUodGhpcy4kcmVmcy5jYW52YXMsIHZhbHVlKTsKICAgIH0sCiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5uYW1lID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgidXNlck5hbWUiKTsKICB9LAp9OwoKY29uc3QgTVVMVElQTElFUiA9IDExMDM1MTUyNDU7CmNvbnN0IElOQ1JFTUVOVCA9IDEyMzQ1Owpjb25zdCBNT0RVTFVTID0gTWF0aC5wb3coMiwgMzEpOwoKZnVuY3Rpb24gbGNnKHgsIGkgPSBNVUxUSVBMSUVSLCBjID0gSU5DUkVNRU5ULCBtID0gTU9EVUxVUykgewogIHJldHVybiAoaSAqIHggKyBjKSAlIG07Cn0KCmZ1bmN0aW9uIGNyZWF0ZVJhbmRvbWl6ZXIoaW5pdGlhbFNlZWQgPSBEYXRlLm5vdygpKSB7CiAgbGV0IHNlZWQgPSBpbml0aWFsU2VlZDsKICBmdW5jdGlvbiByZXNldChuZXdTZWVkID0gaW5pdGlhbFNlZWQpIHsKICAgIHNlZWQgPSBuZXdTZWVkOwogIH0KICBmdW5jdGlvbiByYW5kb20oKSB7CiAgICBzZWVkID0gbGNnKHNlZWQpOwogICAgcmV0dXJuIHNlZWQgLyBNT0RVTFVTOwogIH0KICBmdW5jdGlvbiByYW5kb21JbnQobWluLCBtYXgpIHsKICAgIHJldHVybiBtaW4gKyBNYXRoLmZsb29yKHJhbmRvbSgpICogKG1heCAtIG1pbikpOwogIH0KICByZXR1cm4gewogICAgcmVzZXQsCiAgICByYW5kb20sCiAgICByYW5kb21JbnQsCiAgfTsKfQoKY29uc3QgcmFuZG9taXplciA9IGNyZWF0ZVJhbmRvbWl6ZXIoKTsKCmZ1bmN0aW9uIHByb2NlZHVyYWxEcmF3KGN4LCByYW5kb21pemVyLCBzdGFydCwgZHJhdykgewogIGNvbnN0IHRvdGFsID0gcmFuZG9taXplci5yYW5kb21JbnQoNCwgMTApOwogIGNvbnN0IHJhZGl1cyA9IGN4LmNhbnZhcy53aWR0aCA+PiByYW5kb21pemVyLnJhbmRvbUludCgxLCAzKTsKICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdG90YWw7IGluZGV4KyspIHsKICAgIGNvbnN0IGFuZ2xlID0gc3RhcnQgKyAoaW5kZXggLyB0b3RhbCkgKiBNYXRoLlBJICogMjsKICAgIGRyYXcoY3gsIHsgaW5kZXgsIHRvdGFsLCBhbmdsZSwgcmFkaXVzIH0pOwogIH0KfQoKZnVuY3Rpb24gZ2VuZXJhdGUoY2FudmFzLCBuYW1lKSB7CiAgY29uc3QgY3ggPSBjYW52YXMuZ2V0Q29udGV4dCgiMmQiKTsKICBpZiAoY3guY2FudmFzLndpZHRoICE9PSBjeC5jYW52YXMuY2xpZW50V2lkdGgpIHsKICAgIGN4LmNhbnZhcy53aWR0aCA9IGN4LmNhbnZhcy5jbGllbnRXaWR0aDsKICB9CgogIGlmIChjeC5jYW52YXMuaGVpZ2h0ICE9PSBjeC5jYW52YXMuY2xpZW50SGVpZ2h0KSB7CiAgICBjeC5jYW52YXMuaGVpZ2h0ID0gY3guY2FudmFzLmNsaWVudEhlaWdodDsKICB9CgogIGNvbnN0IGNjeCA9IGN4LmNhbnZhcy53aWR0aCA+PiAxOwogIGNvbnN0IGNjeSA9IGN4LmNhbnZhcy5oZWlnaHQgPj4gMTsKICBjb25zdCBtaW4gPSBjeC5jYW52YXMud2lkdGggPj4gNjsKICBjb25zdCBtYXggPSBjeC5jYW52YXMud2lkdGggPj4gMjsKCiAgY29uc3Qgc3RhcnQgPSByYW5kb21pemVyLnJhbmRvbSgpICogTWF0aC5QSTsKCiAgY3guY2xlYXJSZWN0KDAsIDAsIGN4LmNhbnZhcy53aWR0aCwgY3guY2FudmFzLmhlaWdodCk7CiAgbGV0IHZvd2VscyA9IDAsCiAgICBjb25zb25hbnRzID0gMCwKICAgIG51bWJlcnMgPSAwLAogICAgc3ltYm9scyA9IDAsCiAgICBzdW0gPSAwLAogICAgc2VlZCA9IDA7CgogIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBuYW1lLmxlbmd0aDsgaW5kZXgrKykgewogICAgY29uc3QgY2hhciA9IG5hbWUuY2hhckF0KGluZGV4KTsKICAgIGNvbnN0IGNoYXJDb2RlID0gbmFtZS5jaGFyQ29kZUF0KGluZGV4KTsKICAgIGlmIChjaGFyLm1hdGNoKC9bMC05XS8pKSB7CiAgICAgIG51bWJlcnMrKzsKICAgIH0gZWxzZSBpZiAoY2hhci5tYXRjaCgvW2FlaW91w6HDqcOtw7PDusOgw6jDrMOyw7nDpMOrw6/DtsO8w6LDqsOuw7TDu10vKSkgewogICAgICB2b3dlbHMrKzsKICAgIH0gZWxzZSBpZiAoY2hhci5tYXRjaCgvW19cLUAiJyMkJSZcLygpPcK/P8KhITw+e31cW1xdwrrCqlxcJ2ArXS8pKSB7CiAgICAgIHN5bWJvbHMrKzsKICAgIH0gZWxzZSB7CiAgICAgIGNvbnNvbmFudHMrKzsKICAgIH0KICAgIHN1bSArPSBjaGFyQ29kZTsKICB9CiAgc2VlZCA9IHN1bSA+Pj4gKG51bWJlcnMgKiB2b3dlbHMgKiBzeW1ib2xzICogY29uc29uYW50cyk7CiAgcmFuZG9taXplci5yZXNldChzZWVkKTsKICAvLyByYW5kb21pemVyLnJhbmRvbSgpCiAgY29uc3QgaHVlID0gcmFuZG9taXplci5yYW5kb21JbnQoMCwgMzYwKTsKICBjeC5maWxsU3R5bGUgPSBgaHNsKCR7aHVlfSwgNTAlLCA1MCUpYDsKICBjeC5maWxsUmVjdCgwLCAwLCBjeC5jYW52YXMud2lkdGgsIGN4LmNhbnZhcy5oZWlnaHQpOwoKICBwcm9jZWR1cmFsRHJhdygKICAgIGN4LAogICAgcmFuZG9taXplciwKICAgIHN0YXJ0LAogICAgKGN4LCB7IGluZGV4LCB0b3RhbCwgYW5nbGUsIHJhZGl1cyB9KSA9PiB7CiAgICAgIGNvbnN0IGFjeCA9IGNjeCArIE1hdGguY29zKGFuZ2xlKSAqIHJhZGl1czsKICAgICAgY29uc3QgYWN5ID0gY2N5ICsgTWF0aC5zaW4oYW5nbGUpICogcmFkaXVzOwogICAgICBjeC5iZWdpblBhdGgoKTsKICAgICAgY3guYXJjKGFjeCwgYWN5LCBjeC5jYW52YXMud2lkdGggPj4gMywgMCwgTWF0aC5QSSAqIDIpOwogICAgICBjeC5jbG9zZVBhdGgoKTsKICAgICAgY3guZmlsbFN0eWxlID0gYGhzbCgke2h1ZX0sIDUwJSwgNzUlKWA7CiAgICAgIGN4LmZpbGwoKTsKICAgIH0KICApOwoKICBjeC5iZWdpblBhdGgoKTsKICBwcm9jZWR1cmFsRHJhdygKICAgIGN4LAogICAgcmFuZG9taXplciwKICAgIHN0YXJ0LAogICAgKGN4LCB7IGluZGV4LCB0b3RhbCwgYW5nbGUsIHJhZGl1cyB9KSA9PiB7CiAgICAgIGNvbnN0IGFjeCA9IGNjeCArIE1hdGguY29zKGFuZ2xlKSAqIHJhZGl1czsKICAgICAgY29uc3QgYWN5ID0gY2N5ICsgTWF0aC5zaW4oYW5nbGUpICogcmFkaXVzOwogICAgICBpZiAoaW5kZXggPT09IDApIHsKICAgICAgICBjeC5tb3ZlVG8oYWN4LCBhY3kpOwogICAgICB9IGVsc2UgewogICAgICAgIGN4LmxpbmVUbyhhY3gsIGFjeSk7CiAgICAgIH0KICAgIH0KICApOwogIGN4LmNsb3NlUGF0aCgpOwogIGN4LmxpbmVXaWR0aCA9IHJhbmRvbWl6ZXIucmFuZG9tSW50KG1pbiwgbWF4KTsKICBjeC5zdHJva2VTdHlsZSA9IGBoc2woJHtodWV9LCA1MCUsIDI1JSlgOwogIGN4LnN0cm9rZSgpOwoKICBjeC5iZWdpblBhdGgoKTsKICBwcm9jZWR1cmFsRHJhdygKICAgIGN4LAogICAgcmFuZG9taXplciwKICAgIHN0YXJ0LAogICAgKGN4LCB7IGluZGV4LCB0b3RhbCwgYW5nbGUsIHJhZGl1cyB9KSA9PiB7CiAgICAgIGNvbnN0IGFjeCA9IGNjeCArIE1hdGguY29zKGFuZ2xlKSAqIHJhZGl1czsKICAgICAgY29uc3QgYWN5ID0gY2N5ICsgTWF0aC5zaW4oYW5nbGUpICogcmFkaXVzOwogICAgICBpZiAoaW5kZXggPT09IDApIHsKICAgICAgICBjeC5tb3ZlVG8oYWN4LCBhY3kpOwogICAgICB9IGVsc2UgewogICAgICAgIGN4LmxpbmVUbyhhY3gsIGFjeSk7CiAgICAgIH0KICAgIH0KICApOwogIGN4LmNsb3NlUGF0aCgpOwogIGN4LmxpbmVXaWR0aCA9IHJhbmRvbWl6ZXIucmFuZG9tSW50KG1pbiwgbWF4KTsKICBjeC5zdHJva2VTdHlsZSA9IGBoc2woJHtodWV9LCA1MCUsIDYwJSlgOwogIGN4LnN0cm9rZSgpOwoKICBjeC5iZWdpblBhdGgoKTsKICBjeC5hcmMoY2N4LCBjY3ksIHJhbmRvbWl6ZXIucmFuZG9tSW50KG1pbiwgbWF4KSwgMCwgTWF0aC5QSSAqIDIpOwogIGN4LmNsb3NlUGF0aCgpOwogIGN4LmZpbGxTdHlsZSA9IGBoc2woJHtodWV9LCA1MCUsICR7cmFuZG9taXplci5yYW5kb21JbnQoMzAsIDcwKX0lKWA7CiAgY3guZmlsbCgpOwp9Cg=="},{"version":3,"sources":["Avatar.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Avatar.vue","sourceRoot":"src/components/basic","sourcesContent":["<template>\n    <canvas ref=\"canvas\"></canvas>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      name: \"\", //当前用户的用户名\n    };\n  },\n  mounted() {\n    generate(this.$refs.canvas, this.name);\n  },\n  watch: {\n    name(value) {\n      generate(this.$refs.canvas, value);\n    },\n  },\n  created() {\n    this.name = sessionStorage.getItem(\"userName\");\n  },\n};\n\nconst MULTIPLIER = 1103515245;\nconst INCREMENT = 12345;\nconst MODULUS = Math.pow(2, 31);\n\nfunction lcg(x, i = MULTIPLIER, c = INCREMENT, m = MODULUS) {\n  return (i * x + c) % m;\n}\n\nfunction createRandomizer(initialSeed = Date.now()) {\n  let seed = initialSeed;\n  function reset(newSeed = initialSeed) {\n    seed = newSeed;\n  }\n  function random() {\n    seed = lcg(seed);\n    return seed / MODULUS;\n  }\n  function randomInt(min, max) {\n    return min + Math.floor(random() * (max - min));\n  }\n  return {\n    reset,\n    random,\n    randomInt,\n  };\n}\n\nconst randomizer = createRandomizer();\n\nfunction proceduralDraw(cx, randomizer, start, draw) {\n  const total = randomizer.randomInt(4, 10);\n  const radius = cx.canvas.width >> randomizer.randomInt(1, 3);\n  for (let index = 0; index < total; index++) {\n    const angle = start + (index / total) * Math.PI * 2;\n    draw(cx, { index, total, angle, radius });\n  }\n}\n\nfunction generate(canvas, name) {\n  const cx = canvas.getContext(\"2d\");\n  if (cx.canvas.width !== cx.canvas.clientWidth) {\n    cx.canvas.width = cx.canvas.clientWidth;\n  }\n\n  if (cx.canvas.height !== cx.canvas.clientHeight) {\n    cx.canvas.height = cx.canvas.clientHeight;\n  }\n\n  const ccx = cx.canvas.width >> 1;\n  const ccy = cx.canvas.height >> 1;\n  const min = cx.canvas.width >> 6;\n  const max = cx.canvas.width >> 2;\n\n  const start = randomizer.random() * Math.PI;\n\n  cx.clearRect(0, 0, cx.canvas.width, cx.canvas.height);\n  let vowels = 0,\n    consonants = 0,\n    numbers = 0,\n    symbols = 0,\n    sum = 0,\n    seed = 0;\n\n  for (let index = 0; index < name.length; index++) {\n    const char = name.charAt(index);\n    const charCode = name.charCodeAt(index);\n    if (char.match(/[0-9]/)) {\n      numbers++;\n    } else if (char.match(/[aeiouáéíóúàèìòùäëïöüâêîôû]/)) {\n      vowels++;\n    } else if (char.match(/[_\\-@\"'#$%&\\/()=¿?¡!<>{}\\[\\]ºª\\\\'`+]/)) {\n      symbols++;\n    } else {\n      consonants++;\n    }\n    sum += charCode;\n  }\n  seed = sum >>> (numbers * vowels * symbols * consonants);\n  randomizer.reset(seed);\n  // randomizer.random()\n  const hue = randomizer.randomInt(0, 360);\n  cx.fillStyle = `hsl(${hue}, 50%, 50%)`;\n  cx.fillRect(0, 0, cx.canvas.width, cx.canvas.height);\n\n  proceduralDraw(\n    cx,\n    randomizer,\n    start,\n    (cx, { index, total, angle, radius }) => {\n      const acx = ccx + Math.cos(angle) * radius;\n      const acy = ccy + Math.sin(angle) * radius;\n      cx.beginPath();\n      cx.arc(acx, acy, cx.canvas.width >> 3, 0, Math.PI * 2);\n      cx.closePath();\n      cx.fillStyle = `hsl(${hue}, 50%, 75%)`;\n      cx.fill();\n    }\n  );\n\n  cx.beginPath();\n  proceduralDraw(\n    cx,\n    randomizer,\n    start,\n    (cx, { index, total, angle, radius }) => {\n      const acx = ccx + Math.cos(angle) * radius;\n      const acy = ccy + Math.sin(angle) * radius;\n      if (index === 0) {\n        cx.moveTo(acx, acy);\n      } else {\n        cx.lineTo(acx, acy);\n      }\n    }\n  );\n  cx.closePath();\n  cx.lineWidth = randomizer.randomInt(min, max);\n  cx.strokeStyle = `hsl(${hue}, 50%, 25%)`;\n  cx.stroke();\n\n  cx.beginPath();\n  proceduralDraw(\n    cx,\n    randomizer,\n    start,\n    (cx, { index, total, angle, radius }) => {\n      const acx = ccx + Math.cos(angle) * radius;\n      const acy = ccy + Math.sin(angle) * radius;\n      if (index === 0) {\n        cx.moveTo(acx, acy);\n      } else {\n        cx.lineTo(acx, acy);\n      }\n    }\n  );\n  cx.closePath();\n  cx.lineWidth = randomizer.randomInt(min, max);\n  cx.strokeStyle = `hsl(${hue}, 50%, 60%)`;\n  cx.stroke();\n\n  cx.beginPath();\n  cx.arc(ccx, ccy, randomizer.randomInt(min, max), 0, Math.PI * 2);\n  cx.closePath();\n  cx.fillStyle = `hsl(${hue}, 50%, ${randomizer.randomInt(30, 70)}%)`;\n  cx.fill();\n}\n</script>\n\n<style>\ncanvas {\n  width: 3rem;\n  height: 3rem;\n}\n</style>\n"]}]}
{"remainingRequest":"F:\\codictation.2.6\\codictation\\codictation\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\codictation.2.6\\codictation\\codictation\\codictation\\src\\components\\profile\\mybadges.vue?vue&type=style&index=0&id=5eb4de92&scoped=true&lang=css&","dependencies":[{"path":"F:\\codictation.2.6\\codictation\\codictation\\codictation\\src\\components\\profile\\mybadges.vue","mtime":1617710801974},{"path":"F:\\codictation.2.6\\codictation\\codictation\\codictation\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation.2.6\\codictation\\codictation\\codictation\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\codictation.2.6\\codictation\\codictation\\codictation\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\codictation.2.6\\codictation\\codictation\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"F:\\codictation.2.6\\codictation\\codictation\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation.2.6\\codictation\\codictation\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnByb2dyZXNzIHsNCiAgd2lkdGg6IDUwcmVtOw0KfQ0KDQppbWcgew0KICBkaXNwbGF5OiBibG9jazsNCiAgd2lkdGg6IDI0MHB4Ow0KICBoZWlnaHQ6IDIwMHB4Ow0KfQ0KDQoucGljLmFjdGl2ZSB7DQogIC13ZWJraXQtZmlsdGVyOiBncmF5c2NhbGUoMTAwJSk7DQogIGZpbHRlcjogZ3JheXNjYWxlKDEwMCUpOw0KfQ0KDQouY29udGFpbmVyX2JhZGdlIHsNCiAgZGlzcGxheTogaW5saW5lLWdyaWQ7DQogIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMjUwcHggMjUwcHggMjUwcHg7DQogIGdyaWQtdGVtcGxhdGUtcm93czogMjUwcHg7DQp9DQoNCi5waWMgew0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIC8qIGJvcmRlcjogMXB4IHNvbGlkICNlNWU0ZTk7ICovDQp9DQoNCi8qIGNhbGVuZGFyIGNzcy1jb2RlICovDQpib2R5IHsNCiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7DQogIGZvbnQtZmFtaWx5OiAiTW9udHNlcnJhdCIsIHNhbnMtc2VyaWY7DQogIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7DQp9DQoNCi8qICogew0KICBmb250LWZhbWlseTogIk1vbnRzZXJyYXQiOw0KfSAqLw0KDQoudnVlLWNhbGVuZGFyIHsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICBtYXgtd2lkdGg6IDQ1MHB4Ow0KICBib3JkZXItcmFkaXVzOiA1cHg7DQogIG92ZXJmbG93OiBoaWRkZW47DQogIHBhZGRpbmc6IDlweDsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZmFmYTsNCiAgLW1vei1ib3gtc2hhZG93OiAwcHggMTVweCAxNXB4IHJnYmEoMzIsIDIzLCAyMywgMC4wOSk7DQogIC13ZWJraXQtYm94LXNoYWRvdzogMHB4IDE1cHggMTVweCByZ2JhKDMyLCAyMywgMjMsIDAuMDkpOw0KICBib3gtc2hhZG93OiAwcHggMTVweCAxNXB4IHJnYmEoMzIsIDIzLCAyMywgMC4wOSk7DQp9DQoudnVlLWNhbGVuZGFyIHVsIHsNCiAgbGlzdC1zdHlsZTogbm9uZTsNCiAgbWFyZ2luOiAwOw0KICBwYWRkaW5nOiAwOw0KICBkaXNwbGF5OiBmbGV4Ow0KfQ0KLnZ1ZS1jYWxlbmRhciB1bCBsaSB7DQogIHdpZHRoOiBjYWxjKDEwMCUgLyA3KTsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KLnZ1ZS1jYWxlbmRhcl9fdGl0bGUgew0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIG1hcmdpbjogMTBweCAwOw0KICBjb2xvcjogIzIyMjc0MTsNCiAgZm9udC1zaXplOiAyMHB4Ow0KICBmb250LXdlaWdodDogNzAwOw0KfQ0KLnZ1ZS1jYWxlbmRhcl9fdGl0bGUgaDMsDQoudnVlLWNhbGVuZGFyX190aXRsZSBwIHsNCiAgbWFyZ2luOiAwOw0KfQ0KLnZ1ZS1jYWxlbmRhcl9fbmF2aWdhdGlvbiB7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgd2lkdGg6IDEwMCU7DQogIHRvcDogMTBweDsNCn0NCi52dWUtY2FsZW5kYXJfX25hdmlnYXRpb24gc3BhbiB7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgZGlzcGxheTogYmxvY2s7DQogIGZvbnQtc2l6ZTogMzBweDsNCiAgZm9udC13ZWlnaHQ6IDcwMDsNCiAgb3BhY2l0eTogMC42Ow0KICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoudnVlLWNhbGVuZGFyX19uYXZpZ2F0aW9uIHNwYW46aG92ZXIgew0KICBvcGFjaXR5OiAxOw0KfQ0KLnZ1ZS1jYWxlbmRhcl9fbmF2aWdhdGlvbiBzcGFuLnByZXYgew0KICBsZWZ0OiAwOw0KfQ0KLnZ1ZS1jYWxlbmRhcl9fbmF2aWdhdGlvbiBzcGFuLm5leHQgew0KICByaWdodDogMThweDsNCn0NCi52dWUtY2FsZW5kYXJfX3dlZWsgdWwgbGkgew0KICBmb250LXdlaWdodDogNzAwOw0KICBwYWRkaW5nOiAxMHB4IDA7DQogIGNvbG9yOiAjOTlhNGFlOw0KfQ0KLnZ1ZS1jYWxlbmRhcl9fd2VlayB7DQogIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZjJmNmY4Ow0KICBtYXJnaW4tYm90dG9tOiA0cHg7DQogIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KfQ0KLnZ1ZS1jYWxlbmRhcl9fbWFpbiB1bCB7DQogIGZsZXgtd3JhcDogd3JhcDsNCn0NCi52dWUtY2FsZW5kYXJfX21haW4gdWwgbGkgew0KICBoZWlnaHQ6IDU0cHg7DQogIHBhZGRpbmc6IDVweDsNCiAgY3Vyc29yOiBwb2ludGVyOw0KICB0cmFuc2l0aW9uOiBhbGwgMC4zczsNCiAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCiAgcGFkZGluZy10b3A6IDE0cHg7DQogIGZvbnQtc3R5bGU6ICJNb250c2VycmF0IjsNCiAgYm9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7DQogIGJvcmRlci1yYWRpdXM6IDUwJTsNCiAgY29sb3I6ICM0MjQ1ODg7DQogIGZvbnQtc2l6ZTogMTJweDsNCiAgZm9udC13ZWlnaHQ6IDcwMDsNCiAgLyogZGlzcGxheTogZmxleDsgKi8NCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQp9DQouZGF0ZSB7DQogIGZvbnQtc3R5bGU6ICJNb250c2VycmF0IjsNCn0NCi52dWUtY2FsZW5kYXJfX21haW4gdWwgbGkudG9kYXkgew0KICBjb2xvcjogI2ZmZjsNCiAgYmFja2dyb3VuZDogIzAwMDsNCn0NCi52dWUtY2FsZW5kYXJfX21haW4gdWwgbGkub3ZlciB7DQogIG9wYWNpdHk6IDAuNjsNCn0NCg0KLnZ1ZS1jYWxlbmRhcl9fbWFpbiB1bCBsaS5kYWthIHsNCiAgYm9yZGVyLXJhZGl1czogOTk5OXB4Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjZkY2VjOw0KICBib3JkZXItY29sb3I6ICNmZWZlZmU7DQogIGJveC1zaGFkb3c6IDBweCAycHggMnB4IHJnYigwIDAgMCAvIDEwJSk7DQogIGNvbG9yOiAjZmZmOw0KfQ0KLnRleHQtd2hpdGUgew0KICAtLXR3LXRleHQtb3BhY2l0eTogMTsNCiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSk7DQp9DQoucm91bmRlZC1mdWxsIHsNCiAgYm9yZGVyLXJhZGl1czogOTk5OXB4Ow0KfQ0KLmJnLWJsdWUtNjAwIHsNCiAgLS10dy1iZy1vcGFjaXR5OiAxOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDM3LCA5OSwgMjM1LCB2YXIoLS10dy1iZy1vcGFjaXR5KSk7DQp9DQoudnVlLWNhbGVuZGFyX19tYWluIHVsIGxpOm5vdCgudG9kYXkpOm5vdCgub3Zlcik6aG92ZXIgew0KICBiYWNrZ3JvdW5kOiB0b21hdG87DQp9DQoudnVlLWNhbGVuZGFyX19tYWluIHVsIGxpIC50ZXh0LA0KLnZ1ZS1jYWxlbmRhcl9fbWFpbiB1bCBsaSAucHJpY2Ugew0KICBmb250LXNpemU6IDEwcHg7DQp9DQo="},{"version":3,"sources":["mybadges.vue"],"names":[],"mappingsurfile":"mybadges.vue","sourceRoot":"src/components/profile","sourcesContent":["<template>\r\n  <q-page class=\"q-pa-lg\">\r\n    <h3 class=\"q-my-md\">Daily Study Plan</h3>\r\n    <q-separator insert style=\"width: 55%\" />\r\n    <h6 class=\"q-my-md\">Set daily study time：</h6>\r\n    <div>\r\n      <q-btn-group>\r\n        <q-btn\r\n          color=\"purple-4\"\r\n          @click=\"changepro(15)\"\r\n          glossy\r\n          label=\"15 minutes\"\r\n        />\r\n        <q-btn\r\n          color=\"purple-5\"\r\n          @click=\"changepro(30)\"\r\n          glossy\r\n          label=\"30 minutes\"\r\n        />\r\n        <q-btn\r\n          color=\"purple-6\"\r\n          @click=\"changepro(45)\"\r\n          glossy\r\n          label=\"45 minutes\"\r\n        />\r\n        <q-btn\r\n          color=\"purple-8\"\r\n          @click=\"changepro(60)\"\r\n          glossy\r\n          label=\"60 minutes\"\r\n        />\r\n      </q-btn-group>\r\n    </div>\r\n\r\n    <h6 class=\"q-my-lg\">\r\n      Keep track of your milestones:\r\n      <span><strong>{{ Math.floor(this.test1) }}</strong> mins / <strong>{{ this.progress }}</strong> mins</span>\r\n    </h6>\r\n\r\n    <q-circular-progress\r\n      show-value\r\n      :value=\"Math.floor((this.test1 / this.progress) * 100)\"\r\n      size=\"90px\"\r\n      :thickness=\"0.2\"\r\n      color=\"purple\"\r\n      center-color=\"grey-3\"\r\n      track-color=\"transparent\"\r\n      class=\"q-ma-md\"\r\n    >\r\n      {{ Math.floor((this.test1 / this.progress) * 100) }}%\r\n    </q-circular-progress>\r\n    <!-- <el-progress\r\n      :text-inside=\"true\"\r\n      :stroke-width=\"18\"\r\n      :percentage=\"Math.floor((this.test1 / this.progress) * 100)\"\r\n      class=\"progress\"\r\n    ></el-progress> -->\r\n    <q-btn\r\n      color=\"purple\"\r\n      icon=\"today\"\r\n      v-if=\"check\"\r\n      @click=\"Daka()\"\r\n      label=\"打卡\"\r\n    />\r\n    <!-- <el-button type=\"primary\" v-if=\"check\" @click=\"Daka()\">打卡</el-button> -->\r\n    <!-- <el-button type=\"primary\" v-else :disabled=\"true\">打卡成功</el-button> -->\r\n    <q-btn\r\n      color=\"purple\"\r\n      icon=\"today\"\r\n      v-else\r\n      :disabled=\"true\"\r\n      label=\"打卡成功\"\r\n    />\r\n\r\n    <div id=\"app\">\r\n      <div class=\"vue-calendar\">\r\n        <div class=\"vue-calendar__title\">\r\n          <span>{{ month + 1 }}月 {{ year }}</span>\r\n        </div>\r\n        <div class=\"vue-calendar__navigation\">\r\n          <span class=\"prev\" @click=\"changeMonth(-1)\">&lt;</span\r\n          ><span class=\"next\" @click=\"changeMonth(1)\">&gt;</span>\r\n        </div>\r\n\r\n        <div class=\"vue-calendar__week\">\r\n          <ul>\r\n            <li v-for=\"(day, index) in weekDay\" :key=\"index\">{{ day }}</li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div class=\"vue-calendar__main\">\r\n          <ul>\r\n            <li v-for=\"(offset, index) in firstDay\" :key=\"index + 'A'\"></li>\r\n            <li\r\n              v-for=\"(date, index) in monthDate\"\r\n              :key=\"index + 'B'\"\r\n              :class=\"[\r\n                { today: isNowYearMonthDay(date) },\r\n                { daka: isDaka(date) },\r\n                { over: isBeforeToday(date) },\r\n              ]\"\r\n            >\r\n              <div class=\"date\">{{ date }}</div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div id=\"eChartsContainer\" style=\"height: 350%\" v-if=\"isFormData\"></div>\r\n    <!-- 徽章 -->\r\n\r\n    <h3 class=\"q-my-md\">My Badges</h3>\r\n    <q-separator insert style=\"width: 55%\" />\r\n\r\n    <h4 class=\"q-my-md\">Persistent learner</h4>\r\n    <q-separator insert style=\"width: 55%\" />\r\n    <div class=\"container_badge\">\r\n      <template v-for=\"(item, index) in dakaBadges\">\r\n        <div\r\n          :key=\"item.name\"\r\n          class=\"pic\"\r\n          :class=\"{ active: item.isget }\"\r\n          style=\"margin-top:15px\"\r\n        >\r\n          <el-popover placement=\"right\" width=\"250\" trigger=\"hover\">\r\n            <el-card style=\"text-align:center\">\r\n              <div>\r\n                <img\r\n                  :src=\"require('@/assets/badges/' + item.picName)\"\r\n                  style=\"width:140px;margin:0 auto\"\r\n                />\r\n                <span v-text=\"item.name\" style=\"font-weight:bold\"></span>\r\n                <p v-text=\"item.intro\"></p>\r\n                <p v-text=\"item.getTime\"></p>\r\n              </div>\r\n            </el-card>\r\n            <img\r\n              :src=\"require('@/assets/badges/' + item.picName)\"\r\n              slot=\"reference\"\r\n            />\r\n          </el-popover>\r\n          <!-- <p v-text=\"item.name\"></p> -->\r\n\r\n          <p v-if=\"item.state == 0\">Not Achieved</p>\r\n          <!-- <button v-else-if=\"item.state == 1\" @click=\"unlock('daka', index)\">\r\n            UnLock Now\r\n          </button> -->\r\n          <q-btn\r\n            v-else-if=\"item.state == 1\"\r\n            @click=\"unlock('daka', index)\"\r\n            color=\"purple\"\r\n            label=\"UnLock Now\"\r\n            size=\"sm\"\r\n            style=\"margin-top:5px\"\r\n          />\r\n          <p v-else>Achieved</p>\r\n        </div>\r\n      </template>\r\n    </div>\r\n\r\n    <h4 class=\"q-my-md\">Scholar</h4>\r\n    <q-separator insert style=\"width: 55%\" />\r\n    <div class=\"container_badge\">\r\n      <template v-for=\"(item, index) in taskBadges\">\r\n        <div\r\n          :key=\"item.name\"\r\n          class=\"pic\"\r\n          :class=\"{ active: item.isget }\"\r\n          style=\"margin-top:15px\"\r\n        >\r\n          <el-popover placement=\"right\" width=\"250\" trigger=\"hover\">\r\n            <el-card style=\"text-align:center\">\r\n              <div>\r\n                <img\r\n                  :src=\"require('@/assets/badges/' + item.picName)\"\r\n                  style=\"width:120px;margin:0 auto\"\r\n                />\r\n                <span v-text=\"item.name\" style=\"font-weight:bold\"></span>\r\n                <p v-text=\"item.intro\"></p>\r\n                <p v-text=\"item.getTime\"></p>\r\n              </div>\r\n            </el-card>\r\n            <img\r\n              :src=\"require('@/assets/badges/' + item.picName)\"\r\n              slot=\"reference\"\r\n            />\r\n          </el-popover>\r\n          <!-- <p v-text=\"item.name\"></p> -->\r\n\r\n          <p v-if=\"item.state == 0\">Not Achieved</p>\r\n          <q-btn\r\n            color=\"purple\"\r\n            label=\"UnLock Now\"\r\n            v-else-if=\"item.state == 1\"\r\n            @click=\"unlock('task', index)\"\r\n            size=\"sm\"\r\n            style=\"margin-top:5px\"\r\n          />\r\n          <!-- <button v-else-if=\"item.state == 1\" @click=\"unlock('task', index)\">\r\n            UnLock Now\r\n          </button> -->\r\n          <p v-else>Achieved</p>\r\n        </div>\r\n      </template>\r\n    </div>\r\n\r\n    <h4 class=\"q-my-md\">Perfect Score</h4>\r\n    <q-separator insert style=\"width: 55%\" />\r\n    <div class=\"container_badge\">\r\n      <template v-for=\"(item, index) in scoreBadges\">\r\n        <div\r\n          :key=\"item.name\"\r\n          class=\"pic\"\r\n          :class=\"{ active: item.isget }\"\r\n          style=\"margin-top:15px\"\r\n        >\r\n          <el-popover placement=\"right\" width=\"250\" trigger=\"hover\">\r\n            <el-card style=\"text-align:center\">\r\n              <div>\r\n                <img\r\n                  :src=\"require('@/assets/badges/' + item.picName)\"\r\n                  style=\"width:120px;margin:0 auto\"\r\n                />\r\n                <span v-text=\"item.name\" style=\"font-weight:bold\"></span>\r\n                <p v-text=\"item.intro\"></p>\r\n                <p v-text=\"item.getTime\"></p>\r\n              </div>\r\n            </el-card>\r\n            <img\r\n              :src=\"require('@/assets/badges/' + item.picName)\"\r\n              slot=\"reference\"\r\n            />\r\n          </el-popover>\r\n          <!-- <p v-text=\"item.name\"></p> -->\r\n\r\n          <p v-if=\"item.state == 0\">Not Achieved</p>\r\n          <q-btn\r\n            color=\"purple\"\r\n            label=\"UnLock Now\"\r\n            v-else-if=\"item.state == 1\"\r\n            @click=\"unlock('score', index)\"\r\n            size=\"sm\"\r\n            style=\"margin-top:5px\"\r\n          />\r\n          <!-- <button v-else-if=\"item.state == 1\" @click=\"unlock('score', index)\">\r\n            UnLock Now\r\n          </button> -->\r\n          <p v-else>Achieved</p>\r\n        </div>\r\n      </template>\r\n    </div>\r\n\r\n    <!-- <div id=\"eChartsContainer\" style=\"height: 350%\"></div>\r\n    <button @click=\"test()\">test</button>\r\n    <div>{{ test1 }}</div> -->\r\n  </q-page>\r\n</template>\r\n\r\n<script>\r\nvar echarts = require(\"../../echarts.min.js\");\r\nexport default {\r\n  data() {\r\n    return {\r\n      isFormData: false,\r\n      name: \"\", //当前用户的用户名\r\n      //userId: \"\", //当前用户的_id  可根据这两个信息去数据库User取数据\r\n      api: \"/score\",\r\n      Badges: [\r\n        {\r\n          name: \"10 Day\",\r\n          intro: \"daka for 10 days\",\r\n          picName: \"1.svg\",\r\n          getTime: \"\",\r\n          isget: true,\r\n          state: 0,\r\n        },\r\n        {\r\n          name: \"100 Day\",\r\n          intro: \"daka for 100 days\",\r\n          picName: \"2.svg\",\r\n          getTime: \"\",\r\n          isget: true,\r\n          state: 0,\r\n        },\r\n        {\r\n          name: \"1000 Day\",\r\n          intro: \"daka for 1000 days\",\r\n          picName: \"3.svg\",\r\n          getTime: \"\",\r\n          isget: true,\r\n          state: 0,\r\n        },\r\n\r\n        {\r\n          name: \"newbie scholar\",\r\n          intro: \"Completed 1 task\",\r\n          picName: \"4.svg\",\r\n          getTime: \"\",\r\n          isget: true,\r\n          state: 0,\r\n        },\r\n        {\r\n          name: \"Seasoned Apprentice\",\r\n          intro: \"Complete 10 tasks\",\r\n          picName: \"5.svg\",\r\n          getTime: \"\",\r\n          isget: true,\r\n          state: 0,\r\n        },\r\n        {\r\n          name: \"Learning Master\",\r\n          intro: \"Complete 100 tasks\",\r\n          picName: \"6.svg\",\r\n          getTime: \"\",\r\n          isget: true,\r\n          state: 0,\r\n        },\r\n\r\n        {\r\n          name: \"A student\",\r\n          intro: \"Ranking 50% for 10 times\",\r\n          picName: \"7.svg\",\r\n          getTime: \"\",\r\n          isget: true,\r\n          state: 0,\r\n        },\r\n        {\r\n          name: \"A+ student\",\r\n          intro: \"Ranking 30% for 10 times\",\r\n          picName: \"8.svg\",\r\n          getTime: \"\",\r\n          isget: true,\r\n          state: 0,\r\n        },\r\n        {\r\n          name: \"A++ student\",\r\n          intro: \"Ranking 10% for 10 times\",\r\n          picName: \"9.svg\",\r\n          getTime: \"\",\r\n          isget: true,\r\n          state: 0,\r\n        },\r\n      ],\r\n\r\n      dakaBadges: [],\r\n      taskBadges: [],\r\n      scoreBadges: [],\r\n\r\n      dakaDays: 0,\r\n      today: \"\",\r\n      studyre: [],\r\n      test1: 0,\r\n      progress: 15,\r\n      todayTime: \"\",\r\n      goal: \"\",\r\n      //打卡按钮\r\n      check: true,\r\n\r\n      //calendar\r\n      nowTime: Date.now(),\r\n      year: null,\r\n      month: null,\r\n      nowDate: null,\r\n      weekDay: [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"],\r\n      monLeap: [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\r\n      monNml: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\r\n      events: [\r\n        // {\r\n        //   id: 1,\r\n        //   date: \"2021-04-10\",\r\n        // },\r\n        // {\r\n        //   id: 2,\r\n        //   date: \"2021-01-21\",\r\n        // },\r\n      ],\r\n    };\r\n  },\r\n  components: {},\r\n  computed: {\r\n    monthDate() {\r\n      const index = this.month;\r\n      return this.year && this.year % 4 === 0\r\n        ? this.monLeap[index]\r\n        : this.monNml[index];\r\n    },\r\n    firstDay() {\r\n      return new Date(this.year, this.month, 1).getDay();\r\n    },\r\n  },\r\n\r\n  created() {\r\n    this.name = sessionStorage.getItem(\"userName\");\r\n    console.log(this.name);\r\n\r\n    this.$axios.get(this.api + \"/getbadges/?name=\" + this.name).then((res) => {\r\n      var list = res.data;\r\n      var allLen = this.Badges.length;\r\n      var badgesgot = list.myBadges;\r\n      var userlen = badgesgot.length;\r\n\r\n      if (badgesgot !== undefined && userlen !== 0) {\r\n        for (var i = 0; i < allLen; i++) {\r\n          for (var j = 0; j < userlen; j++) {\r\n            if (this.Badges[i].name == badgesgot[j].name) {\r\n              this.Badges[i].getTime = badgesgot[j].getTime;\r\n              this.Badges[i].isget = badgesgot[j].isget;\r\n              this.Badges[i].state = badgesgot[j].state;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      var tasklen = list.myTasks.length;\r\n      var dakalen = list.myDakas.length;\r\n      // var rank10= list.myRecords.rank10\r\n      var rank10 = list.myRecords.rank10;\r\n      var rank30 = list.myRecords.rank30;\r\n      var rank50 = list.myRecords.rank50;\r\n\r\n      if (dakalen >= 1000 && this.Badges[2].state == 0) {\r\n        this.Badges[2].state = 1;\r\n      }\r\n      if (dakalen >= 100 && this.Badges[1].state == 0) {\r\n        this.Badges[1].state = 1;\r\n      }\r\n      if (dakalen >= 100 && this.Badges[0].state == 0) {\r\n        this.Badges[0].state = 1;\r\n      }\r\n      if (tasklen >= 1 && this.Badges[3].state == 0) {\r\n        this.Badges[3].state = 1;\r\n      }\r\n      if (tasklen >= 10 && this.Badges[4].state == 0) {\r\n        this.Badges[4].state = 1;\r\n      }\r\n      if (tasklen >= 100 && this.Badges[5].state == 0) {\r\n        this.Badges[5].state = 1;\r\n      }\r\n      if (rank10 >= 10 && this.Badges[8].state == 0) {\r\n        this.Badges[8].state = 1;\r\n      }\r\n      if (rank30 >= 10 && this.Badges[7].state == 0) {\r\n        this.Badges[7].state = 1;\r\n      }\r\n      if (rank50 >= 10 && this.Badges[6].state == 0) {\r\n        this.Badges[6].state = 1;\r\n      }\r\n\r\n      this.dakaBadges.push(this.Badges[0], this.Badges[1], this.Badges[2]);\r\n      this.taskBadges.push(this.Badges[3], this.Badges[4], this.Badges[5]);\r\n      this.scoreBadges.push(this.Badges[6], this.Badges[7], this.Badges[8]);\r\n    });\r\n\r\n    this.$axios\r\n      .get(this.api + \"/studyRecord/?name=\" + this.name)\r\n      .then((res) => {\r\n        this.studyre = res.data;\r\n        this.formEcharts();\r\n        this.test();\r\n      });\r\n\r\n    this.$axios.get(this.api + \"/getdaka/?name=\" + this.name).then((res) => {\r\n      console.log(res.data);\r\n      var list = res.data.myDakas;\r\n      //add\r\n      // this.dakaDays = list.length\r\n      const nowDay = this.$moment().format(\"YYYY-MM-DD\");\r\n      list.find((event) => {\r\n        if (event.date == nowDay) {\r\n          this.check = false;\r\n        }\r\n      });\r\n      this.events = list;\r\n    });\r\n\r\n    this.$axios.get(this.api + \"/badges/?name=\" + this.name).then((res) => {\r\n      var records = res.data;\r\n    });\r\n  },\r\n  updated() {},\r\n  mounted() {\r\n    this.initialize();\r\n    this.isDaka();\r\n  },\r\n  methods: {\r\n    //badges\r\n    unlock(type, index) {\r\n      let today = this.$moment(new Date()).format(\"YYYY-MM-DD\");\r\n      var badge;\r\n      if (type == \"daka\") {\r\n        this.dakaBadges[index].isget = false;\r\n        this.dakaBadges[index].getTime = today;\r\n        this.dakaBadges[index].state = 2;\r\n        badge = this.dakaBadges[index];\r\n      } else if (type == \"score\") {\r\n        this.scoreBadges[index].isget = false;\r\n        this.scoreBadges[index].getTime = today;\r\n        this.scoreBadges[index].state = 2;\r\n        badge = this.scoreBadges[index];\r\n      } else if (type == \"task\") {\r\n        this.taskBadges[index].isget = false;\r\n        this.taskBadges[index].getTime = today;\r\n        this.taskBadges[index].state = 2;\r\n        badge = this.taskBadges[index];\r\n      }\r\n      this.$axios.post(\"/score/addMyBadges\", {\r\n        params: {\r\n          name: this.name,\r\n          mybadge: badge,\r\n        },\r\n      });\r\n    },\r\n\r\n    changepro(num) {\r\n      this.progress = num;\r\n    },\r\n    test() {\r\n      var arr = this.studyre;\r\n      var arry = [];\r\n      var today = this.$moment(new Date()).format(\"MM/DD\");\r\n      arr.forEach((d) => {\r\n        const recordTime = this.$moment(\r\n          d.recordTime,\r\n          \"YYYY/MM/DD hh:mm:ss\"\r\n        ).format(\"MM/DD\");\r\n        const listenTime = Math.floor((d.listenTime / 60) * 100) / 100;\r\n        if (recordTime == today) {\r\n          arry.push(listenTime);\r\n        }\r\n      });\r\n      var x = eval(arry.join(\"+\"));\r\n      if (!x) {\r\n        this.test1 = 0;\r\n      } else {\r\n        this.test1 = x;\r\n      }\r\n    },\r\n\r\n    //折线图\r\n    formEcharts() {\r\n      var container = document.getElementById(\"eChartsContainer\");\r\n      var myChart = echarts.init(container);\r\n      var xData = [];\r\n      var yData = [];\r\n\r\n      //处理数据，1.合并同一个日期的听写时间 2.改变时间样式成MM/DD 3.将具体听写时间转化成分钟\r\n      var arr = this.studyre;\r\n      if (arr.length > 0) {\r\n        this.isFormData = true;\r\n      }\r\n      var arry = [];\r\n      arr.forEach((d) => {\r\n        const recordTime = this.$moment(\r\n          d.recordTime,\r\n          \"YYYY/MM/DD hh:mm:ss\"\r\n        ).format(\"MM/DD\");\r\n        const listenTime = Math.floor((d.listenTime / 60) * 100) / 100;\r\n        arry.push({ recordTime, listenTime });\r\n      });\r\n      let newArr = [];\r\n      var temp = {};\r\n      for (var i in arry) {\r\n        var key = arry[i].recordTime;\r\n        if (temp[key]) {\r\n          temp[key].recordTime = temp[key].recordTime;\r\n          temp[key].listenTime = temp[key].listenTime + arry[i].listenTime;\r\n        } else {\r\n          temp[key] = {};\r\n          temp[key].recordTime = arry[i].recordTime;\r\n          temp[key].listenTime = arry[i].listenTime;\r\n        }\r\n      }\r\n      for (var k in temp) {\r\n        newArr.push(temp[k]);\r\n      }\r\n\r\n      for (var i = 0; i < newArr.length; i++) {\r\n        if (newArr[i].listenTime != \"\") {\r\n          xData.push(newArr[i].recordTime);\r\n          yData.push(newArr[i].listenTime);\r\n        }\r\n      }\r\n\r\n      var option = {\r\n        xAxis: {\r\n          name: \"Date\",\r\n          type: \"category\",\r\n          data: xData,\r\n        },\r\n        yAxis: {\r\n          name: \"min\",\r\n          type: \"value\",\r\n        },\r\n        series: [\r\n          {\r\n            data: yData,\r\n            type: \"line\",\r\n          },\r\n        ],\r\n      };\r\n      // 使用刚指定的配置项和数据显示图表。\r\n      myChart.setOption(option);\r\n    },\r\n\r\n    initialize() {\r\n      const now = new Date();\r\n      this.year = now.getFullYear();\r\n      this.month = now.getMonth();\r\n      this.nowDate = now.getDate();\r\n    },\r\n    isBeforeToday(date) {\r\n      const target = new Date(this.year, this.month, date + 1);\r\n      return target < this.nowTime;\r\n    },\r\n    changeMonth(next) {\r\n      const targetMonth = this.month + next;\r\n      if (targetMonth < 0) {\r\n        this.month = 11;\r\n        this.year--;\r\n      } else if (targetMonth > 11) {\r\n        this.month = 0;\r\n        this.year++;\r\n      } else {\r\n        this.month = targetMonth;\r\n      }\r\n    },\r\n    //isDaka\r\n    isDaka(dayToCheck) {\r\n      const month = this.month + 1;\r\n      const year = this.year;\r\n      var isdaka = \"0\";\r\n      if (this.events) {\r\n        this.events.find((event) => {\r\n          let eventYear = event.date.split(\"-\")[0];\r\n          let eventDay = event.date.split(\"-\")[2];\r\n          let eventMonth = event.date.split(\"-\")[1].slice(1);\r\n          if (\r\n            dayToCheck == eventDay &&\r\n            eventMonth == month &&\r\n            eventYear == year\r\n          ) {\r\n            isdaka = \"1\";\r\n          }\r\n        });\r\n      }\r\n      if (isdaka == \"1\") {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    isNowYearMonthDay(date) {\r\n      const now = new Date();\r\n      const nowYear = now.getFullYear();\r\n      const nowMonth = now.getMonth();\r\n      const nowDay = this.$moment().format(\"D\");\r\n      if (this.year === nowYear && this.month === nowMonth && date == nowDay) {\r\n        console.log(\"aaaaaaa\" + date + nowDay);\r\n      }\r\n      return this.year === nowYear && this.month === nowMonth && date == nowDay;\r\n    },\r\n    Daka() {\r\n      var goal = this.test1 / this.progress;\r\n      if (goal >= 1) {\r\n        const name = this.name;\r\n        const time = this.test1;\r\n        const date = this.$moment(new Date()).format(\"YYYY-MM-DD\");\r\n        this.$axios.post(this.api + \"/daka\", {\r\n          params: {\r\n            name: name,\r\n            time: time,\r\n            date: date,\r\n          },\r\n        });\r\n        console.log(\"success\" + date + time);\r\n        this.events.push({ time: time, date: date });\r\n        this.check = false;\r\n        this.dakaDays = this.dakaDays + 1;\r\n      } else if (goal < 1) {\r\n        this.$notify({\r\n          // title: \"警告\",\r\n          type: \"warning\",\r\n          message: \"今天的计划还没完成哦，加油！\",\r\n          position: \"top-right\",\r\n          offset: 100,\r\n        });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.progress {\r\n  width: 50rem;\r\n}\r\n\r\nimg {\r\n  display: block;\r\n  width: 240px;\r\n  height: 200px;\r\n}\r\n\r\n.pic.active {\r\n  -webkit-filter: grayscale(100%);\r\n  filter: grayscale(100%);\r\n}\r\n\r\n.container_badge {\r\n  display: inline-grid;\r\n  grid-template-columns: 250px 250px 250px;\r\n  grid-template-rows: 250px;\r\n}\r\n\r\n.pic {\r\n  text-align: center;\r\n  /* border: 1px solid #e5e4e9; */\r\n}\r\n\r\n/* calendar css-code */\r\nbody {\r\n  -webkit-font-smoothing: antialiased;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  text-rendering: optimizeLegibility;\r\n}\r\n\r\n/* * {\r\n  font-family: \"Montserrat\";\r\n} */\r\n\r\n.vue-calendar {\r\n  position: relative;\r\n  max-width: 450px;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  padding: 9px;\r\n  background-color: #f8fafa;\r\n  -moz-box-shadow: 0px 15px 15px rgba(32, 23, 23, 0.09);\r\n  -webkit-box-shadow: 0px 15px 15px rgba(32, 23, 23, 0.09);\r\n  box-shadow: 0px 15px 15px rgba(32, 23, 23, 0.09);\r\n}\r\n.vue-calendar ul {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n}\r\n.vue-calendar ul li {\r\n  width: calc(100% / 7);\r\n  text-align: center;\r\n}\r\n.vue-calendar__title {\r\n  text-align: center;\r\n  margin: 10px 0;\r\n  color: #222741;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n}\r\n.vue-calendar__title h3,\r\n.vue-calendar__title p {\r\n  margin: 0;\r\n}\r\n.vue-calendar__navigation {\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 10px;\r\n}\r\n.vue-calendar__navigation span {\r\n  position: absolute;\r\n  display: block;\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  opacity: 0.6;\r\n  cursor: pointer;\r\n}\r\n.vue-calendar__navigation span:hover {\r\n  opacity: 1;\r\n}\r\n.vue-calendar__navigation span.prev {\r\n  left: 0;\r\n}\r\n.vue-calendar__navigation span.next {\r\n  right: 18px;\r\n}\r\n.vue-calendar__week ul li {\r\n  font-weight: 700;\r\n  padding: 10px 0;\r\n  color: #99a4ae;\r\n}\r\n.vue-calendar__week {\r\n  border-bottom: 2px solid #f2f6f8;\r\n  margin-bottom: 4px;\r\n  justify-content: center;\r\n}\r\n.vue-calendar__main ul {\r\n  flex-wrap: wrap;\r\n}\r\n.vue-calendar__main ul li {\r\n  height: 54px;\r\n  padding: 5px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  box-sizing: border-box;\r\n  padding-top: 14px;\r\n  font-style: \"Montserrat\";\r\n  border: 2px solid transparent;\r\n  border-radius: 50%;\r\n  color: #424588;\r\n  font-size: 12px;\r\n  font-weight: 700;\r\n  /* display: flex; */\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.date {\r\n  font-style: \"Montserrat\";\r\n}\r\n.vue-calendar__main ul li.today {\r\n  color: #fff;\r\n  background: #000;\r\n}\r\n.vue-calendar__main ul li.over {\r\n  opacity: 0.6;\r\n}\r\n\r\n.vue-calendar__main ul li.daka {\r\n  border-radius: 9999px;\r\n  background-color: #66dcec;\r\n  border-color: #fefefe;\r\n  box-shadow: 0px 2px 2px rgb(0 0 0 / 10%);\r\n  color: #fff;\r\n}\r\n.text-white {\r\n  --tw-text-opacity: 1;\r\n  color: rgba(255, 255, 255, var(--tw-text-opacity));\r\n}\r\n.rounded-full {\r\n  border-radius: 9999px;\r\n}\r\n.bg-blue-600 {\r\n  --tw-bg-opacity: 1;\r\n  background-color: rgba(37, 99, 235, var(--tw-bg-opacity));\r\n}\r\n.vue-calendar__main ul li:not(.today):not(.over):hover {\r\n  background: tomato;\r\n}\r\n.vue-calendar__main ul li .text,\r\n.vue-calendar__main ul li .price {\r\n  font-size: 10px;\r\n}\r\n</style>\r\n"]}]}
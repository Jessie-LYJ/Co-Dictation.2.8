{"remainingRequest":"D:\\资料\\codictation.2.4\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\资料\\codictation.2.4\\codictation\\src\\components\\profile\\addUsers.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\资料\\codictation.2.4\\codictation\\src\\components\\profile\\addUsers.vue","mtime":1615686750031},{"path":"D:\\资料\\codictation.2.4\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\资料\\codictation.2.4\\codictation\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\资料\\codictation.2.4\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js","mtime":499162500000},{"path":"D:\\资料\\codictation.2.4\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"D:\\资料\\codictation.2.4\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\资料\\codictation.2.4\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBIZWFkZXIgZnJvbSAiLi4vYmFzaWMvSGVhZGVyLnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWNjb3VudExpc3Q6IFtdLAogICAgICB0YWJsZTogZmFsc2UsCiAgICAgIGNvdW50OiAwLCAvL+mYu+atouaWh+S7tuS4iuS8oOaIkOWKn+S6i+S7tuinpuWPkeeahOS6jOasoeS4iuS8oAogICAgICB0YWc6ICIiLAogICAgICB0YWdMaXN0OiBbXSwgLy/ojrflj5bor6XnlKjmiLflt7Lmt7vliqDnmoR0YWdzCiAgICAgIHRhZ0V4aXN0OiBmYWxzZSwKICAgICAgb3duZXI6ICIiLAogICAgICBzdGF0dXM6ICIiLAogICAgICBhcGk6ICIvYXBpIiwKICAgICAgYWxsRGF0YTogW10sCiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgSGVhZGVyLAogIH0sCiAgbWV0aG9kczogewogICAgc2hvd1RhYmxlKCkgewogICAgICBpZiAodGhpcy5hY2NvdW50TGlzdC5sZW5ndGggPiAwKSB7CiAgICAgICAgdGhpcy50YWJsZSA9ICF0aGlzLnRhYmxlOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICBtZXNzYWdlOiAi5b2T5YmN5pyq5a+85YWl5ZCN5Y2V5ZOmIiwKICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwKICAgICAgICAgIHBvc2l0aW9uOiAidG9wLXJpZ2h0IiwKICAgICAgICAgIG9mZnNldDogMTAwLAogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgZ2V0RmlsZShldmVudCkgewogICAgICB0aGlzLmNvdW50Kys7CiAgICAgIGlmICh0aGlzLmNvdW50ID09IDEpIHsKICAgICAgICBsZXQgX3RoaXMgPSB0aGlzOwogICAgICAgIGxldCBpbnB1dERPTSA9IHRoaXMuJHJlZnMuaW5wdXRlcjsgLy8g6YCa6L+HRE9N5Y+W5paH5Lu25pWw5o2uCiAgICAgICAgaWYgKGV2ZW50LnRhcmdldC5maWxlcy5sZW5ndGggPT0gMSkgewogICAgICAgICAgdGhpcy5maWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzWzBdOwogICAgICAgIH0KICAgICAgICB2YXIgckFCUyA9IGZhbHNlOyAvL+aYr+WQpuWwhuaWh+S7tuivu+WPluS4uuS6jOi/m+WItuWtl+espuS4sgogICAgICAgIHZhciBmID0gdGhpcy5maWxlOwogICAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICAgIC8vaWYgKCFGaWxlUmVhZGVyLnByb3RvdHlwZS5yZWFkQXNCaW5hcnlTdHJpbmcpIHsKICAgICAgICBGaWxlUmVhZGVyLnByb3RvdHlwZS5yZWFkQXNCaW5hcnlTdHJpbmcgPSBmdW5jdGlvbiAoZikgewogICAgICAgICAgdmFyIGJpbmFyeSA9ICIiOwogICAgICAgICAgdmFyIHJBQlMgPSBmYWxzZTsgLy/mmK/lkKblsIbmlofku7bor7vlj5bkuLrkuozov5vliLblrZfnrKbkuLIKICAgICAgICAgIHZhciBwdCA9IHRoaXM7CiAgICAgICAgICB2YXIgd2I7IC8v6K+75Y+W5a6M5oiQ55qE5pWw5o2uCiAgICAgICAgICB2YXIgb3V0ZGF0YTsKICAgICAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIHZhciBieXRlcyA9IG5ldyBVaW50OEFycmF5KHJlYWRlci5yZXN1bHQpOwogICAgICAgICAgICB2YXIgbGVuZ3RoID0gYnl0ZXMuYnl0ZUxlbmd0aDsKICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgICAgICAgIGJpbmFyeSArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGJ5dGVzW2ldKTsKICAgICAgICAgICAgfQogICAgICAgICAgICB2YXIgWExTWCA9IHJlcXVpcmUoInhsc3giKTsKICAgICAgICAgICAgaWYgKHJBQlMpIHsKICAgICAgICAgICAgICB3YiA9IFhMU1gucmVhZChidG9hKGZpeGRhdGEoYmluYXJ5KSksIHsKICAgICAgICAgICAgICAgIC8v5omL5Yqo6L2s5YyWCiAgICAgICAgICAgICAgICB0eXBlOiAiYmFzZTY0IiwKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB3YiA9IFhMU1gucmVhZChiaW5hcnksIHsKICAgICAgICAgICAgICAgIHR5cGU6ICJiaW5hcnkiLAogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIG91dGRhdGHlsLHmmK/kvaDmg7PopoHnmoTkuJzopb8gZXhjZWzlr7zlhaXnmoTmlbDmja4KICAgICAgICAgICAgb3V0ZGF0YSA9IFhMU1gudXRpbHMuc2hlZXRfdG9fanNvbih3Yi5TaGVldHNbd2IuU2hlZXROYW1lc1swXV0pOwogICAgICAgICAgICAvLyBleGNlbCDmlbDmja7lho3lpITnkIYKICAgICAgICAgICAgbGV0IGFyciA9IFtdOwogICAgICAgICAgICBvdXRkYXRhLm1hcCgodikgPT4gewogICAgICAgICAgICAgIGxldCBvYmogPSB7fTsKICAgICAgICAgICAgICBvYmouc3R1aWQgPSB2LuWtpuWPtzsKICAgICAgICAgICAgICBvYmoubmFtZSA9IHYu5a2m5Y+3ICsgdi7lp5PlkI07CiAgICAgICAgICAgICAgb2JqLnN0dW5hbWUgPSB2LuWnk+WQjTsKICAgICAgICAgICAgICBvYmoucGFzc3dvcmQgPSB2LuWvhueggTsKICAgICAgICAgICAgICBhcnIucHVzaChvYmopOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgX3RoaXMuYWNjb3VudExpc3QgPSBbLi4uYXJyXTsKICAgICAgICAgICAgdGhpcy5hYmxlID0gZmFsc2U7CiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKF90aGlzLmFjY291bnRMaXN0KTsKICAgICAgICAgICAgX3RoaXMucmVsb2FkKCk7CiAgICAgICAgICB9OwogICAgICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGYpOwogICAgICAgIH07CiAgICAgICAgaWYgKHJBQlMpIHsKICAgICAgICAgIHJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcihmKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmVhZGVyLnJlYWRBc0JpbmFyeVN0cmluZyhmKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBzdWJtaXRMaXN0KCkgewogICAgICBpZiAodGhpcy5hY2NvdW50TGlzdC5sZW5ndGggPiAwKSB7CiAgICAgICAgaWYgKHRoaXMudGFnLnRyaW0oKS5sZW5ndGggPiAwKSB7CiAgICAgICAgICB0aGlzLiRheGlvcwogICAgICAgICAgICAucG9zdCh0aGlzLmFwaSArICIvYWRkVXNlcnMiLCB7CiAgICAgICAgICAgICAgb3duZXI6IHRoaXMub3duZXIsCiAgICAgICAgICAgICAgdXNlckxpc3Q6IHRoaXMuYWNjb3VudExpc3QsCiAgICAgICAgICAgICAgdGFnTmFtZTogdGhpcy50YWcsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC50aGVuKChyZXN1bHQpID0+IHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCLmlbDmja7lt7LkuIrkvKAiKTsKICAgICAgICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgbWVzc2FnZTogIuWvvOWFpeaIkOWKn++8gSIsCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogInRvcC1yaWdodCIsCiAgICAgICAgICAgICAgICBvZmZzZXQ6IDEwMCwKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIuZ28oMCk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgICAgIG1lc3NhZ2U6ICLmoIfpopjkuI3og73kuLrnqbrvvIEiLAogICAgICAgICAgICBwb3NpdGlvbjogInRvcC1yaWdodCIsCiAgICAgICAgICAgIG9mZnNldDogMTAwLAogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICBtZXNzYWdlOiAi5b2T5YmN5pyq5a+85YWl5ZCN5Y2V5ZOmIiwKICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwKICAgICAgICAgIHBvc2l0aW9uOiAidG9wLXJpZ2h0IiwKICAgICAgICAgIG9mZnNldDogMTAwLAogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgY2hlY2tUYWcoKSB7CiAgICAgIC8v5qOA5rWL5qCH6aKY5piv5ZCm6YeN5ZCNCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy50YWdMaXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKHRoaXMudGFnTGlzdFtpXSA9PSB0aGlzLnRhZykgewogICAgICAgICAgdGhpcy50YWdFeGlzdCA9IHRydWU7IC8v6YeN5ZCN5YiZ5peg5rOV5o+Q5LqkCiAgICAgICAgICByZXR1cm47CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMudGFnRXhpc3QgPSBmYWxzZTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBnZXRUYWdMaXN0KCkgewogICAgICAvL+i/nuaOpeaVsOaNruW6k++8jOiOt+WPluaVsOaNruW6k+S4reWxnuS6juW9k+WJjeeUqOaIt+eahHRhZ+WIl+ihqAogICAgICB0aGlzLiRheGlvcy5nZXQodGhpcy5hcGkgKyAiL3RhZ0xpc3Q/b3duZXI9IiArIHRoaXMub3duZXIpLnRoZW4oKHJlcykgPT4gewogICAgICAgIHRoaXMuYWxsRGF0YSA9IHJlcy5kYXRhOwogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5hbGxEYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB0aGlzLnRhZ0xpc3QucHVzaCh0aGlzLmFsbERhdGFbaV0udGFnTmFtZSk7CiAgICAgICAgfQogICAgICAgIGNvbnNvbGUubG9nKHRoaXMuYWxsRGF0YSk7CiAgICAgIH0pOwogICAgfSwKICAgIGdldFN0YXR1cygpIHsKICAgICAgLy/ov57mjqXmlbDmja7lupPvvIzojrflj5bmlbDmja7lupPkuK3lsZ7kuo7lvZPliY3nlKjmiLfnmoRzdGF0dXMKICAgICAgdGhpcy4kYXhpb3MuZ2V0KHRoaXMuYXBpICsgIi9wcm9maWxlP25hbWU9IiArIHRoaXMub3duZXIpLnRoZW4oKHJlcykgPT4gewogICAgICAgIHRoaXMuc3RhdHVzID0gcmVzLmRhdGFbMF0uc3RhdHVzOwogICAgICB9KTsKICAgIH0sCiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5vd25lciA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oInVzZXJOYW1lIik7CiAgICB0aGlzLmdldFRhZ0xpc3QoKTsKICAgIHRoaXMuZ2V0U3RhdHVzKCk7CiAgfSwKfTsK"},{"version":3,"sources":["addUsers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"addUsers.vue","sourceRoot":"src/components/profile","sourcesContent":["<template>\n  <q-page class=\"q-pa-md\">\n    <h3 class=\"q-my-md\">Add Users</h3>\n    <q-separator insert style=\"width: 55%\" class=\"q-mb-lg\" />\n    <input type=\"file\" single accept=\".xlsx\" @change=\"getFile($event)\" />\n    <br />\n    添加名单标签：\n    <input type=\"text\" style=\"margin-top:15px\" v-model=\"tag\" @keyup=\"checkTag()\" />\n    <p v-if=\"tagExist\" style=\"font-size: 80%; color: red\">\n      ×标签已存在，请重新命名\n    </p>\n    <br>\n    <el-button type=\"info\" @click=\"showTable()\" style=\"margin-top:15px\">Preview</el-button>\n    <el-button type=\"primary\" @click=\"submitList()\" :disabled=\"tagExist\"\n      >Import</el-button\n    >\n    <el-table\n      :data=\"accountList\"\n      border\n      style=\"width: 30%; margin-left: 30%; margin-top: 3%\"\n      v-if=\"table\"\n    >\n      <el-table-column prop=\"stuid\" label=\"学号\" width=\"200\"> </el-table-column>\n      <el-table-column prop=\"stuname\" label=\"姓名\"> </el-table-column>\n    </el-table>\n\n    <el-table :data=\"allData\" style=\"width: 80%; margin-top: 50px\">\n      <el-table-column type=\"expand\">\n        <template slot-scope=\"props\">\n          <el-table :data=\"props.row.userList\" height=\"200\" border>\n            <el-table-column prop=\"stuid\" label=\"学号\"></el-table-column>\n            <el-table-column prop=\"stuname\" label=\"姓名\"></el-table-column>\n          </el-table>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"小组标签列表\" prop=\"tagName\"> </el-table-column>\n    </el-table>\n  </q-page>\n</template>\n\n<script>\nimport Header from \"../basic/Header.vue\";\nexport default {\n  data() {\n    return {\n      accountList: [],\n      table: false,\n      count: 0, //阻止文件上传成功事件触发的二次上传\n      tag: \"\",\n      tagList: [], //获取该用户已添加的tags\n      tagExist: false,\n      owner: \"\",\n      status: \"\",\n      api: \"/api\",\n      allData: [],\n    };\n  },\n  components: {\n    Header,\n  },\n  methods: {\n    showTable() {\n      if (this.accountList.length > 0) {\n        this.table = !this.table;\n      } else {\n        this.$notify({\n          message: \"当前未导入名单哦\",\n          type: \"warning\",\n          position: \"top-right\",\n          offset: 100,\n        });\n      }\n    },\n    getFile(event) {\n      this.count++;\n      if (this.count == 1) {\n        let _this = this;\n        let inputDOM = this.$refs.inputer; // 通过DOM取文件数据\n        if (event.target.files.length == 1) {\n          this.file = event.target.files[0];\n        }\n        var rABS = false; //是否将文件读取为二进制字符串\n        var f = this.file;\n        var reader = new FileReader();\n        //if (!FileReader.prototype.readAsBinaryString) {\n        FileReader.prototype.readAsBinaryString = function (f) {\n          var binary = \"\";\n          var rABS = false; //是否将文件读取为二进制字符串\n          var pt = this;\n          var wb; //读取完成的数据\n          var outdata;\n          var reader = new FileReader();\n          reader.onload = function (e) {\n            var bytes = new Uint8Array(reader.result);\n            var length = bytes.byteLength;\n            for (var i = 0; i < length; i++) {\n              binary += String.fromCharCode(bytes[i]);\n            }\n            var XLSX = require(\"xlsx\");\n            if (rABS) {\n              wb = XLSX.read(btoa(fixdata(binary)), {\n                //手动转化\n                type: \"base64\",\n              });\n            } else {\n              wb = XLSX.read(binary, {\n                type: \"binary\",\n              });\n            }\n            // outdata就是你想要的东西 excel导入的数据\n            outdata = XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]]);\n            // excel 数据再处理\n            let arr = [];\n            outdata.map((v) => {\n              let obj = {};\n              obj.stuid = v.学号;\n              obj.name = v.学号 + v.姓名;\n              obj.stuname = v.姓名;\n              obj.password = v.密码;\n              arr.push(obj);\n            });\n            _this.accountList = [...arr];\n            this.able = false;\n            // console.log(_this.accountList);\n            _this.reload();\n          };\n          reader.readAsArrayBuffer(f);\n        };\n        if (rABS) {\n          reader.readAsArrayBuffer(f);\n        } else {\n          reader.readAsBinaryString(f);\n        }\n      }\n    },\n    submitList() {\n      if (this.accountList.length > 0) {\n        if (this.tag.trim().length > 0) {\n          this.$axios\n            .post(this.api + \"/addUsers\", {\n              owner: this.owner,\n              userList: this.accountList,\n              tagName: this.tag,\n            })\n            .then((result) => {\n              console.log(result);\n              console.log(\"数据已上传\");\n              this.$notify({\n                type: \"success\",\n                message: \"导入成功！\",\n                position: \"top-right\",\n                offset: 100,\n              });\n              this.$router.go(0);\n            });\n        } else {\n          this.$notify({\n            type: \"warning\",\n            message: \"标题不能为空！\",\n            position: \"top-right\",\n            offset: 100,\n          });\n        }\n      } else {\n        this.$notify({\n          message: \"当前未导入名单哦\",\n          type: \"warning\",\n          position: \"top-right\",\n          offset: 100,\n        });\n      }\n    },\n    checkTag() {\n      //检测标题是否重名\n      for (var i = 0; i < this.tagList.length; i++) {\n        if (this.tagList[i] == this.tag) {\n          this.tagExist = true; //重名则无法提交\n          return;\n        } else {\n          this.tagExist = false;\n        }\n      }\n    },\n    getTagList() {\n      //连接数据库，获取数据库中属于当前用户的tag列表\n      this.$axios.get(this.api + \"/tagList?owner=\" + this.owner).then((res) => {\n        this.allData = res.data;\n        for (var i = 0; i < this.allData.length; i++) {\n          this.tagList.push(this.allData[i].tagName);\n        }\n        console.log(this.allData);\n      });\n    },\n    getStatus() {\n      //连接数据库，获取数据库中属于当前用户的status\n      this.$axios.get(this.api + \"/profile?name=\" + this.owner).then((res) => {\n        this.status = res.data[0].status;\n      });\n    },\n  },\n  created() {\n    this.owner = sessionStorage.getItem(\"userName\");\n    this.getTagList();\n    this.getStatus();\n  },\n};\n</script>\n\n<style scoped>\n</style>"]}]}
{"remainingRequest":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.8\\codictation\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.8\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js?kebab!F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.8\\codictation\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-1!F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.8\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.8\\codictation\\src\\views\\Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.8\\codictation\\src\\views\\Home.vue","mtime":1618194550919},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.8\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.8\\codictation\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.8\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.8\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.8\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
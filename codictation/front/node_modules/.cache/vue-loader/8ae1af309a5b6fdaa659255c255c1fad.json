{"remainingRequest":"F:\\codictation.2.6\\codictation\\codictation\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\codictation.2.6\\codictation\\codictation\\codictation\\src\\components\\back\\user\\index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"F:\\codictation.2.6\\codictation\\codictation\\codictation\\src\\components\\back\\user\\index.vue","mtime":1614158454605},{"path":"F:\\codictation.2.6\\codictation\\codictation\\codictation\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation.2.6\\codictation\\codictation\\codictation\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\codictation.2.6\\codictation\\codictation\\codictation\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\codictation.2.6\\codictation\\codictation\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"F:\\codictation.2.6\\codictation\\codictation\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation.2.6\\codictation\\codictation\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmVsLWRyYXdlci5ydGwgew0KICBvdmVyZmxvdzogc2Nyb2xsOw0KfQ0KDQplbC1idXR0b24gew0KICBtYXJnaW46IDAsIDVweDsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+aA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/back/user","sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <div class=\"filter-container\" style=\"margin: 0 0 10px 0\">\r\n      <el-input\r\n        v-model=\"Qlist.name\"\r\n        placeholder=\"用户名\"\r\n        style=\"width: 200px; margin-right: 5px\"\r\n        class=\"filter-item\"\r\n        @keyup.enter.native=\"handleFilter\"\r\n      />\r\n      <el-input\r\n        v-model=\"Qlist.status\"\r\n        placeholder=\"身份\"\r\n        style=\"width: 200px; margin-right: 7px\"\r\n        class=\"filter-item\"\r\n        @keyup.enter.native=\"handleFilter\"\r\n      />\r\n      <el-button\r\n        class=\"filter-item\"\r\n        type=\"primary\"\r\n        icon=\"el-icon-search\"\r\n        @click=\"handleFilter\"\r\n      >\r\n        搜索\r\n      </el-button>\r\n      <el-button\r\n        v-if=\"showBack\"\r\n        class=\"filter-item\"\r\n        type=\"primary\"\r\n        icon=\"el-icon-search\"\r\n        @click=\"closeFilter\"\r\n      >\r\n        返回\r\n      </el-button>\r\n      <el-button\r\n        class=\"filter-item\"\r\n        style=\"margin-left: 10px\"\r\n        type=\"primary\"\r\n        icon=\"el-icon-edit\"\r\n        @click=\"handleCreate\"\r\n      >\r\n        添加\r\n      </el-button>\r\n    </div>\r\n\r\n    <el-table\r\n      v-loading=\"loading\"\r\n      element-loading-text=\"拼命加载中\"\r\n      element-loading-spinner=\"el-icon-loading\"\r\n      element-loading-background=\"rgba(0, 0, 0, 0.8)\"\r\n      :data=\"users\"\r\n      style=\"width: 100%\"\r\n      border\r\n      fit\r\n      highlight-current-row\r\n      @sort-change=\"sortChange\"\r\n    >\r\n      <el-table-column type=\"index\" label=\"序号\"> </el-table-column>\r\n      <el-table-column prop=\"_id\" sortable=\"custom\" label=\"用户_id\" />\r\n      <el-table-column prop=\"stuid\" sortable=\"custom\" label=\"学生_id\" />\r\n      <el-table-column prop=\"name\" sortable=\"custom\" label=\"用户名\" />\r\n      <el-table-column prop=\"password\" label=\"密码\" />\r\n      <el-table-column prop=\"status\" sortable=\"custom\" label=\"身份\" />\r\n      <el-table-column\r\n        label=\"更多\"\r\n        align=\"center\"\r\n        width=\"300\"\r\n        class-name=\"small-padding fixed-width\"\r\n      >\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"\r\n              drawer = true;\r\n              findMyPublished(scope.$index, scope.row);\r\n            \"\r\n            >用户发布\r\n          </el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"\r\n              drawer = true;\r\n              findMyTasks(scope.$index, scope.row);\r\n            \"\r\n            >用户任务\r\n          </el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"\r\n              drawer = true;\r\n              findMyComments(scope.$index, scope.row);\r\n            \"\r\n            >用户评论\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column\r\n        label=\"操作\"\r\n        align=\"center\"\r\n        width=\"150\"\r\n        class-name=\"small-padding fixed-width\"\r\n      >\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"handleEdit(scope.$index, scope.row)\"\r\n            >编辑\r\n          </el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"danger\"\r\n            @click=\"handleDelete(scope.$index, scope.row)\"\r\n            >删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <br />\r\n    <el-pagination\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"\r\n      :current-page=\"Qlist.pagenum\"\r\n      :page-sizes=\"[10, 20, 30, 50]\"\r\n      :page-size=\"Qlist.pagesize\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      :total=\"total\"\r\n    >\r\n    </el-pagination>\r\n\r\n    <!-- 抽屉+树状展示用户列表 -->\r\n    <el-drawer\r\n      :title=\"drawerTitle\"\r\n      :visible.sync=\"drawer\"\r\n      direction=\"rtl\"\r\n      :modal-append-to-body=\"false\"\r\n    >\r\n      <el-tree\r\n        :data=\"list\"\r\n        :props=\"defaultProps\"\r\n        @node-click=\"handleNodeClick\"\r\n      ></el-tree>\r\n      <el-scrollbar></el-scrollbar>\r\n    </el-drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst _ = require(\"loadsh\");\r\n\r\nexport default {\r\n  name: \"user\",\r\n  data() {\r\n    return {\r\n      api: \"/user\",\r\n      totalData: [],\r\n      drawerTitle: \"\",\r\n      users: {},\r\n      Qlist: {\r\n        pagenum: 1, //当前页数\r\n        pagesize: 20,\r\n        name: \"\",\r\n        status: \"\",\r\n      },\r\n      total: \"\",\r\n      showBack: false,\r\n      drawer: false,\r\n      list: [],\r\n      defaultProps: {\r\n        children: \"children\",\r\n        label: \"label\",\r\n      },\r\n      loading: true,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.findUser();\r\n  },\r\n  methods: {\r\n    onSubmit() {\r\n      console.log(123434);\r\n    },\r\n    findUser() {\r\n      this.$axios.post(this.api + \"/find\").then((res) => {\r\n        this.users = _.chunk(res.data, this.Qlist.pagesize)[\r\n          this.Qlist.pagenum - 1\r\n        ];\r\n        this.totalData = res.data;\r\n        this.total = res.data.length;\r\n        this.loading = false;\r\n      });\r\n    }, //获取初始数据\r\n    sortChange(data) {\r\n      const { prop, order } = data;\r\n      this.$axios.post(this.api + \"/sort\", { prop, order }).then((res) => {\r\n        console.log(\"res:\", res);\r\n        this.users = res.data;\r\n      });\r\n    }, //对各列进行排序处理\r\n    handleEdit(index, item) {\r\n      this.$router.push({ path: \"/userEditor\", query: { _id: item._id } });\r\n    }, //编辑\r\n    handleDelete(index, item) {\r\n      this.$axios.post(this.api + \"/delete\", item).then((res) => {\r\n        console.log(\"res:\", res);\r\n        this.findUser();\r\n      });\r\n    }, //删除\r\n    handleCreate() {\r\n      this.$router.push(\"/userEditor\");\r\n    }, //创建\r\n    //筛选部分\r\n    handleFilter() {\r\n      if (this.Qlist.name == \"\" && this.Qlist.status == \"\") {\r\n        this.$message.error(\"请输入查询信息\");\r\n      } else {\r\n        this.$axios.post(this.api + \"/filter\", this.Qlist).then((res) => {\r\n          console.log(\"res:\", res);\r\n          this.users = res.data;\r\n          this.showBack = true;\r\n        });\r\n      }\r\n    }, //筛选数据\r\n    closeFilter() {\r\n      this.findUser();\r\n      this.Qlist = {\r\n        pagenum: 1, //当前页数\r\n        pagesize: 20,\r\n        name: \"\",\r\n        status: \"\",\r\n      };\r\n      this.showBack = false;\r\n    }, //关闭筛选\r\n    // 分页部分\r\n    handleSizeChange(val) {\r\n      this.Qlist.pagesize = val;\r\n      this.users = _.chunk(this.totalData, this.Qlist.pagesize)[\r\n        this.Qlist.pagenum - 1\r\n      ];\r\n    }, // 每页查看条数变化\r\n    handleCurrentChange(val) {\r\n      this.Qlist.pagenum = val;\r\n      this.users = _.chunk(this.totalData, this.Qlist.pagesize)[\r\n        this.Qlist.pagenum - 1\r\n      ];\r\n    }, // 当前页码变化\r\n\r\n    findMyPublished(index, item) {\r\n      this.drawerTitle = \"已发布\";\r\n      var list = item.myPublished;\r\n      this.list = [];\r\n      if (list.length == 0 || !list) {\r\n        this.list.push({ label: \"暂无数据\" });\r\n      } else {\r\n        for (var i = 0; i < list.length; i++) {\r\n          this.list.push({\r\n            label: \"标题: \" + list[i].title,\r\n            children: [\r\n              { label: \"任务id:\" + list[i].taskId },\r\n              { label: \"视频id: \" + list[i].videoId },\r\n              { label: \"截止时间: \" + list[i].deadline },\r\n              { label: \"验证码: \" + list[i].authcode },\r\n              { label: \"用户列表\", children: [] },\r\n              { label: \"标签: \" + list[i].label },\r\n              { label: \"发布时间: \" + list[i].time },\r\n              {\r\n                label:\r\n                  list[i].averScores == \"\" || \"undefined\"\r\n                    ? \"平均分: 暂无数据\"\r\n                    : \"平均分: \" + list[i].averScores,\r\n              },\r\n              { label: \"分数\", children: [] },\r\n              { label: \"技术详情\", children: [] },\r\n              { label: \"匹配详情\", children: [] },\r\n            ],\r\n          });\r\n\r\n          for (var j = 0; j < list[i].userList.length; j++) {\r\n            this.list[i].children[4].children.push({\r\n              label: \"学生id: \" + list[i].userList[j].stuid,\r\n              children: [\r\n                { label: \"姓名: \" + list[i].userList[j].name },\r\n                { label: \"密码: \" + list[i].userList[j].password },\r\n              ],\r\n            });\r\n          }\r\n\r\n          if (list[i].scoreList) {\r\n            for (var n = 0; n < list[i].scoreList.length; n++) {\r\n              this.list[i].children[8].children.push({\r\n                label: list[i].scoreList[n].name,\r\n                children: [\r\n                  { label: \"技术分: \" + list[i].scoreList[n].techScores },\r\n                  { label: \"匹配分: \" + list[i].scoreList[n].matchScores },\r\n                  { label: \"总分: \" + list[i].scoreList[n].scores },\r\n                ],\r\n              });\r\n              this.list[i].children[10].children.push({\r\n                label: list[i].matchList[n].name,\r\n                children: [\r\n                  { label: \"匹配率: \" + list[i].matchList[n].matchRate },\r\n                  { label: \"匹配分: \" + list[i].matchList[n].points },\r\n                  { label: \"时间差: \" + list[i].matchList[n].day },\r\n                ],\r\n              });\r\n            }\r\n          }\r\n\r\n          if (list[i].techList) {\r\n            var tl = {};\r\n            var sentenceList = [];\r\n            for (var j = 0; j < list[i].techList.length; j++) {\r\n              var stn = list[i].techList[j].sentence;\r\n              var names = list[i].techList[j].names;\r\n              var names2 = [];\r\n              for (var k = 0; k < names.length; k++) {\r\n                names2.push(\r\n                  names[k].name + \" \" + Math.round(names[k].percent * 100) + \"%\"\r\n                );\r\n              }\r\n              names = names2;\r\n              if (!tl[stn]) {\r\n                tl[stn] = [\r\n                  {\r\n                    word: list[i].techList[j].word,\r\n                    names: names,\r\n                    len: list[i].techList[j].len,\r\n                    points: list[i].techList[j].points,\r\n                  },\r\n                ];\r\n                sentenceList.push(stn);\r\n              } else {\r\n                tl[stn].push({\r\n                  word: list[i].techList[j].word,\r\n                  names: names,\r\n                  len: list[i].techList[j].len,\r\n                  points: list[i].techList[j].points,\r\n                });\r\n              }\r\n            }\r\n\r\n            for (var m = 0; m < sentenceList.length; m++) {\r\n              var stn = sentenceList[m];\r\n              this.list[i].children[9].children.push({\r\n                label: stn,\r\n                children: [],\r\n              });\r\n              for (var n = 0; n < tl[stn].length; n++) {\r\n                this.list[i].children[9].children[m].children.push({\r\n                  label: tl[stn][n].word,\r\n                  children: [\r\n                    { label: \"名单: \" + tl[stn][n].names },\r\n                    { label: \"人数：\" + tl[stn][n].len },\r\n                    { label: \"分值：\" + tl[stn][n].points },\r\n                  ],\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    findMyTasks(index, item) {\r\n      this.drawerTitle = \"用户任务\";\r\n      var list = item.myTasks;\r\n      this.list = [];\r\n      if (list.length == 0 || !list) {\r\n        this.list.push({ label: \"暂无数据\" });\r\n      } else {\r\n        for (var i = 0; i < list.length; i++) {\r\n          this.list.push({\r\n            label: \"标题: \" + list[i].title,\r\n            children: [\r\n              { label: \"任务id:\" + list[i].taskId },\r\n              { label: \"视频id: \" + list[i].videoId },\r\n              { label: \"截止时间: \" + list[i].deadline },\r\n              { label: \"验证码: \" + list[i].authcode },\r\n              { label: \"标签: \" + list[i].label },\r\n              { label: \"提交时间: \" + list[i].time },\r\n              {\r\n                label:\r\n                  list[i].averScores == \"\" || \"undefined\"\r\n                    ? \"平均分: 暂无数据\"\r\n                    : \"平均分: \" + list[i].averScores,\r\n              },\r\n              {\r\n                label:\r\n                  list[i].scores == \"\" || \"undefined\"\r\n                    ? \"分数: 暂无数据\"\r\n                    : \"分数: \" + list[i].scores,\r\n              },\r\n            ],\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    findMyComments(index, item) {\r\n      this.drawerTitle = \"用户评论\";\r\n      var list = item.myComments;\r\n      this.list = [];\r\n      if (list.length == 0 || !list) {\r\n        this.list.push({ label: \"暂无数据\" });\r\n      } else {\r\n        for (var i = 0; i < list.length; i++) {\r\n          this.list.push({\r\n            label: \"标题: \" + list[i].taskTitle,\r\n            children: [\r\n              { label: \"任务id:\" + list[i].taskId },\r\n              { label: \"提交时间: \" + list[i].time },\r\n              { label: \"评论: \" + list[i].comment },\r\n            ],\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    handleNodeClick(data) {\r\n      console.log(data);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.el-drawer.rtl {\r\n  overflow: scroll;\r\n}\r\n\r\nel-button {\r\n  margin: 0, 5px;\r\n}\r\n</style>\r\n"]}]}
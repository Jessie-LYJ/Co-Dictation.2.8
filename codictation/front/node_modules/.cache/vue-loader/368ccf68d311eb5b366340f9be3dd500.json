{"remainingRequest":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\src\\components\\profile\\mymistakes.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\src\\components\\profile\\mymistakes.vue","mtime":1614656772523},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIG5hbWU6ICIiLCAvL+W9k+WJjeeUqOaIt+eahOeUqOaIt+WQjQ0KICAgICAgLy91c2VySWQ6ICIiLCAvL+W9k+WJjeeUqOaIt+eahF9pZCAg5Y+v5qC55o2u6L+Z5Lik5Liq5L+h5oGv5Y675pWw5o2u5bqTVXNlcuWPluaVsOaNrg0KICAgICAgYXBpOiAiL3Njb3JlIiwNCiAgICAgIFdyb25nTGlzdHM6W10sDQogICAgICBsaXN0VHlwZTpbXSwNCiAgICAgIC8vIGNoZWNrZWRUeXBlOiIgIiwNCiAgICAgIHNlbnRlbmNlczpbXSwNCiAgICB9DQoNCiAgfSwNCiAgY3JlYXRlZCgpIHsNCiAgICB0aGlzLm5hbWUgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCJ1c2VyTmFtZSIpOw0KICAgIGNvbnNvbGUubG9nKHRoaXMubmFtZSk7DQogICAgdGhpcy4kYXhpb3MuZ2V0KHRoaXMuYXBpICsgIi93cm9uZ0xpc3QvP25hbWU9IiArIHRoaXMubmFtZSkudGhlbigocmVzKSA9PiB7DQogICAgdmFyIGxpc3QgPSByZXMuZGF0YS5teVdyb25nTGlzdHMNCiAgICB0aGlzLldyb25nTGlzdHMgPSByZXMuZGF0YS5teVdyb25nTGlzdHMNCiAgICANCiAgICAvLyB2YXIgdHlwZSA9IHRoaXMuY2hlY2tlZFR5cGUNCg0KLy/nrZvpgInlr7nlupTnmoTnsbvlnovnmoTlj6XlrZANCg0KLy/ov5Tlm57lrZjlnKjnmoTplJnor6/nsbvlnosNCmxldCBsaXN0MiA9IGxpc3QubWFwKGl0ZW0gPT4gaXRlbS50eXBlKQ0KbGV0IGxpc3QzID0gbGlzdDIuZmlsdGVyKGZ1bmN0aW9uIChlbGVtZW50LCBpbmRleCwgc2VsZikgew0KICAgIHJldHVybiBzZWxmLmluZGV4T2YoZWxlbWVudCkgPT09IGluZGV4Ow0KfSk7DQp0aGlzLmxpc3RUeXBlID0gbGlzdDMNCg0KICAgIH0pDQogIH0sDQogIG1ldGhvZHM6IHsNCmNoYW5nZXR5cGUoaXRlbSl7DQp2YXIgbGlzdCA9IHRoaXMuV3JvbmdMaXN0cw0KbGV0IG5ld0xpc3QgPSBsaXN0LmZpbHRlcihmdW5jdGlvbihlbGVtZW50KXsNCnJldHVybiBlbGVtZW50LnR5cGUgPT0gaXRlbX0pDQoNCmxldCBhcnIgPSBbXQ0KbmV3TGlzdC5mb3JFYWNoKGUgPT4gew0KICAgYXJyLnB1c2goZS5zZW50ZW5jZSkNCn0pDQp0aGlzLnNlbnRlbmNlcyA9IGFycg0KY29uc29sZS5sb2coYXJyKSANCmNvbnNvbGUubG9nKG5ld0xpc3QpIA0KfSwNCg0KDQogIH0sDQp9Ow0K"},{"version":3,"sources":["mymistakes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA","file":"mymistakes.vue","sourceRoot":"src/components/profile","sourcesContent":["<template>\r\n  <div class=\"q-pa-lg\">\r\n    <div id=\"container\">\r\n    <template v-for=\"item in listType\" class=\"type\">\r\n        <el-button type=\"primary\" @click=\"changetype(item)\" :key=\"item\">{{item}}</el-button>         \r\n    </template>\r\n    <template v-for=\"item in sentences\">\r\n       <el-card :key=\"item\" shadow=\"always\"><span v-html=\"item\"></span></el-card>\r\n    </template>\r\n  </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: \"\", //当前用户的用户名\r\n      //userId: \"\", //当前用户的_id  可根据这两个信息去数据库User取数据\r\n      api: \"/score\",\r\n      WrongLists:[],\r\n      listType:[],\r\n      // checkedType:\" \",\r\n      sentences:[],\r\n    }\r\n\r\n  },\r\n  created() {\r\n    this.name = sessionStorage.getItem(\"userName\");\r\n    console.log(this.name);\r\n    this.$axios.get(this.api + \"/wrongList/?name=\" + this.name).then((res) => {\r\n    var list = res.data.myWrongLists\r\n    this.WrongLists = res.data.myWrongLists\r\n    \r\n    // var type = this.checkedType\r\n\r\n//筛选对应的类型的句子\r\n\r\n//返回存在的错误类型\r\nlet list2 = list.map(item => item.type)\r\nlet list3 = list2.filter(function (element, index, self) {\r\n    return self.indexOf(element) === index;\r\n});\r\nthis.listType = list3\r\n\r\n    })\r\n  },\r\n  methods: {\r\nchangetype(item){\r\nvar list = this.WrongLists\r\nlet newList = list.filter(function(element){\r\nreturn element.type == item})\r\n\r\nlet arr = []\r\nnewList.forEach(e => {\r\n   arr.push(e.sentence)\r\n})\r\nthis.sentences = arr\r\nconsole.log(arr) \r\nconsole.log(newList) \r\n},\r\n\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\nins {\r\n  color: green;\r\n  font-weight: bold;\r\n}\r\n\r\nsubins {\r\n  color: blue;\r\n}\r\n\r\ndel {\r\n  color: indianred;\r\n}\r\n\r\n\r\n\r\n</style>\r\n"]}]}
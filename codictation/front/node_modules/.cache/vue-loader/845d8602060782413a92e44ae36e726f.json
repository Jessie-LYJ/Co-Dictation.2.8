{"remainingRequest":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\src\\components\\profile\\mymistakes.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\src\\components\\profile\\mymistakes.vue","mtime":1615681396339},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIG5hbWU6ICIiLCAvL+W9k+WJjeeUqOaIt+eahOeUqOaIt+WQjQ0KICAgICAgLy91c2VySWQ6ICIiLCAvL+W9k+WJjeeUqOaIt+eahF9pZCAg5Y+v5qC55o2u6L+Z5Lik5Liq5L+h5oGv5Y675pWw5o2u5bqTVXNlcuWPluaVsOaNrg0KICAgICAgYXBpOiAiL3Njb3JlIiwNCiAgICAgIFdyb25nTGlzdHM6IFtdLA0KICAgICAgbGlzdFR5cGU6IFtdLA0KICAgICAgLy8gY2hlY2tlZFR5cGU6IiAiLA0KICAgICAgc2VudGVuY2VzOiBbXSwNCiAgICAgIGlzU2hvdzogZmFsc2UsDQogICAgfTsNCiAgfSwNCiAgY3JlYXRlZCgpIHsNCiAgICB0aGlzLm5hbWUgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCJ1c2VyTmFtZSIpOw0KICAgIGNvbnNvbGUubG9nKHRoaXMubmFtZSk7DQogICAgdGhpcy4kYXhpb3MuZ2V0KHRoaXMuYXBpICsgIi93cm9uZ0xpc3QvP25hbWU9IiArIHRoaXMubmFtZSkudGhlbigocmVzKSA9PiB7DQogICAgICB2YXIgbGlzdCA9IHJlcy5kYXRhLm15V3JvbmdMaXN0czsNCiAgICAgIHRoaXMuV3JvbmdMaXN0cyA9IHJlcy5kYXRhLm15V3JvbmdMaXN0czsNCg0KICAgICAgLy8gdmFyIHR5cGUgPSB0aGlzLmNoZWNrZWRUeXBlDQoNCiAgICAgIC8v562b6YCJ5a+55bqU55qE57G75Z6L55qE5Y+l5a2QDQoNCiAgICAgIC8v6L+U5Zue5a2Y5Zyo55qE6ZSZ6K+v57G75Z6LDQogICAgICBsZXQgbGlzdDIgPSBsaXN0Lm1hcCgoaXRlbSkgPT4gaXRlbS50eXBlKTsNCiAgICAgIGxldCBsaXN0MyA9IGxpc3QyLmZpbHRlcihmdW5jdGlvbiAoZWxlbWVudCwgaW5kZXgsIHNlbGYpIHsNCiAgICAgICAgcmV0dXJuIHNlbGYuaW5kZXhPZihlbGVtZW50KSA9PT0gaW5kZXg7DQogICAgICB9KTsNCiAgICAgIHRoaXMubGlzdFR5cGUgPSBsaXN0MzsNCiAgICB9KTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGNoYW5nZXR5cGUoaXRlbSkgew0KICAgICAgaWYgKHRoaXMuaXNTaG93KSB7DQogICAgICAgIHRoaXMuaXNTaG93ID0gZmFsc2U7DQogICAgICAgIC8vIGNvbnNvbGUubG9nKCJhIiwgdGhpcy5pc1Nob3cpOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgdmFyIGxpc3QgPSB0aGlzLldyb25nTGlzdHM7DQogICAgICAgIGxldCBuZXdMaXN0ID0gbGlzdC5maWx0ZXIoZnVuY3Rpb24gKGVsZW1lbnQpIHsNCiAgICAgICAgICByZXR1cm4gZWxlbWVudC50eXBlID09IGl0ZW07DQogICAgICAgIH0pOw0KDQogICAgICAgIGxldCBhcnIgPSBbXTsNCiAgICAgICAgbmV3TGlzdC5mb3JFYWNoKChlKSA9PiB7DQogICAgICAgICAgYXJyLnB1c2goZS5zZW50ZW5jZSk7DQogICAgICAgIH0pOw0KICAgICAgICB0aGlzLnNlbnRlbmNlcyA9IGFycjsNCiAgICAgICAgdGhpcy5pc1Nob3cgPSB0cnVlOw0KICAgICAgICBjb25zb2xlLmxvZyhhcnIpOw0KICAgICAgICBjb25zb2xlLmxvZyhuZXdMaXN0KTsNCiAgICAgICAgLy8gY29uc29sZS5sb2coImIiLCB0aGlzLmlzU2hvdyk7DQogICAgICB9DQogICAgfSwNCiAgfSwNCn07DQo="},{"version":3,"sources":["mymistakes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mymistakes.vue","sourceRoot":"src/components/profile","sourcesContent":["<template>\r\n  <q-page class=\"q-pa-lg\">\r\n    <div id=\"container\">\r\n      <template v-for=\"item in listType\" class=\"type\">\r\n        <el-button type=\"primary\" @click=\"changetype(item)\" :key=\"item\">{{\r\n          item\r\n        }}</el-button>\r\n      </template>\r\n      <div v-show=\"isShow\">\r\n        <template v-for=\"item in sentences\">\r\n          <el-card :key=\"item\" shadow=\"always\" style=\"margin-top: 5px\"\r\n            ><span v-html=\"item\"></span\r\n          ></el-card>\r\n        </template>\r\n      </div>\r\n    </div>\r\n  </q-page>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: \"\", //当前用户的用户名\r\n      //userId: \"\", //当前用户的_id  可根据这两个信息去数据库User取数据\r\n      api: \"/score\",\r\n      WrongLists: [],\r\n      listType: [],\r\n      // checkedType:\" \",\r\n      sentences: [],\r\n      isShow: false,\r\n    };\r\n  },\r\n  created() {\r\n    this.name = sessionStorage.getItem(\"userName\");\r\n    console.log(this.name);\r\n    this.$axios.get(this.api + \"/wrongList/?name=\" + this.name).then((res) => {\r\n      var list = res.data.myWrongLists;\r\n      this.WrongLists = res.data.myWrongLists;\r\n\r\n      // var type = this.checkedType\r\n\r\n      //筛选对应的类型的句子\r\n\r\n      //返回存在的错误类型\r\n      let list2 = list.map((item) => item.type);\r\n      let list3 = list2.filter(function (element, index, self) {\r\n        return self.indexOf(element) === index;\r\n      });\r\n      this.listType = list3;\r\n    });\r\n  },\r\n  methods: {\r\n    changetype(item) {\r\n      if (this.isShow) {\r\n        this.isShow = false;\r\n        // console.log(\"a\", this.isShow);\r\n      } else {\r\n        var list = this.WrongLists;\r\n        let newList = list.filter(function (element) {\r\n          return element.type == item;\r\n        });\r\n\r\n        let arr = [];\r\n        newList.forEach((e) => {\r\n          arr.push(e.sentence);\r\n        });\r\n        this.sentences = arr;\r\n        this.isShow = true;\r\n        console.log(arr);\r\n        console.log(newList);\r\n        // console.log(\"b\", this.isShow);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\nins {\r\n  color: green;\r\n  font-weight: bold;\r\n}\r\n\r\nsubins {\r\n  color: blue;\r\n}\r\n\r\ndel {\r\n  color: indianred;\r\n}\r\n</style>\r\n"]}]}
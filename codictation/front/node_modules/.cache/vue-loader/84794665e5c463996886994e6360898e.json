{"remainingRequest":"D:\\资料\\codictation.2.2\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\资料\\codictation.2.2\\codictation\\src\\components\\Dictation.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\资料\\codictation.2.2\\codictation\\src\\components\\Dictation.vue","mtime":1612749277000},{"path":"D:\\资料\\codictation.2.2\\codictation\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\资料\\codictation.2.2\\codictation\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\资料\\codictation.2.2\\codictation\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\资料\\codictation.2.2\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"D:\\资料\\codictation.2.2\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\资料\\codictation.2.2\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI3NlbGVjdCB7CiAgbWFyZ2luLWxlZnQ6IDMlOwogIG1hcmdpbi10b3A6IDYlOwp9CgouYm94LWNhcmQgewogIHdpZHRoOiA0MCU7Cn0KCi5jYXJkcy1jb250YWluZXIgewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgdG9wOiAxZW07Cn0KCi5jYXJkcy1ib3ggewogIHdpZHRoOiA5NSU7CiAgbWFyZ2luOiAwIGF1dG87CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IHdyYXA7Cn0KCi5teS1jYXJkIHsKICB3aWR0aDogMTAwJTsKICBtYXgtd2lkdGg6IDI1NXB4Owp9Cgoucm93IHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtd3JhcDogd3JhcDsKICBtYXJnaW4tcmlnaHQ6IDA7CiAgbWFyZ2luLWxlZnQ6IDA7Cn0KCi5xLWNhcmRfX2FjdGlvbnMucS1jYXJkX19hY3Rpb25zLS1ob3Jpei5yb3cuanVzdGlmeS1zdGFydCB7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7Cn0KCmFzaWRlLnEtZHJhd2VyLnEtZHJhd2VyLS1sZWZ0LnEtZHJhd2VyLS1ib3JkZXJlZC5xLWRyYXdlci0tc3RhbmRhcmQsCmFzaWRlLnEtZHJhd2VyLnEtZHJhd2VyLS1sZWZ0LnEtZHJhd2VyLS1ib3JkZXJlZC5xLWRyYXdlci0tbWluaSB7CiAgcG9zaXRpb246IGZpeGVkOwogIG1hcmdpbi10b3A6IDNlbTsKfQoKLnEtbGF5b3V0LnEtbGF5b3V0LS1zdGFuZGFyZCB7CiAgbWluLWhlaWdodDogYXV0byAhaW1wb3J0YW50Owp9CgoucS1pbWdfX2NvbnRlbnQgPiBkaXYgewogIHBhZGRpbmc6IDhweCAxNnB4IDRweCAxNnB4Owp9Cg=="},{"version":3,"sources":["Dictation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4MA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Dictation.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div><Header></Header></div>\n    <el-backtop></el-backtop>\n    <div id=\"select\">\n      <el-select v-model=\"category\" placeholder=\"Choose a category\">\n        <el-option\n          v-for=\"item in categories\"\n          :key=\"item.value\"\n          :label=\"item.label\"\n          :value=\"item.value\"\n        >\n        </el-option>\n      </el-select>\n    </div>\n    <q-layout>\n      <q-page-container>\n        <div class=\"cards-container\">\n          <div\n            class=\"cards-box q-pa-md items-center q-gutter-md justify-center\"\n          >\n            <q-card\n              class=\"my-card\"\n              v-for=\"(v, index) in currentContent\"\n              :key=\"index\"\n            >\n              <q-img src=\"https://cdn.quasar.dev/img/parallax2.jpg\">\n                <div class=\"absolute-bottom\">\n                  <div class=\"text-h6 text-left\">{{ v.title }}</div>\n                  <div class=\"text-subtitle2 text-left\">\n                    by {{ v.publisher }}\n                  </div>\n                </div>\n              </q-img>\n\n              <q-card-actions>\n                <q-badge\n                  outline\n                  align=\"middle\"\n                  color=\"purple-3\"\n                  v-for=\"(l, i) in v.label\"\n                  :key=\"i\"\n                >\n                  {{ l }}\n                </q-badge>\n                <q-btn\n                  flat\n                  @click=\"startEx(index)\"\n                  dense\n                  padding=\"none\"\n                  icon=\"launch\"\n                  color=\"brown\"\n                />\n              </q-card-actions>\n            </q-card>\n          </div>\n        </div>\n        <el-pagination\n          style=\"margin-top:3%\"\n          background\n          layout=\"prev, pager, next\"\n          :total=\"total\"\n          :page-size=\"pagesize\"\n          :current-page.sync=\"currentpage\"\n          hide-on-single-page\n        >\n        </el-pagination>\n      </q-page-container>\n    </q-layout>\n  </div>\n</template>\n\n<script>\nimport Header from \"../components/basic/Header.vue\";\nexport default {\n  data() {\n    return {\n      taskList: [],\n      code: \"\", //当前输入的验证码\n      name: \"\", //当前用户\n      api: \"/api\",\n      categories: [\n        { value: \"All\", label: \"All\" },\n        { value: \"Economy\", label: \"Economy\" },\n        { value: \"Science\", label: \"Science\" },\n        { value: \"Politics\", label: \"Politics\" },\n        { value: \"Literature\", label: \"Literature\" },\n        { value: \"Coronavirus\", label: \"Coronavirus\" },\n        { value: \"Health\", label: \"Health\" },\n        { value: \"Nature\", label: \"Nature\" },\n        { value: \"Sports\", label: \"Sports\" },\n        { value: \"Celebrity\", label: \"Celebrity\" },\n        { value: \"Others\", label: \"Others\" },\n      ],\n      category: \"\",\n      subcontents: [],\n      total: 0,\n      pagesize: 10,\n      currentpage: 1,\n      currentContent: [],\n    };\n  },\n  watch: {\n    category() {\n      this.filterC(this.category);\n    },\n    subcontents() {\n      // console.log(this.subcontents);\n      this.currentTotal();\n    },\n    currentpage() {\n      this.showCurrent(this.currentpage);\n    },\n  },\n\n  methods: {\n    showCurrent(cpage) {\n      var min = (cpage - 1) * this.pagesize;\n      var max = cpage * this.pagesize;\n      this.currentContent = this.subcontents.slice(min, max);\n    },\n    currentTotal() {\n      this.total = this.subcontents.length;\n    },\n    filterC(category) {\n      this.subcontents = this.taskList;\n      if (category != \"All\" && category != \"\") {\n        this.subcontents = this.subcontents.filter((temp) => {\n          return temp[\"label\"] == category;\n        });\n      }\n      this.showCurrent(1);\n    },\n    compare(attr, rev) {\n      //第二个参数没有传递 默认升序排列\n      if (rev == undefined) {\n        rev = 1;\n      } else {\n        rev = rev ? 1 : -1;\n      }\n      return function(a, b) {\n        a = a[attr];\n        b = b[attr];\n        if (a < b) {\n          return rev * -1;\n        }\n        if (a > b) {\n          return rev * 1;\n        }\n        return 0;\n      };\n    },\n    startEx(index) {\n      if (this.name) {\n        var diffId = this.taskList[index]._id; //任务_id\n        var path = \"/diff/\" + diffId;\n        var authcode = this.taskList[index].authcode; //任务对应的验证码\n        if (authcode !== \"\") {\n          this.$prompt(\"请输入验证码\", \"提示\", {\n            confirmButtonText: \"确定\",\n            cancelButtonText: \"取消\",\n          })\n            .then(({ value }) => {\n              if (authcode === value) {\n                this.$router.push(path);\n                //跳转到相应的练习页面\n              } else {\n                this.$message.error(\"验证码错误\");\n              }\n            })\n            .catch(() => {\n              this.$message({\n                type: \"info\",\n                message: \"取消输入\",\n              });\n            });\n        } else {\n          this.$router.push(path);\n        }\n      } else {\n        this.$router.push('/Login')\n      }\n    },\n  },\n  components: {\n    Header,\n  },\n  created() {\n    this.name = sessionStorage.getItem(\"userName\");\n    this.$axios.get(this.api + \"/taskList\").then((res) => {\n      this.taskList = res.data;\n      this.taskList.reverse();\n      this.subcontents = this.taskList;\n      this.total = this.subcontents.length;\n      this.showCurrent(this.currentpage);\n      //因为现在数据库里的数据大部分没有time这个字段，先直接倒置整个数组，后面改用sort + compare\n      // this.taskList.sort(this.compare(\"time\", -1));\n      console.log(this.currentContent);\n    });\n  },\n};\n</script>\n\n<style>\n#select {\n  margin-left: 3%;\n  margin-top: 6%;\n}\n\n.box-card {\n  width: 40%;\n}\n\n.cards-container {\n  text-align: center;\n  position: relative;\n  top: 1em;\n}\n\n.cards-box {\n  width: 95%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.my-card {\n  width: 100%;\n  max-width: 255px;\n}\n\n.row {\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: 0;\n  margin-left: 0;\n}\n\n.q-card__actions.q-card__actions--horiz.row.justify-start {\n  justify-content: space-around;\n}\n\naside.q-drawer.q-drawer--left.q-drawer--bordered.q-drawer--standard,\naside.q-drawer.q-drawer--left.q-drawer--bordered.q-drawer--mini {\n  position: fixed;\n  margin-top: 3em;\n}\n\n.q-layout.q-layout--standard {\n  min-height: auto !important;\n}\n\n.q-img__content > div {\n  padding: 8px 16px 4px 16px;\n}\n</style>\n"]}]}
{"remainingRequest":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\src\\components\\diff.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\src\\components\\diff.vue","mtime":1616259618872},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.3\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["diff.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAibfile":"diff.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <q-page style=\"margin-top:60px\">\n    <!-- 按钮组合 -->\n    <div class=\"buttons\">\n      <el-popover placement=\"left\" trigger=\"hover\" content=\"前往综合版\">\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-arrow-down\"\n          circle\n          plain\n          v-if=\"isVideo\"\n          @click=\"toBest('#mainContent')\"\n          slot=\"reference\"\n        ></el-button>\n      </el-popover>\n      <br />\n      <el-popover placement=\"left\" trigger=\"hover\" content=\"画中画模式\">\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-monitor\"\n          circle\n          plain\n          v-if=\"isVideo\"\n          @click=\"pip()\"\n          slot=\"reference\"\n        ></el-button>\n      </el-popover>\n      <br />\n      <el-popover placement=\"left\" trigger=\"hover\" content=\"回到顶部\">\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-arrow-up\"\n          circle\n          plain\n          v-if=\"isVideo\"\n          @click=\"toTop()\"\n          slot=\"reference\"\n        ></el-button>\n      </el-popover>\n    </div>\n    <div>\n      <div class=\"video-container q-px-xl\">\n        <!-- 视频展现 -->\n        <div class=\"video-left-box\">\n          <div class=\"video-box q-mx-sm q-ml-lg\" v-if=\"isVideo\">\n            <vue-core-video-player\n              id=\"video\"\n              :src=\"require('../assets/video/' + fileName)\"\n              controls\n              :autoplay=\"autoplay\"\n              @play=\"playFunc\"\n              @pause=\"pauseFunc\"\n              @loadedmetadata=\"loaded\"\n            ></vue-core-video-player>\n          </div>\n          <div class=\"audio-box q-mr-sm\" v-else>\n            <vue-audio\n              id=\"audio\"\n              class=\"q-pa-lg\"\n              :audio-source=\"require('../assets/video/' + fileName)\"\n            ></vue-audio>\n          </div>\n          <div id=\"menu\" class=\"q-pa-md q-gutter-sm\" v-if=\"isVideo\">\n            <q-btn\n              class=\"q-mx-xl\"\n              @click=\"goBack\"\n              color=\"purple-4\"\n              icon-right=\"fast_rewind\"\n              label=\"Backward\"\n              glossy\n              style=\"width: 15em;\"\n            />\n            <q-btn\n              class=\"q-mx-xl\"\n              @click=\"goForward\"\n              color=\"purple-4\"\n              icon=\"fast_forward\"\n              label=\"Forward\"\n              glossy\n              style=\"width: 15em;\"\n            />\n          </div>\n        </div>\n        <!-- 信息卡片 -->\n        <div class=\"video-right-box\">\n          <q-card class=\"my-info-card q-mr-lg\" flat bordered>\n            <q-item>\n              <q-item-section avatar>\n                <avatar-org :name=publisher class=\"publisher-avt\"></avatar-org>\n              </q-item-section>\n\n              <q-item-section>\n                <q-item-label\n                  >{{ publisher }} -「 {{ identity }} 」</q-item-label\n                >\n                <q-item-label caption\n                  >Posted on {{ publishTime.slice(0, 10) }} at\n                  {{ publishTime.slice(10) }}</q-item-label\n                >\n              </q-item-section>\n            </q-item>\n\n            <q-separator />\n\n            <q-list bordered separator>\n              <q-item clickable v-ripple class=\"row\">\n                <q-item-section class=\"col-4\">\n                  <div class=\"text-left text-weight-bold\">Title:</div>\n                </q-item-section>\n                <q-item-section class=\"col-8\">\n                  <div class=\"text-left\">{{ taskTitle }}</div>\n                </q-item-section>\n              </q-item>\n\n              <q-item clickable v-ripple class=\"row\">\n                <q-item-section class=\"col-4\">\n                  <div class=\"text-left text-weight-bold\">Deadline:</div>\n                </q-item-section>\n                <q-item-section class=\"col-8\">\n                  <div class=\"text-left\">{{ deadline }}</div>\n                </q-item-section>\n              </q-item>\n\n              <q-item clickable v-ripple class=\"row\">\n                <q-item-section class=\"col-4\">\n                  <div class=\"text-left text-weight-bold\">People:</div>\n                </q-item-section>\n                <q-item-section class=\"col-8\">\n                  <div class=\"text-left\">\n                    {{\n                      submitted.filter(\n                        (item, index, arr) => arr.indexOf(item) === index\n                      ).length\n                    }}\n                  </div>\n                </q-item-section>\n              </q-item>\n\n              <q-item clickable v-ripple class=\"row\">\n                <q-item-section class=\"col-4\">\n                  <div class=\"text-left text-weight-bold\">Score:</div>\n                </q-item-section>\n                <q-item-section class=\"col-8\">\n                  <div class=\"text-left\">{{ scores }}</div>\n                </q-item-section>\n              </q-item>\n\n              <q-item\n                clickable\n                v-ripple\n                class=\"row\"\n                v-if=\"isSubmitted && username != publisher\"\n              >\n                <q-item-section class=\"col-4\">\n                  <div class=\"text-left text-weight-bold\">Rank:</div>\n                </q-item-section>\n                <q-item-section class=\"col-8\">\n                  <div class=\"text-left\">{{ myRank }}</div>\n                </q-item-section>\n              </q-item>\n\n              <q-item v-if=\"isSubmitted\">\n                <q-item-section class=\"col-12\">\n                  <div class=\"text-center\">\n                    <q-btn\n                      color=\"purple\"\n                      size=\"md\"\n                      @click=\"checkScoresDetails()\"\n                      >Score Details</q-btn\n                    >\n                  </div>\n                </q-item-section>\n              </q-item>\n\n              <q-item class=\"column\" v-if=\"username == publisher && !isConfirm\">\n                <q-item-section class=\"col q-my-sm\">\n                  <div class=\"text-center\">\n                    <el-switch\n                      v-model=\"isManual\"\n                      active-text=\"Manually\"\n                      inactive-text=\"Automatically\"\n                      @change=\"setManual()\"\n                    >\n                    </el-switch>\n                  </div>\n                </q-item-section>\n                <q-item-section\n                  class=\"col q-my-sm\"\n                  v-if=\"isManual && username == publisher\"\n                >\n                  <q-btn color=\"blue\" size=\"md\" @click=\"manualCofirm()\">\n                    Confirm\n                  </q-btn>\n                </q-item-section>\n              </q-item>\n            </q-list>\n          </q-card>\n        </div>\n      </div>\n\n      <el-main v-loading=\"loading\" id=\"mainContent\" class=\"q-ma-xl\">\n        <el-row :gutter=\"21\" type=\"flex\" class=\"row-bg\" justify=\"center\">\n          <el-col :span=\"21\" v-if=\"isversion1\">\n            <p class=\"edit-tip\">The Optimal Version:</p>\n            <div id=\"textDiv\">\n              <div>\n                <span v-for=\"(item, index) in final_context\" :key=\"index\">\n                  <span\n                    v-for=\"(final_word, final_word_index) in item.final_words\"\n                    :key=\"final_word_index\"\n                    @click=\"showAll($event, final_word_index, index)\"\n                    :class=\"{ active: isActive }\"\n                  >\n                    <el-badge :is-dot=\"final_word.isedited\" class=\"badge\">\n                      <span\n                        v-if=\"regtest.test(final_word.diff)\"\n                        v-html=\"final_word.diff\"\n                      >\n                      </span>\n                      <span v-else>\n                        {{ final_word.diff }}\n                      </span>\n                    </el-badge>\n                  </span>\n                </span>\n              </div>\n            </div>\n            <div class=\"q-pa-md q-gutter-sm edit-btn\" v-if=\"isTeacher\">\n              <q-btn\n                glossy\n                color=\"purple-14\"\n                icon=\"publish\"\n                @click=\"changev1()\"\n                label=\"Submit Final Version\"\n                style=\"width: 20em;\"\n              />\n            </div>\n            <div class=\"q-pa-md q-gutter-sm edit-btn\" v-else>\n              <q-btn\n                glossy\n                color=\"purple-14\"\n                icon=\"assignment_returned\"\n                @click=\"returnback()\"\n                label=\"Restore\"\n                v-show=\"isreadonly\"\n                style=\"width: 15em;\"\n              />\n              <q-btn\n                glossy\n                color=\"purple-13\"\n                icon=\"edit\"\n                @click=\"changev1()\"\n                label=\"Edit\"\n                v-show=\"isreadonly\"\n                style=\"width: 15em;\"\n              />\n            </div>\n          </el-col>\n          <el-col :span=\"20\" v-else>\n            <div>\n              <p class=\"edit-tip\">\n                Listen carefully and write what you hear in the box.\n              </p>\n              <el-input\n                type=\"textarea\"\n                :rows=\"15\"\n                :autosize=\"{ minRows: 15, maxRows: 30 }\"\n                placeholder=\"What is the speaker saying?\"\n                v-model=\"text1\"\n                style=\"font-size: 20px\"\n              ></el-input>\n              <div class=\"q-px-md q-pt-md q-gutter-sm submit-btn\">\n                <q-btn\n                  icon=\"upload\"\n                  color=\"purple-14\"\n                  @click=\"submitv1()\"\n                  style=\"width: 15em\"\n                  glossy\n                  label=\"Submit\"\n                />\n              </div>\n            </div>\n          </el-col>\n          <el-col :span=\"12\" v-if=\"isedit\">\n            <div>\n              <p class=\"edit-tip\">Editing:</p>\n              <div v-for=\"(item, i) in sentenceList\" :key=\"i\">\n                <el-input\n                  type=\"textarea\"\n                  :rows=\"1\"\n                  :autosize=\"{ minRows: 1, maxRows: 4 }\"\n                  v-model=\"sentenceList[i]\"\n                ></el-input>\n              </div>\n              <div class=\"q-pa-md q-gutter-sm edit-btn\">\n                <q-btn\n                  style=\"width: 10em\"\n                  @click=\"cancelChangev1()\"\n                  color=\"deep-purple-4\"\n                  icon=\"clear\"\n                  label=\"Cancel\"\n                />\n                <q-btn\n                  style=\"width: 10em\"\n                  @click=\"tempsave()\"\n                  color=\"purple-14\"\n                  icon=\"save\"\n                  label=\"Save\"\n                />\n                <q-btn\n                  @click=\"submitmv()\"\n                  color=\"purple-13\"\n                  icon=\"check\"\n                  label=\"Confirm\"\n                  style=\"width: 10em\"\n                />\n              </div>\n            </div>\n          </el-col>\n        </el-row>\n      </el-main>\n      <el-button\n        type=\"info\"\n        icon=\"el-icon-more\"\n        circle\n        @click=\"showTimeline()\"\n      ></el-button>\n      <div class=\"con\" v-show=\"isTimeline\" ref=\"history\">\n        <a class=\"aui_close1\" @click=\"closeTimeline()\">×</a>\n        <div class=\"q-px-lg q-pb-md\">\n          <q-timeline\n            color=\"purple\"\n            style=\"height: 550px; margin-top: 37px; overflow-y: auto\"\n          >\n            <q-timeline-entry\n              v-for=\"(version, index) in versions\"\n              :key=\"index\"\n              :title=\"version.name\"\n              :subtitle=\"version.time\"\n            >\n              <div>\n                {{ version.version }}\n              </div>\n            </q-timeline-entry>\n          </q-timeline>\n        </div>\n      </div>\n    </div>\n    <div id=\"wordOperate\" ref=\"main\">\n      <a class=\"aui_close\" @click=\"closeShow()\">×</a>\n      <el-table\n        :data=\"tableData.slice((currpage - 1) * pagesize, currpage * pagesize)\"\n        class=\"eltable\"\n      >\n        <el-table-column type=\"String\" prop=\"diff\" label=\"修改版本\" width=\"200\">\n          <template slot-scope=\"scope\">\n            <span v-html=\"scope.row.diff\"></span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"names\" label=\"用户\" width=\"380\">\n          <template slot-scope=\"scope\">\n            <span v-for=\"(item, i) in scope.row.names\" :key=\"i\">\n              <span\n                v-if=\"item.username == submitted[0]\"\n                style=\"font-weight: bold\"\n                >{{ item.username + \"; \" }}</span\n              >\n              <span v-else>{{ item.username + \"; \" }}</span>\n            </span>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-pagination\n        layout=\"prev, pager, next\"\n        :page-size=\"pagesize\"\n        :current-page=\"currpage\"\n        :total=\"tableData.length\"\n        @current-change=\"handleCurrentChange\"\n        @size-change=\"handleSizeChange\"\n      >\n      </el-pagination>\n      <!-- 每个句子的不同详细版本 -->\n      <el-collapse>\n        <el-collapse-item style=\"padding-bottom: 1px\">\n          <template slot=\"title\">\n            句子详细版本：<i class=\"header-icon el-icon-info\"></i>\n          </template>\n          <el-table\n            :data=\"\n              senTableData.slice(\n                (currpageS - 1) * pagesizeS,\n                currpageS * pagesizeS\n              )\n            \"\n            class=\"eltable\"\n          >\n            <el-table-column prop=\"provider\" label=\"用户\" width=\"80\">\n              <template slot-scope=\"scope\">\n                <span>\n                  {{ scope.row.provider }}\n                </span>\n              </template>\n            </el-table-column>\n            <el-table-column\n              type=\"String\"\n              prop=\"sentenceDiff\"\n              label=\"修改版本\"\n              width=\"500\"\n            >\n              <template slot-scope=\"scope\">\n                <span\n                  v-html=\"scope.row.sentenceDiff\"\n                  style=\"word-wrap: break-word; width: 500px\"\n                ></span>\n              </template>\n            </el-table-column>\n          </el-table>\n          <el-pagination\n            layout=\"prev, pager, next\"\n            :page-size=\"pagesizeS\"\n            :current-page=\"currpageS\"\n            :total=\"senTableData.length\"\n            @current-change=\"handleCurrentChangeS\"\n            @size-change=\"handleSizeChangeS\"\n          >\n          </el-pagination>\n        </el-collapse-item>\n      </el-collapse>\n    </div>\n  </q-page>\n</template>\n\n<script>\nimport AvatarOrg from \"./basic/Avatar\";\n\nvar differ = require(\"../diff.js\").differ;\nvar {\n  countTechScores,\n  countMatchPoints,\n  linearReg,\n} = require(\"../countScores.js\");\n\nexport default {\n  data() {\n    return {\n      userStatus: 0,\n      isreadonly: true,\n      isTeacher: false,\n      text1: \"\", //当前用户作为第一个用户提交的第一版本\n      isversion1: false, //判断是否有第一个版本\n      isFinal: false, //判断是否有修改记录可以生成综合版本\n      text_v1: \"\", //从数据库取得的第一个用户提交的第一版本，可能与text1不一样\n      text_fn: \"\",\n      isedit: false, //控制是否显示修改框\n      textDiv: \"\", //当前页面的textDiv的值, 记录当前用户的修改版本\n      currentCompareText: \"\", //当前页面的textDiv的值, 用来做比较基础\n      sentences: [], //第一个用户提交的第一版本的分句结果\n      username: \"\",\n      diffList: [],\n      tableData: [], //分页相关\n      senTableData: [], //句子版本相关\n      pagesize: 3, //修改分页相关\n      currpage: 1, //修改分页相关\n      pagesizeS: 1, //句子版本分页相关\n      currpageS: 1, //句子版本分页相关\n      isActive: false,\n      seen: false,\n      tempindex: 0,\n      current: 0,\n      diffId: \"\", //当前任务的_id\n      fileName: \"\",\n      userList: [],\n      inUserList: false,\n      api: \"/api\",\n      player: \"\", //播放器\n      rateSelected: \"1.0\", //播放速度\n      isVideo: false, //文件类型是否为视频\n      videoType: [\"AVI\", \"baiwma\", \"rmvb\", \"rm\", \"flash\", \"mp4\", \"mid\", \"3GP\"], //视频类型\n      sentenceList: [], //获得去掉标签之后各句子的综合版本，遍历填充修改框\n      final_context: [],\n      dbList: [],\n      regtest: /[<ins>|<del>|<subins>]/g,\n      loading: true, //加载动画\n      publisher: \"\",\n      status: \"1\",\n      identity: \"\",\n      submitted: [], //已提交修改的名单\n      isAddition: false, //是否显示增加句子的文本框和按钮\n      addition: \"\", //增加的内容\n      autoplay: false, //控制视频自动播放\n      taskTitle: \"\",\n      deadline: \"\",\n      publishTime: \"\",\n      isTimeline: false,\n      versions: [],\n      reverse: true,\n      taskLabels: [],\n      userId: \"\",\n      versionsList: \"\", //在created中从后台获取数据\n      techScoreList: {}, //统计每个人得到的技术分\n      matchScoreList: {}, //统计每个人得到的匹配分\n      techList: [],\n      matchList: [],\n      scoreList: [], //总分\n      countMatchScores: [],\n      techPoints: 60, //总的技术分\n      matchPoints: 40, //总的匹配分\n      scores: \"Not announced yet.\",\n      averScores: \"\", //平均分\n      isPublisher: false,\n      isSubmitted: false,\n      taskCoins: 0, //每个任务可获得的金币\n      myRank: \"\",\n      timespan: 0, //video播放实际时间\n      isCountTime: false, //是否计时\n      isManual: \"\", //是否自动计算分数\n      isConfirm: \"\", //是否确认成绩\n      userTasks: \"\", //用户的tasks\n      video_id: \"\", //对应视频的_id\n      authcode: \"\", //对应任务的验证码\n      configuration: \"\", //该任务的偏好设置\n    };\n  },\n  components: {\n    AvatarOrg,\n  },\n  methods: {\n    tempsave() {\n      this.$axios\n        .get(this.api + \"/currentTask?_id=\" + this.diffId)\n        .then((res) => {\n          this.userList = res.data[0].userList;\n          var isName = false;\n          for (var uh = 0; uh < this.userList.length; uh++) {\n            if (this.username == this.userList[uh].name) {\n              isName = true;\n              this.userList[uh].my_sentences = this.sentenceList;\n            }\n          }\n          //如果没有则增加\n          if (isName == false) {\n            this.userList.push({\n              name: this.username,\n              my_sentences: this.sentenceList,\n            });\n          }\n\n          this.$axios.post(this.api + \"/tempsave\", {\n            params: {\n              _id: this.diffId,\n              userList: this.userList,\n            },\n          });\n          this.$notify({\n            type: \"success\",\n            message: \"暂时保存成功\",\n            position: \"top-right\",\n            offset: 100,\n          });\n          this.isedit = false;\n        });\n    },\n    returnback() {\n      if (this.submitted.indexOf(this.username) >= 0) {\n        if (this.submitted.indexOf(this.username) == 0) {\n          if (this.submitted.indexOf(this.username, 1) == -1) {\n            var user_index = this.userList.findIndex(\n              (attr) => attr.name == this.username\n            );\n            if (user_index >= 0) {\n              this.isedit = true;\n              this.sentenceList = this.userList[user_index].my_sentences;\n            } else {\n              this.isedit = false;\n              this.$notify({\n                // title: \"警告\",\n                type: \"warning\",\n                message: \"抱歉，没有您的历史记录！\",\n                position: \"top-right\",\n                offset: 100,\n              });\n            }\n          } else {\n            this.isedit = false;\n            this.$notify({\n              // title: \"警告\",\n              type: \"warning\",\n              message: \"抱歉，您已提交过！\",\n              position: \"top-right\",\n              offset: 100,\n            });\n          }\n        } else {\n          this.isedit = false;\n          this.$notify({\n            // title: \"警告\",\n            type: \"warning\",\n            message: \"抱歉，您已提交过！\",\n            position: \"top-right\",\n            offset: 100,\n          });\n        }\n      } else {\n        var user_index = this.userList.findIndex(\n          (attr) => attr.name == this.username\n        );\n        if (user_index >= 0) {\n          this.sentenceList = this.userList[user_index].my_sentences;\n          this.isedit = true;\n        } else {\n          this.isedit = false;\n          this.$notify({\n            // title: \"警告\",\n            type: \"warning\",\n            message: \"抱歉，没有您的历史记录！\",\n            position: \"top-right\",\n            offset: 100,\n          });\n        }\n      }\n    },\n    showTimeline() {\n      this.$axios\n        .get(this.api + \"/allVersions?_id=\" + this.diffId)\n        .then((res) => {\n          // console.log(\"res data\", res.data);\n          this.versions = res.data;\n          if (this.versions.length > 0) {\n            this.isTimeline = true;\n            document.addEventListener(\"click\", this.hidePanel1, false);\n          } else {\n            this.$notify({\n              // title: \"警告\",\n              type: \"warning\",\n              message: \"当前任务还没有人完成\",\n              position: \"top-right\",\n              offset: 100,\n            });\n          }\n        });\n    },\n    closeTimeline() {\n      this.isTimeline = false;\n      document.removeEventListener(\"click\", this.hidePanel1, false);\n    },\n    //使用document.querySelector实现锚点的效果\n    toBest(idName) {\n      document.querySelector(idName).scrollIntoView(true);\n    },\n    //回到顶部\n    toTop() {\n      document.body.scrollTop = document.documentElement.scrollTop = 0;\n    },\n    //浮框\n    changePos(event) {\n      var wordOperate = document.getElementById(\"wordOperate\");\n      wordOperate.style.position = \"fixed\";\n      wordOperate.style.display = \"inline-block\";\n      wordOperate.style.backgroundColor = \"white\";\n      if (event.clientX < window.screen.width / 2) {\n        wordOperate.style.left = event.clientX + 5 + \"px\";\n      } else {\n        wordOperate.style.left = event.clientX - wordOperate.offsetWidth + \"px\";\n      }\n\n      if (event.clientY > window.screen.height / 2) {\n        wordOperate.style.top = event.clientY - wordOperate.offsetHeight + \"px\";\n      } else {\n        wordOperate.style.top = event.clientY + \"px\";\n      }\n    },\n    //确定是音频播放器还是视频播放器\n    decidePlayer() {\n      if (this.isVideo) {\n        this.player = document.querySelector(\"#video > video\");\n      } else {\n        this.player = document.getElementById(\"audio\");\n      }\n    },\n    //控制播放速度\n    // handleSpeed() {\n    //   this.player.playbackRate = this.rateSelected;\n    // },\n    //控制后退10秒\n    goBack() {\n      this.player.currentTime -= 10;\n    },\n    //控制前进10秒\n    goForward() {\n      this.player.currentTime += 10;\n    },\n    //分页相关\n    handleCurrentChange(val) {\n      this.currpage = val;\n    },\n    //分页相关\n    handleSizeChange(val) {\n      this.pagesize = val;\n    },\n    //分页相关\n    handleCurrentChangeS(val) {\n      this.currpageS = val;\n    },\n    //分页相关\n    handleSizeChangeS(val) {\n      this.pagesizeS = val;\n    },\n    //提交第一份，只执行一次，但会决定数据库的结构\n    submitv1() {\n      //获得当前时间\n      // let date = new Date();\n      // let newdate = date.toLocaleString(\"chinese\", {\n      //   hour12: false,\n      // });\n\n      let newdate = this.$moment(new Date()).format(\"YYYY/MM/DD HH:mm:ss\");\n\n      var flag = true;\n      var regstr = /([A-Za-z0-9\\'\\\"\\!\\?\\-\\:\\;\\.\\,\\%\\$\\&\\[ \\]])/;\n      var limited_words = 0;\n      this.$axios\n        .get(this.api + \"/currentTask?_id=\" + this.diffId)\n        .then((res) => {\n          limited_words = res.data[0].words;\n          // console.log(limited_words);\n          var video_id = res.data[0].videoId; //对应视频的_id\n          var authcode = res.data[0].authcode; //对应任务的验证码\n          //输入的内容非空\n          if (this.text1) {\n            var t_length = this.text1.split(\" \").length;\n            // console.log(t_length)\n            if (t_length > limited_words) {\n              for (var a = 0; a < this.text1.length; a++) {\n                var regResult = regstr.test(this.text1[a]);\n                // console.log(\"-----1\", regResult);\n                if (regResult === false) {\n                  // console.log(\"aaa\");\n                  flag = false;\n                }\n              }\n              // console.log(\"flag\", flag);\n              if (flag) {\n                this.$axios\n                  .post(this.api + \"/updateVersion\", {\n                    //整篇更新到版本列表\n                    params: {\n                      _id: this.diffId,\n                      time: newdate,\n                      new_version: this.text1,\n                      username: this.username,\n                      userId: this.userId,\n                    },\n                  })\n                  .then((result) => {\n                    // console.log(\"aaa\");\n                    this.$axios\n                      .get(this.api + \"/currentTask?_id=\" + this.diffId)\n                      .then((res) => {\n                        // console.log(\"111\");\n                        this.diffList = res.data[0].diffList;\n                        // console.log(\"diffList1\", this.diffList)\n                        this.userList = res.data[0].userList;\n                        if (this.diffList.length == 0) {\n                          this.$axios\n                            .get(this.api + \"/allVersions?_id=\" + this.diffId)\n                            .then((res) => {\n                              // console.log(\"res data\", res.data);\n                              var owner = res.data[0].name; //第一个提交的用户\n                              if (owner == this.username) {\n                                this.$notify({\n                                  type: \"success\",\n                                  message:\n                                    \"完成听写获得5金币，第一个完成额外再获得5金币\",\n                                  position: \"top-right\",\n                                  offset: 100,\n                                });\n                                if (\n                                  this.userList.indexOf(\n                                    this.userList.find(\n                                      (obj) => obj.name == owner\n                                    )\n                                  ) == -1\n                                ) {\n                                  this.userList.push({\n                                    name: owner,\n                                    my_sentences: [],\n                                  });\n                                }\n                                this.submitted.push(owner);\n                                this.$axios\n                                  .get(\n                                    this.api + \"/profile?name=\" + this.username\n                                  )\n                                  .then((res) => {\n                                    var userId = res.data[0]._id;\n                                    var userTasks = res.data[0].myTasks;\n                                    userTasks.push({\n                                      taskId: this.diffId,\n                                      videoId: video_id,\n                                      deadline: this.deadline,\n                                      authcode: authcode,\n                                      title: this.taskTitle,\n                                      label: this.taskLabels,\n                                      time: newdate,\n                                      scores: \"\",\n                                    });\n                                    // 更新用户“myTasks”\n\n                                    this.userTasks = userTasks;\n\n                                    this.$axios\n                                      .post(this.api + \"/updateMyTasks\", {\n                                        params: {\n                                          _id: userId,\n                                          myTasks: userTasks,\n                                          time: newdate,\n                                        },\n                                      })\n                                      .then((res) => {\n                                        console.log(\"这里成功啦\");\n                                      })\n                                      .catch((error) => {\n                                        console.log(\"这次失败了\", error);\n                                      });\n                                  });\n                              } else {\n                                this.$notify({\n                                  // title: \"警告\",\n                                  type: \"warning\",\n                                  message:\n                                    \"非常遗憾，已有其他用户提交当前任务的第1个版本！下次加油(ง •_•)ง\",\n                                  position: \"top-right\",\n                                  offset: 100,\n                                });\n                              }\n                              this.isversion1 = true;\n                              this.text_v1 = res.data[0].version;\n                              var diffList1 = [];\n                              //分句并存储到数据库中\n                              this.sentences = this.text_v1.split(\n                                /(?<=[^A-Z].[.?]) +(?=[A-Z])/g\n                              );\n                              // console.log(this.sentences);\n                              for (\n                                var sen = 0;\n                                sen < this.sentences.length;\n                                sen++\n                              ) {\n                                let words = this.sentences[sen].split(\" \"); //分词\n                                //去掉空值\n                                for (var y = 0; y < words.length; y++) {\n                                  if (words[y] == \"\") {\n                                    words.splice(y, 1);\n                                    y = y - 1;\n                                  }\n                                }\n                                let word_list = []; //分词列表，包括用户列表\n                                var names = new Array();\n                                var user_item = {\n                                  username: this.username,\n                                  edittime: newdate,\n                                };\n                                names.push(user_item);\n                                for (var wor = 0; wor < words.length; wor++) {\n                                  var wordItem = {\n                                    // index: wor,\n                                    word: words[wor],\n                                    diffs: [\n                                      {\n                                        diff: words[wor],\n                                        names: names,\n                                        num: 1,\n                                        time: newdate,\n                                        status: 0, //0=>原词，没修改，初始值；1=>增加；2=>有增有删；-1=>删除\n                                      },\n                                    ],\n                                    isedited: false,\n                                    isfirst: true, //相对第一版，用于区分改版是否为增加的内容\n                                  };\n                                  word_list.push(wordItem);\n                                }\n                                //新改动\n                                var sentence_item = {\n                                  sentences: [\n                                    {\n                                      provider: this.username,\n                                      sentence: this.sentences[sen],\n                                      time: newdate,\n                                    },\n                                  ],\n                                  words: word_list,\n                                  author: this.username,\n                                  sentenceDiffs: [\n                                    {\n                                      provider: this.username,\n                                      sentenceDiff: this.sentences[sen],\n                                    },\n                                  ],\n                                };\n                                diffList1.push(sentence_item);\n                              }\n                              var user_index = this.userList.findIndex(\n                                (attr) => attr.name == this.username\n                              );\n                              this.userList[\n                                user_index\n                              ].my_sentences = this.sentences;\n                              // console.log(\"deffList2\", diffList1)\n                              this.$axios\n                                .post(this.api + \"/updatediff\", {\n                                  //将分词分句结果更新到数据库\n                                  params: {\n                                    _id: this.diffId,\n                                    diffList: diffList1,\n                                    userList: this.userList,\n                                    submitted: this.submitted,\n                                  },\n                                })\n                                .then((res) => {\n                                  // console.log(\"-------\" + res);\n                                  // this.$router.go(0);\n                                });\n                              this.$router.go(0);\n                              // this.createFinalVersion();\n                            });\n\n                          // this.createFinalVersion();\n                        } else {\n                          this.isversion1 = true;\n                          this.isFinal = true;\n                          //形成综合版本\n                          this.$router.go(0);\n                          // this.createFinalVersion();\n                          this.$notify({\n                            // title: \"警告\",\n                            type: \"warning\",\n                            message:\n                              \"非常遗憾，已有其他用户提交当前任务的第1个版本！下次加油(ง •_•)ง\",\n                            position: \"top-right\",\n                            offset: 100,\n                          });\n                        }\n                      });\n                  });\n                // this.$router.go(0);\n                // this.createFinalVersion();\n              } else {\n                // console.log(flag);\n                this.$notify({\n                  // title: \"警告\",\n                  type: \"warning\",\n                  message: \"提交内容包含非法字符，请检查修改后再提交！\",\n                  position: \"top-right\",\n                  offset: 100,\n                });\n              }\n            } else {\n              this.$notify({\n                // title: \"警告\",\n                type: \"warning\",\n                message: \"字数少于当前任务限制的\" + limited_words + \"词！\",\n                position: \"top-right\",\n                offset: 100,\n              });\n            }\n          } else {\n            //输入的内容为空\n            this.$notify({\n              // title: \"警告\",\n              type: \"warning\",\n              message: \"请重新确认，您并未输入内容哦~\",\n              position: \"top-right\",\n              offset: 100,\n            });\n          }\n        });\n      // this.$router.go(0); //刷新页面\n    },\n    //打开增加句子编辑面板\n    editv1() {\n      this.$notify({\n        title: \"Tip\",\n        message: \"每次只能增加一个句子哦！\",\n        position: \"top-right\",\n        offset: 100,\n      });\n      this.isAddition = true;\n      this.addition = \"\";\n    },\n    //点击修改按钮\n    changev1() {\n      this.$axios\n        .get(this.api + \"/currentTask?_id=\" + this.diffId)\n        .then((res) => {\n          // this.submitted = res.data[0].submitted;\n          // console.log(\"changev1 submitted\", this.submitted);\n          if (this.submitted.indexOf(this.username) >= 0) {\n            // console.log(\n            //   \"this.submitted.indexOf(this.username)\",\n            //   this.submitted.indexOf(this.username)\n            // );\n            // console.log(\n            //   \"this.submitted.indexOf(this.username, 1)\",\n            //   this.submitted.indexOf(this.username, 1)\n            // );\n            if (this.submitted.indexOf(this.username) == 0) {\n              if (this.submitted.indexOf(this.username, 1) == -1) {\n                //点击修改按钮\n                this.isedit = true;\n                //当前用户要提交的版本\n                // console.log(document.getElementById(\"textDiv\").innerHTML);\n                this.textDiv = document\n                  .getElementById(\"textDiv\")\n                  .innerHTML.replace(/(<span[^>]*?>)|(<\\/span>)/g, \"\");\n                //用于比较的文本，去除标签\n                this.currentCompareText = document\n                  .getElementById(\"textDiv\")\n                  .innerHTML.replace(/(<span[^>]*?>)|(<\\/span>)/g, \"\");\n              } else {\n                this.isedit = false;\n                this.$notify({\n                  // title: \"警告\",\n                  type: \"warning\",\n                  message: \"抱歉，您的提交机会已用完！\",\n                  position: \"top-right\",\n                  offset: 100,\n                });\n              }\n            } else {\n              this.isedit = false;\n              this.$notify({\n                // title: \"警告\",\n                type: \"warning\",\n                message: \"抱歉，您的提交机会已用完！\",\n                position: \"top-right\",\n                offset: 100,\n              });\n            }\n          } else {\n            //点击修改按钮\n            this.isedit = true;\n            //当前用户要提交的版本\n            this.textDiv = document\n              .getElementById(\"textDiv\")\n              .innerHTML.replace(/(<span[^>]*?>)|(<\\/span>)/g, \"\");\n\n            //用于比较的文本，去除标签\n            this.currentCompareText = document\n              .getElementById(\"textDiv\")\n              .innerHTML.replace(/(<span[^>]*?>)|(<\\/span>)/g, \"\");\n          }\n        });\n    },\n    //取消修改\n    cancelChangev1() {\n      this.isedit = false;\n    },\n    //确定数组里是否有某个元素\n    findElem(arrayToSearch, attr, val) {\n      for (var i = 0; i < arrayToSearch.length; i++) {\n        if (arrayToSearch[i][attr] == val) {\n          return i;\n        }\n      }\n      return -1;\n    },\n    //提交当前用户的版本\n    submitmv() {\n      this.$confirm(\"用户只能提交一次, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n        center: true,\n      }).then(() => {\n        var flag1 = true;\n        var regstr = /([A-Za-z0-9\\'\\\"\\!\\?\\:\\-\\;\\.\\,\\%\\$\\&\\[ \\]])/;\n        for (var sl = 0; sl < this.sentenceList.length; sl++) {\n          //每个句子\n          for (var c = 0; c < this.sentenceList[sl].length; c++) {\n            var regResult = regstr.test(this.sentenceList[sl][c]);\n            // console.log(\"+++++3\", regResult);\n            if (regResult === false) {\n              // console.log(\"ccc\");\n              flag1 = false;\n            }\n          }\n        }\n        // console.log(\"flag1\", flag1);\n        if (flag1) {\n          //获得当前时间\n          // let date = new Date();\n          // let newdate = date.toLocaleString(\"chinese\", {\n          //   hour12: false,\n          // });\n          let newdate = this.$moment(new Date()).format(\"YYYY/MM/DD HH:mm:ss\");\n          //获得最新的修改列表\n          this.$axios\n            .get(this.api + \"/currentTask?_id=\" + this.diffId)\n            .then((res) => {\n              this.dbList = res.data[0].diffList;\n            });\n          // console.log(\"dbDiffList\", this.dbList);\n          // console.log(\"sentenceList\", this.sentenceList);\n          var listLen = this.dbList.length;\n          //与第一版本比较，根据句子的数量进行循环（修改后提交内容对应的句子）\n          var final_result = []; //记录所有的修改情况\n          for (var len = 0; len < listLen; len++) {\n            var sen_result = []; //记录当前句子的修改情况\n            var sentence = this.sentenceList[len]\n              .replace(/\\s{2,}/g, \" \")\n              .replace(/[\\r\\n]/g, \" \")\n              .replace(/(\\r\\n|\\n|\\r)/g, \" \");\n            //新改动：换成跟 最新版本 的 第一版本句子 比较\n            var v1_sentences = this.dbList[len].sentences.sort(\n              this.compare(\"time\")\n            );\n            // console.log(\"v1_sentences\", v1_sentences);\n            var v1_sentence = v1_sentences[v1_sentences.length - 1].sentence;\n            var s_result1 = differ\n              .parse(\" \" + v1_sentence, \" \" + sentence)\n              .replace(/%2C/g, \",\")\n              .replace(/%3F/g, \"?\")\n              .replace(/%27/g, \"'\")\n              .replace(/%3A/g, \":\");\n            //将单独的ins标签替换为del-ins标签\n            // console.log(\"s_result1\", s_result1);\n            var reg = /([a-zA-Z0-9]+[\\-\\'\\.\\:]?[a-zA-Z0-9]*\\s(<ins[^>]*?>.*?<\\/ins>\\s)+)/g;\n            var insMatchResult = s_result1.match(reg);\n            // console.log(\"insMatchResult\", insMatchResult);\n            if (insMatchResult !== null) {\n              for (var m = 0; m < insMatchResult.length; m++) {\n                //去掉空的匹配结果\n                if (insMatchResult[m] == \"\") {\n                  insMatchResult.splice(m, 1);\n                  m = m - 1;\n                } else {\n                  s_result1 = s_result1.replace(insMatchResult[m], \"<>\"); //替换成特殊的符号 占位\n                  var del_content = insMatchResult[m].split(\" \")[0]; //原词\n                  var edited_ver =\n                    \"<del>\" +\n                    del_content +\n                    \"</del> <ins>\" +\n                    del_content +\n                    \"</ins>\";\n                  insMatchResult[m] = insMatchResult[m].replace(\n                    del_content,\n                    edited_ver\n                  );\n                }\n                s_result1 = s_result1\n                  .replace(\"<>\", insMatchResult[m])\n                  .replace(/(\\r\\n|\\n|\\r)/g, \" \");\n              }\n            }\n            // console.log(\"after\", s_result1);\n            var s_result_del = s_result1\n              .replace(/<ins[^>]*?>.*?<\\/ins>\\s/g, \"\")\n              .replace(/(\\r\\n|\\n|\\r)/g, \" \");\n            //去掉所有ins标签，用于确认del标签的index\n            var s_result_arr = s_result_del\n              .trim()\n              .split(/\\s/g)\n              .filter((d) => d);\n            // console.log(\"s_result_arr\", s_result_arr);\n            // 给 s_result_arr 数组中每个词都加一个index和flag，便于后期找index\n            var new_s_result_arr = s_result_arr.map((item, index) => {\n              var robj = {};\n              robj.index = index;\n              robj.word = item;\n              robj.flag = 0;\n              return robj;\n            });\n            // console.log(\"new_s_result_arr\", new_s_result_arr);\n            //匹配出所有的修改\n            var allMatchResult = s_result1.match(\n              /((<del[^>]*?>.*?<\\/del>\\s)*(<ins[^>]*?>.*?<\\/ins>\\s)*)/g\n            );\n            // console.log(\"allMatchResult: \", allMatchResult);\n            //对所有的匹配结果（修改）进行进一步的整合\n            for (var n = 0; n < allMatchResult.length; n++) {\n              //去掉空的匹配结果\n              if (allMatchResult[n] == \"\") {\n                allMatchResult.splice(n, 1);\n                n = n - 1;\n              } else {\n                var matchSplit = allMatchResult[n]\n                  .replace(\"\\n\", \" \")\n                  .replace(\"↵\", \" \")\n                  .trim()\n                  .split(/\\s/g);\n                // console.log(\"matchResult\", matchSplit);\n                var del = [];\n                var ins = [];\n                // var re1 = /<del[^>]*?>.*?<\\/del>/g;\n                // var re2 = /<ins[^>]*?>.*?<\\/ins>/g;\n                for (var t = 0; t < matchSplit.length; t++) {\n                  //存储到相反的数组？？？\n                  // console.log(\"m\");\n                  if (matchSplit[t].indexOf(\"<ins>\")) {\n                    // console.log(\"每个matchSplit：\", matchSplit[t]);\n                    // var del_index = s_result_arr.indexOf(matchSplit[t]);\n                    var finishedItem = new_s_result_arr.find(\n                      (item) => item.word == matchSplit[t] && item.flag == 0\n                    );\n                    if (finishedItem) {\n                      var finishedIndex = new_s_result_arr.findIndex(\n                        (item) => item == finishedItem\n                      );\n                      new_s_result_arr[finishedIndex].flag = 1;\n                      var del_index = finishedIndex;\n                      var del_item = {\n                        del: matchSplit[t],\n                        del_index: del_index,\n                      };\n                      del.push(del_item);\n                    }\n                  }\n                  if (matchSplit[t].indexOf(\"<del>\")) {\n                    ins.push(matchSplit[t]);\n                  }\n                }\n                // console.log(\"del arr\", del);\n                // console.log(\"ins arr\", ins);\n                if (ins.length == 0) {\n                  for (var d = 0; d < del.length; d++) {\n                    var diff1 = del[d].del.trim();\n                    // console.log(\"a\", diff1)\n                    var del_content1 = del[d].del.replace(\n                      /(<del[^>]*?>)|(<\\/del>)/g,\n                      \"\"\n                    );\n                    // console.log(\"del_content1\", del_content1)\n                    var item1 = {\n                      word: del_content1,\n                      diff: diff1,\n                      index: del[d].del_index,\n                      status: -1, //删除\n                    };\n                    sen_result.push(item1);\n                  }\n                }\n                if (del.length == 1 && ins.length > 0) {\n                  // console.log(\"del_del\", del[0]);\n                  var del_content2 = del[0].del\n                    .replace(/(<del[^>]*?>)|(<\\/del>)/g, \"\")\n                    .trim();\n                  var ins_content2 = ins[0].replace(\n                    /(<ins[^>]*?>)|(<\\/ins>)/g,\n                    \"\"\n                  );\n                  // console.log(\"del_content2\", del_content2);\n                  // console.log(\"ins_content2\", ins_content2);\n                  var diff2 = del[0].del.trim() + ins.join(\" \");\n                  var status2 = 2; //修改\n                  if (\n                    del_content2 == ins_content2 ||\n                    del_content2.slice(0, del_content2.length - 1) ==\n                      ins_content2\n                  ) {\n                    // console.log(\"del_content2 == ins_content2\");\n                    status2 = 1; //增加\n                    var ins_temp = ins.slice(1);\n                    diff2 = del_content2.trim() + \" \" + ins_temp.join(\" \");\n                  }\n                  // console.log(\"diff2\", diff2);\n                  // console.log(\"del_content2\", del_content2);\n                  var item2 = {\n                    word: del_content2,\n                    diff: diff2,\n                    index: del[0].del_index,\n                    status: status2,\n                  };\n                  sen_result.push(item2);\n                }\n                if (del.length > 1) {\n                  if (del.length == ins.length) {\n                    for (var a = 0; a < del.length; a++) {\n                      // console.log(del[a])\n                      var del_content3 = del[a].del.replace(\n                        /(<del[^>]*?>)|(<\\/del>)/g,\n                        \"\"\n                      );\n                      var ins_content3 = ins[a].replace(\n                        /(<ins[^>]*?>)|(<\\/ins>)/g,\n                        \"\"\n                      );\n                      // console.log(\"c\", del_content3)\n                      if (del_content3 !== ins_content3) {\n                        var item3 = {\n                          word: del_content3,\n                          diff: del[a].del.trim() + ins[a],\n                          index: del[a].del_index,\n                          status: 2,\n                        };\n                        sen_result.push(item3);\n                      }\n                    }\n                  }\n                  if (del.length < ins.length) {\n                    for (var b = 0; b < del.length; b++) {\n                      var del_content4 = del[b].del.replace(\n                        /(<del[^>]*?>)|(<\\/del>)/g,\n                        \"\"\n                      );\n                      // console.log(\"d\", del_content4)\n                      var diff4 = \"\";\n                      if (b == del.length - 1) {\n                        var temp_ins = ins.slice(b);\n                        diff4 = del[b].del.trim() + temp_ins.join(\" \");\n                      } else {\n                        diff4 = del[b].del.trim() + ins[b];\n                      }\n                      // console.log(\"d\", diff4)\n                      var ins_content4 = ins[b].replace(\n                        /(<ins[^>]*?>)|(<\\/ins>)/g,\n                        \"\"\n                      );\n                      if (del_content4 !== ins_content4) {\n                        var item4 = {\n                          word: del_content4,\n                          diff: diff4,\n                          index: del[b].del_index,\n                          status: 2,\n                        };\n                        sen_result.push(item4);\n                      }\n                    }\n                  }\n                  if (del.length > ins.length) {\n                    for (var c = 0; c < ins.length; c++) {\n                      var del_content5 = del[c].del.replace(\n                        /(<del[^>]*?>)|(<\\/del>)/g,\n                        \"\"\n                      );\n                      var ins_content5 = ins[c].replace(\n                        /(<ins[^>]*?>)|(<\\/ins>)/g,\n                        \"\"\n                      );\n                      // console.log(\"e\", del_content5)\n                      if (del_content5 !== ins_content5) {\n                        var item5 = {\n                          word: del_content5,\n                          diff: del[c].del.trim() + ins[c],\n                          index: del[c].del_index,\n                          status: 2,\n                        };\n                        sen_result.push(item5);\n                      }\n                    }\n                    var temp_del = del.slice(ins.length, del.length);\n                    for (var f = 0; f < temp_del.length; f++) {\n                      var diff6 = temp_del[f].del.trim();\n                      var del_content6 = temp_del[f].del.replace(\n                        /(<del[^>]*?>)|(<\\/del>)/g,\n                        \"\"\n                      );\n                      // console.log(\"e\", diff6)\n                      // console.log(\"e\", del_content6)\n                      var item6 = {\n                        word: del_content6,\n                        diff: diff6,\n                        index: temp_del[f].del_index,\n                        status: -1,\n                      };\n                      sen_result.push(item6);\n                    }\n                  }\n                }\n              }\n            }\n            final_result.push(sen_result);\n          }\n          // console.log(\"final_result: \", final_result);\n          //再取一次数据，判断是属于哪个单词的修改，判断该修改是否存在\n          //如果存在，直接加入用户，如果不存在，加入该修改以及用户\n          this.$axios\n            .get(this.api + \"/currentTask?_id=\" + this.diffId)\n            .then((res) => {\n              this.dbList = res.data[0].diffList;\n            });\n          // console.log(\"dbDiffList2\", this.dbList);\n          for (var r = 0; r < final_result.length; r++) {\n            //r表示文本中的第r句\n            var s_orders = final_result[r]; //第r句的修改记录\n            // console.log(\"s_orders: \", s_orders);\n            var s_words = this.dbList[r].words; //第r句的分词结果\n            // console.log(\"s_words: \", s_words);\n            var s_sentences = this.dbList[r].sentenceDiffs; //第r句的不同版本\n            //新改动\n            var new_sentences = this.dbList[r].sentences;\n            if (s_orders.length == 0) {\n              //第r句的修改记录为空\n              // 由于数据库中的顺序会随机改变，所以先匹配再插入更改数据\n              s_words.forEach((item) => {\n                var reg_end = /\\,|\\.|\\!|\\?|\\.\\\"|\\.\\'|\\!\\\"|\\!\\'|\\?\\\"|\\?\\'/;\n                var no_edited_word = item.word;\n                console.log(\"no_edited_word\", no_edited_word);\n                console.log(\"item.diffs\", item.diffs);\n                var no_edited_index = item.diffs.findIndex((attr) => {\n                  return attr.diff == no_edited_word;\n                });\n                console.log(\"no_edited_index\", no_edited_index);\n                item.diffs[no_edited_index].names.push({\n                  username: this.username,\n                  edittime: newdate,\n                });\n                item.diffs[no_edited_index].num++;\n                item.diffs[no_edited_index].time = newdate;\n              });\n              var filtered_words = s_words.map((item) => {\n                for (var ele = 0; ele < item.diffs.length; ele++) {\n                  var name_index = this.findElem(\n                    item.diffs[ele].names,\n                    \"username\",\n                    this.username\n                  );\n                  if (name_index != -1) {\n                    if (item.diffs[ele].hasOwnProperty(\"styleDiff\")) {\n                      return item.diffs[ele].styleDiff;\n                    } else {\n                      return item.diffs[ele].diff;\n                    }\n                  }\n                }\n              });\n              // console.log(\"filtered_words\", filtered_words);\n              var filtered_sen = filtered_words.join(\" \");\n\n              s_sentences.push({\n                provider: this.username,\n                sentenceDiff: filtered_sen,\n              });\n            } else {\n              //第r句的修改记录不为空\n              // 第一部分：将修改记录替换到不同句子的版本展示中，便于展示修改的地方\n              // 整合第二部分于第一部分中：判断每个词语是否有对应的修改\n              var editing_words = [];\n              s_words.forEach((item, index) => {\n                var itemIndex = index;\n                var replacedItemIndex = s_orders.indexOf(\n                  s_orders.find((element) => element.index == itemIndex)\n                );\n                if (replacedItemIndex != -1) {\n                  if (s_orders[replacedItemIndex].status == 1) {\n                    //对前一个词的处理   补充：句尾的标点符号\n                    var find_index = this.findElem(item.diffs, \"status\", 0);\n                    // console.log(\"find_indexaaaa\", find_index);\n                    item.diffs[find_index].names.push({\n                      username: this.username,\n                      edittime: newdate,\n                    });\n                    item.diffs[find_index].num++;\n                    item.diffs[find_index].time = newdate;\n\n                    var r_ins_words = s_orders[replacedItemIndex].diff.split(\n                      \" \"\n                    );\n                    var ins_words = r_ins_words.slice(1);\n\n                    if (\n                      s_words[index - 1].diffs[0].hasOwnProperty(\"styleDiff\") &&\n                      s_words[index - 1].isfirst == false\n                    ) {\n                      var reg_end = /\\,|\\.|\\!|\\?|\\.\\\"|\\.\\'|\\!\\\"|\\!\\'|\\?\\\"|\\?\\'/;\n                      console.log(\n                        \"s_words[index - 1].word\",\n                        s_words[index - 1].word\n                      );\n                      console.log(\n                        \"s_words[index - 1].diffs\",\n                        s_words[index - 1].diffs\n                      );\n                      var bf_ins_dw_i = s_words[index - 1].diffs.findIndex(\n                        (elem) => {\n                          return elem.diff === s_words[index - 1].word;\n                        }\n                      );\n                      console.log(\"bf_ins_dw_i\", bf_ins_dw_i);\n\n                      var temp_ins_sdf = item.diffs[bf_ins_dw_i].styleDiff;\n                      console.log(\"temp_ins_sdf1111\", temp_ins_sdf);\n\n                      if (\n                        reg_end.test(\n                          temp_ins_sdf\n                            .match(/(?<=<subins>).*?(?=<\\/subins>)/g)[0]\n                            .slice(-1)\n                        )\n                      ) {\n                        temp_ins_sdf = temp_ins_sdf.replace(\n                          temp_ins_sdf.slice(-10),\n                          \"</subins>\"\n                        );\n                        item.word = temp_ins_sdf.replace(\n                          /<subins>|<\\/subins>/g,\n                          \"\"\n                        );\n                        item.diffs[bf_ins_dw_i].diff = item.word;\n                        item.diffs[bf_ins_dw_i].styleDiff = temp_ins_sdf;\n                      } else if (\n                        reg_end.test(\n                          temp_ins_sdf\n                            .match(/(?<=<subins>).*?(?=<\\/subins>)/g)[0]\n                            .slice(-2)\n                        )\n                      ) {\n                        temp_ins_sdf = temp_ins_sdf.replace(\n                          temp_ins_sdf.slice(-11),\n                          \"</subins>\"\n                        );\n                        item.word = temp_ins_sdf.replace(\n                          /<subins>|<\\/subins>/g,\n                          \"\"\n                        );\n                        item.diffs[bf_ins_dw_i].diff = item.word;\n                        item.diffs[bf_ins_dw_i].styleDiff = temp_ins_sdf;\n                      }\n\n                      // console.log(\"当前原词去标点后\", item.word);\n                      // console.log(\"temp_ins_sdf2222222\", temp_ins_sdf);\n\n                      var ins_words_arr = [\n                        {\n                          word: temp_ins_sdf,\n                          diffs: [\n                            {\n                              diff: temp_ins_sdf, //展示数据\n                            },\n                          ],\n                          isedited: false,\n                        },\n                      ];\n                    } else {\n                      var reg_end = /\\,|\\.|\\!|\\?|\\.\\\"|\\.\\'|\\!\\\"|\\!\\'|\\?\\\"|\\?\\'/;\n                      var temp_ins = r_ins_words[0];\n                      var itew = item.word;\n                      console.log(\"item.word\", item.word);\n                      console.log(\"item.diffs\", item.diffs);\n                      var bf_ins_dw_i = item.diffs.findIndex((elem) => { return elem.diff == item.word });\n                      console.log(\"bf_ins_dw_i\", bf_ins_dw_i);\n                      if (reg_end.test(temp_ins[temp_ins.length - 1])) {\n                        temp_ins = temp_ins.slice(0, temp_ins.length - 1);\n                        item.word = temp_ins;\n                        console.log(\n                          \"item.diffs[bf_ins_dw_i]\",\n                          item.diffs[bf_ins_dw_i]\n                        );\n                        item.diffs[bf_ins_dw_i].diff = temp_ins;\n                      }\n                      if (reg_end.test(temp_ins.slice(-2))) {\n                        temp_ins = temp_ins.slice(0, temp_ins.length - 2);\n                        item.word = temp_ins;\n                        item.diffs[bf_ins_dw_i].diff = temp_ins;\n                      }\n                      var ins_words_arr = [\n                        {\n                          word: temp_ins,\n                          diffs: [\n                            {\n                              diff: temp_ins, //展示数据\n                            },\n                          ],\n                          isedited: false,\n                        },\n                      ];\n                    }\n\n                    //I love China.\n                    //I very love China too.\n                    ins_words.forEach((i) => {\n                      var i_word = i.replace(/(<ins[^>]*?>)|(<\\/ins>)/g, \"\");\n                      var i_index = s_orders[replacedItemIndex].index + 1;\n                      var i_names = new Array();\n                      var user_item = {\n                        username: this.username,\n                        edittime: newdate,\n                      };\n                      i_names.push(user_item);\n                      var ins_wordItem = {\n                        index: i_index,\n                        word: i_word,\n                        diffs: [\n                          {\n                            diff: i_word,\n                            styleDiff: \"<subins>\" + i_word + \"</subins>\",\n                            names: i_names,\n                            num: 1,\n                            time: newdate,\n                            status: 0,\n                          },\n                        ],\n                        isedited: false,\n                        isfirst: false, //相对第一版，用于区分改版是否为增加的内容\n                      };\n                      ins_words_arr.push(ins_wordItem);\n                    });\n                    editing_words.push(ins_words_arr);\n                  } else {\n                    var find_result = this.findElem(\n                      item.diffs,\n                      \"diff\",\n                      s_orders[replacedItemIndex].diff\n                    );\n                    if (find_result == -1) {\n                      //不存在\n                      var names = new Array();\n                      var user_item = {\n                        username: this.username,\n                        edittime: newdate,\n                      };\n                      names.push(user_item);\n                      var diff_item = {\n                        diff: s_orders[replacedItemIndex].diff,\n                        names: names,\n                        num: 1,\n                        time: newdate,\n                        status: s_orders[replacedItemIndex].status,\n                      };\n                      item.diffs.push(diff_item);\n                      item.isedited = true;\n                    } else {\n                      item.diffs[find_result].names.push({\n                        username: this.username,\n                        edittime: newdate,\n                      }); //将当前用户加入列表\n                      item.diffs[find_result].num++; //数量加1\n                      item.diffs[find_result].time = newdate; //更新日期\n                    }\n                    var word_diff = item.word.replace(\n                      item.word,\n                      s_orders[replacedItemIndex].diff\n                    );\n                    editing_words.push(word_diff);\n                  }\n                } else {\n                  var reg_end = /\\.|\\!|\\?|\\.\\\"|\\.\\'|\\!\\\"|\\!\\'|\\?\\\"|\\?\\'/;\n                  var no_edited_word = item.word;\n                  console.log(\"no_edited_word\", no_edited_word);\n                  console.log(\"item.diffs\", item.diffs);\n                  var no_edited_index = item.diffs.findIndex((attr) => {\n                    if (\n                      reg_end.test(no_edited_word) &&\n                      reg_end.test(attr.diff) == false\n                    ) {\n                      var new_ew = no_edited_word.slice(\n                        0,\n                        no_edited_word.length - 1\n                      );\n                      return attr.diff === new_ew;\n                    } else if (\n                      reg_end.test(no_edited_word) &&\n                      reg_end.test(attr.diff)\n                    ) {\n                      return attr.diff === no_edited_word;\n                    } else {\n                      return attr.diff === no_edited_word;\n                    }\n                  });\n                  console.log(\"no_edited_index\", no_edited_index);\n                  item.diffs[no_edited_index].names.push({\n                    username: this.username,\n                    edittime: newdate,\n                  });\n                  item.diffs[no_edited_index].num++;\n                  item.diffs[no_edited_index].time = newdate;\n\n                  if (item.isfirst == true) {\n                    editing_words.push(item.word);\n                  } else {\n                    // console.log(\n                    //   \"no_edited_word >> item.diffs[no_edited_index].styleDiff\",\n                    //   item.diffs[no_edited_index].styleDiff\n                    // );\n                    editing_words.push(item.diffs[no_edited_index].styleDiff);\n                  }\n                }\n              });\n              // console.log(\"editing_words1\", editing_words);\n              var deepFlatten = (arr) =>\n                [].concat(\n                  ...arr.map((v) => (Array.isArray(v) ? deepFlatten(v) : v))\n                );\n\n              var more_ins_arr = []; //增加的原词数组\n              for (var ma = 0; ma < editing_words.length; ma++) {\n                if (Array.isArray(editing_words[ma])) {\n                  more_ins_arr.push(editing_words[ma].slice(1));\n                }\n              }\n              // console.log(\"more_ins_arr\", more_ins_arr); //more_ins_arr [[1, 2, 3], [4, 5], [7, 8]]\n              var more_ins_arr1 = deepFlatten(more_ins_arr);\n              // console.log(\"more_ins_arr1\", more_ins_arr1); //[1, 2, 3, 4, 5, 7, 8]\n\n              for (var va = 0; va < more_ins_arr1.length; va++) {\n                if (more_ins_arr1[va].word == \"\") {\n                  more_ins_arr1.splice(va, 1);\n                } else {\n                  more_ins_arr1[va].index = more_ins_arr1[va].index + va;\n                  s_words.splice(more_ins_arr1[va].index, 0, more_ins_arr1[va]);\n                }\n              }\n\n              // console.log(\"s_words2222\", s_words);\n              //新改动\n              if (more_ins_arr1.length > 0) {\n                var reg_end = /\\.|\\!|\\?|\\.\\\"|\\.\\'|\\!\\\"|\\!\\'|\\?\\\"|\\?\\'/;\n                // var reg_end = /\\.|\\!|\\?/g;\n                for (var wr = 0; wr < s_words.length - 1; wr++) {\n                  var word = s_words[wr].word;\n                  var diffs = s_words[wr].diffs;\n                  console.log(\"111111\", diffs);\n                  console.log(\"11112\", word);\n                  var no_edited_index = diffs.findIndex((attr) => {return attr.diff == word;});\n                  console.log(\"+++++++\", no_edited_index);\n                  if (reg_end.test(word[word.length - 1])) {\n                    word = word.slice(0, word.length - 1);\n                    console.log(\"-------\", word);\n                    diffs[no_edited_index].diff = diffs[\n                      no_edited_index\n                    ].diff.slice(0, diffs[no_edited_index].diff.length - 1);\n                    // console.log(\"-------\", diffs[no_edited_index].diff);\n                  }\n                  if (reg_end.test(word.slice(-2))) {\n                    word = word.slice(0, word.length - 2);\n                    diffs[no_edited_index].diff = diffs[\n                      no_edited_index\n                    ].diff.slice(0, diffs[no_edited_index].diff.length - 2);\n                  }\n                }\n                var v1_words = [];\n                v1_words = s_words.map((word) => {\n                  return word.word;\n                });\n                var new_sentence = v1_words.join(\" \");\n                var new_item = {\n                  provider: this.username,\n                  sentence: new_sentence,\n                  time: newdate,\n                };\n                new_sentences.push(new_item);\n              }\n\n              // console.log(\"s_words3333\", s_words);\n\n              editing_words = deepFlatten(\n                editing_words.map((w) => {\n                  if (Array.isArray(w) == true) {\n                    var sub_word = w.map((iw) => {\n                      if (iw.diffs[0].hasOwnProperty(\"styleDiff\")) {\n                        // console.log(\n                        //   \"iw.diffs[0].styleDiff\",\n                        //   iw.diffs[0].styleDiff\n                        // );\n                        return iw.diffs[0].styleDiff;\n                      } else {\n                        // console.log(\"iw.diffs[0].diff\", iw.diffs[0].diff);\n                        return iw.diffs[0].diff;\n                      }\n                    });\n                    return sub_word;\n                  } else {\n                    return w;\n                  }\n                })\n              );\n\n              // console.log(\"editing_words2\", editing_words);\n              //[\"In\", \"<subins>@@@</subins>\", \"<subins>@@@@@@@@@@@</subins>\", \"<del>have</del><ins>had</ins>\", \"earthquake.\"]\n              var editing_sentence = editing_words.join(\" \");\n              s_sentences.push({\n                provider: this.username,\n                sentenceDiff: editing_sentence,\n              });\n              // console.log(\"sentenceDiffs: \", s_sentences);\n            }\n          }\n          // console.log(\"bbb\", this.dbList);\n\n          //判断当前用户是否在userList中\n          for (var h = 0; h < this.userList.length; h++) {\n            if (this.username == this.userList[h].name) {\n              this.inUserList = true;\n            }\n          }\n          //如果没有则增加\n          if (this.inUserList == false) {\n            this.userList.push({\n              name: this.username,\n              my_sentences: this.sentenceList,\n            });\n          }\n          console.log(\"submitmv submitted\", this.submitted);\n          this.submitted.push(this.username);\n\n          //更新相应数据到数据库\n          this.$axios.post(this.api + \"/updatediff\", {\n            params: {\n              _id: this.diffId,\n              userList: this.userList,\n              diffList: this.dbList,\n              submitted: this.submitted,\n            },\n          });\n\n          var new_version = this.sentenceList.join(\" \");\n          this.$axios.post(this.api + \"/updateVersion\", {\n            params: {\n              _id: this.diffId,\n              new_version: new_version,\n              time: newdate,\n              username: this.username,\n              userId: this.userId,\n            },\n          });\n\n          // 当发布者超过截止日期后提交答案\n          this.$axios\n            .get(this.api + \"/currentTask?_id=\" + this.diffId)\n            .then((res) => {\n              //刷新diffList\n              this.diffList = res.data[0].diffList;\n              // let date1 = new Date();\n              // let newdate1 = date1.toLocaleString(\"chinese\", {\n              //   hour12: false,\n              // });\n              let newdate1 = this.$moment(new Date()).format(\n                \"YYYY/MM/DD HH:mm:ss\"\n              );\n              if (\n                this.username == this.publisher &&\n                !this.isManual &&\n                this.compareDate(newdate1, this.deadline)\n              ) {\n                this.countScores(); //\"2021/02/05 00:00:00\", this.deadline\n                this.isConfirm = true;\n              }\n            });\n\n          //关闭输入框\n          this.isedit = false;\n          this.loading = true;\n\n          this.$notify({\n            type: \"success\",\n            message: \"提交成功！\",\n            position: \"top-right\",\n            offset: 100,\n          });\n          this.createFinalVersion();\n          // this.$router.go(0);\n          this.$axios\n            .get(this.api + \"/currentTask?_id=\" + this.diffId)\n            .then((res) => {\n              var video_id = res.data[0].videoId; //对应视频的_id\n              var authcode = res.data[0].authcode; //对应任务的验证码\n              this.$axios\n                .get(this.api + \"/profile?name=\" + this.username)\n                .then((res) => {\n                  var userId = res.data[0]._id;\n                  var userTasks = res.data[0].myTasks;\n                  userTasks.push({\n                    taskId: this.diffId,\n                    videoId: video_id,\n                    deadline: this.deadline,\n                    authcode: authcode,\n                    title: this.taskTitle,\n                    label: this.taskLabels,\n                    time: newdate,\n                    scores: \"\",\n                  });\n\n                  // 更新用户“myTasks”\n                  this.$axios.post(this.api + \"/updateMyTasks\", {\n                    params: {\n                      _id: userId,\n                      myTasks: userTasks,\n                    },\n                  });\n                });\n            });\n        } else {\n          this.$notify({\n            // title: \"警告\",\n            type: \"warning\",\n            message: \"提交内容包含非法字符，请检查修改后再提交！\",\n            position: \"top-right\",\n            offset: 100,\n          });\n        }\n      });\n      // .catch(() => {\n      //   this.$notify({\n      //     // title: \"警告\",\n      //     type: \"warning\",\n      //     message: \"您已取消提交\",\n      //     position: \"top-right\",\n      //     offset: 100,\n      //   });\n      // });\n    },\n    //生成综合版本\n    createFinalVersion() {\n      this.$axios\n        .get(this.api + \"/currentTask?_id=\" + this.diffId)\n        .then((res) => {\n          // this.openFullScreen2()\n          this.dbList = res.data[0].diffList;\n          //加载动画\n          setTimeout(() => {\n            this.loading = false;\n          }, 1500);\n          // console.log(\"dbList\", this.dbList);\n          var final_sentences = [];\n          var only_sentences = [];\n          var only_sentences1 = [];\n          for (var k = 0; k < this.dbList.length; k++) {\n            var original_sentence = this.dbList[k].sentence;\n            var words = this.dbList[k].words;\n            var most_words = [];\n            for (var w = 0; w < words.length; w++) {\n              var words_diffs = words[w].diffs;\n              var most_edited_word = words_diffs[words_diffs.length - 1].diff; //初始值\n              //按时间排序\n              //按用户数量排序\n              var words_diffs2 = words_diffs\n                .sort(this.compare(\"time\"))\n                .sort(this.compare(\"num\"));\n              // console.log(\"words_diffs2\", words_diffs2)\n\n              if (words_diffs2[words_diffs.length - 1].styleDiff) {\n                most_edited_word = {\n                  diff: words_diffs2[words_diffs.length - 1].styleDiff,\n                  isedited: words[w].isedited,\n                };\n              } else {\n                most_edited_word = {\n                  diff: words_diffs2[words_diffs.length - 1].diff,\n                  isedited: words[w].isedited,\n                };\n              }\n              most_words.push(most_edited_word);\n            }\n            var final_sentence = \"\";\n            for (var s = 0; s < most_words.length; s++) {\n              most_words[s].diff.trim();\n              most_words[s].diff = most_words[s].diff + \" \";\n              final_sentence = final_sentence + most_words[s].diff;\n            }\n            // var final_sentence = most_words.join(\"\");\n            final_sentences.push({\n              final_sentence: final_sentence,\n              final_words: most_words,\n            });\n            only_sentences.push(final_sentence);\n          }\n          for (var t = 0; t < only_sentences.length; t++) {\n            var final_sentence1 = only_sentences[t]\n              .replace(/(<del[^>]*?>.*?<\\/del>)/g, \"\")\n              .replace(/(<ins[^>]*?>)|(<\\/ins>)/g, \"\")\n              .replace(/(<subins[^>]*?>)|(<\\/subins>)/g, \"\");\n            // console.log(only_sentences[t])\n            only_sentences1.push(final_sentence1);\n          }\n          // console.log(only_sentences1);\n          // console.log(\"final_context: \", final_sentences);\n          this.final_context = final_sentences;\n          this.sentenceList = only_sentences1;\n        });\n      // console.log(\"aaaa\", this.dbList);\n      //显示提示信息\n      // this.$message({\n      //   message: \"已更新\",\n      //   type: \"success\",\n      // });\n    },\n    compare(attr, rev) {\n      //第二个参数没有传递 默认升序排列\n      if (rev == undefined) {\n        rev = 1;\n      } else {\n        rev = rev ? 1 : -1;\n      }\n      return function(a, b) {\n        a = a[attr];\n        b = b[attr];\n        if (a < b) {\n          return rev * -1;\n        }\n        if (a > b) {\n          return rev * 1;\n        }\n        return 0;\n      };\n    },\n    //ES6语法 数组去重\n    unique(arr) {\n      return Array.from(new Set(arr));\n    },\n    showAll(event, index, s_index) {\n      event || (event = window.event);\n      event.stopPropagation\n        ? event.stopPropagation()\n        : (event.cancelBubble = true);\n      this.tableData = [];\n      //s_index表示句子序号；index表示单词序号\n      this.seen = true;\n      this.current = index;\n      this.tempindex = index;\n      this.isActive = true;\n      // this.isShowAll = true;\n      var words = this.dbList[s_index].words;\n      this.tableData = words[index].diffs;\n      // for (var i = 0; i < this.tableData.length; i++) {\n      //   this.tableData[i].names = this.unique(this.tableData[i].names);\n      // this.tableData[i].names = unique_names.join(\", \"); //bug：把names这个数组变成了字符串\n      // }\n      this.senTableData = this.dbList[s_index].sentenceDiffs;\n      // console.log(\"senTableData: \", this.senTableData);\n      // console.log(\"words: \", words);\n      // console.log(\"tableData: \", this.tableData);\n      this.changePos(event);\n      // console.log(event);\n      document.addEventListener(\"click\", this.hidePanel, false);\n    },\n    closeShow() {\n      this.seen = false;\n      this.current = null;\n      this.tempindex = null;\n      this.isActive = false;\n      // this.isShowAll = false;\n      var wordOperate = document.getElementById(\"wordOperate\");\n      wordOperate.style.display = \"none\";\n      document.removeEventListener(\"click\", this.hidePanel, false);\n    },\n    hidePanel(e) {\n      if (this.$refs.main && !this.$refs.main.contains(e.target)) {\n        //点击除弹出层外的空白区域\n        this.closeShow();\n      }\n    },\n    hidePanel1(e) {\n      if (this.$refs.history && !this.$refs.history.contains(e.target)) {\n        //点击除弹出层外的空白区域\n        this.closeTimeline();\n      }\n    },\n    pip() {\n      if (this.isVideo) {\n        var video = document.querySelector(\"#video > video\");\n        if (!document.pictureInPictureElement) {\n          //开启\n          video.requestPictureInPicture().catch((error) => {\n            console.log(\n              error,\n              \"Video failed to enter Picture-in-Picture mode.\"\n            );\n          });\n        } else {\n          //关闭\n          document.exitPictureInPicture().catch((error) => {\n            console.log(\n              error,\n              \"Video failed to leave Picture-in-Picture mode.\"\n            );\n          });\n        }\n      } else {\n        this.$notify({\n          // title: \"警告\",\n          type: \"warning\",\n          message: \"Picture-in-picture is not supported.\",\n          position: \"top-right\",\n          offset: 100,\n        });\n      }\n    },\n\n    // 计算分数\n    countScores() {\n      // this.$axios\n      //   .post(this.api + \"/getVersions\", { params: { _id: this.diffId } })\n      //   .then((res) => {\n      //     this.versionsList = res.data; //获取每个人的版本\n      //   });\n      var { ts, fnl } = countTechScores(\n        this.diffList,\n        this.publisher,\n        this.configuration.SMscore,\n        this.submitted,\n        this.configuration.timePercentage,\n        this.configuration.timeSpan\n      );\n      this.matchPoints = 100 - this.configuration.SMscore;\n      var { cms, ms } = countMatchPoints(\n        this.versionsList,\n        this.sentenceList,\n        this.publisher,\n        this.publishTime,\n        this.deadline,\n        this.matchPoints\n      );\n      this.techScoreList = ts;\n      this.matchScoreList = ms;\n      var sum = 0;\n      var scoreList = [];\n      var s = Array.from(new Set(this.submitted)); //如第一个人出现两次，则去除重复值\n      for (var j = 0; j < s.length; j++) {\n        var name = s[j];\n        this.techScoreList[name] = !this.techScoreList[name]\n          ? 0\n          : this.techScoreList[name];\n        this.matchScoreList[name] = !this.matchScoreList[name]\n          ? 0\n          : this.matchScoreList[name];\n        if (name != this.publisher) {\n          var scores =\n            Number(this.techScoreList[name]) +\n            Number(this.matchScoreList[name]);\n          sum += scores;\n          scoreList.push({\n            name: name,\n            matchScores: this.matchScoreList[name],\n            techScores: this.techScoreList[name],\n            scores: scores,\n          });\n        }\n      }\n      this.averScores = Math.round(sum / scoreList.length);\n\n      scoreList.sort(this.compare(\"scores\", false));\n      var rankList = [];\n\n      var pIndex = s.findIndex((item) => item == this.publisher);\n      pIndex != -1 ? s.splice(pIndex, 1) : s;\n      // 有发布者则把发布者去掉,无则保持原样\n\n      for (var j = 0; j < s.length; j++) {\n        scoreList[j].rank = j + 1;\n        rankList.push({ name: scoreList[j].name, rank: scoreList[j].rank });\n      }\n\n      if (scoreList != [] && this.averScores) {\n        this.techList = fnl;\n        this.matchList = cms;\n        this.scoreList = scoreList;\n        this.$axios.post(this.api + \"/updateScoresList\", {\n          params: {\n            _id: this.diffId,\n            scoreList: this.scoreList,\n            techList: this.techList,\n            matchList: this.matchList,\n            averScores: this.averScores,\n          },\n        });\n      }\n    },\n\n    //获得分数列表\n    isScoresList() {\n      var index = null;\n      this.checkStatus(); //判断身份\n      // 判断提交名单是否存在发布者\n      var newLen = Array.from(new Set(this.submitted));\n      var pIndex = newLen.findIndex((item) => item == this.publisher);\n      // 有发布者则把数组长度扣去1,无则保持原样\n      newLen = pIndex != -1 ? newLen.length : newLen.length - 1;\n\n      if (\n        this.scoreList == \"\" ||\n        this.scoreList == undefined || //如果scoreList为空\n        !this.averScores //如果平均分为空\n        // || isExceed\n      ) {\n        if (newLen <= 0) {\n          //判断是否发布者为第一个提交的人\n          this.scores = \"No participants now!\";\n          this.isSubmitted = false;\n          return;\n        } else {\n          this.countScores();\n        }\n      }\n      this.scoreList.sort(this.compare(\"scores\"));\n      if (\n        this.submitted.findIndex((item) => item === this.username) == -1 ||\n        this.username == this.publisher\n      ) {\n        //该用户没有参与本次任务或是发布者\n        this.scores = this.averScores + \" (Average score)\";\n      } else {\n        var index = this.scoreList.findIndex(\n          (item) => item.name === this.username\n        );\n        var rank = this.scoreList[index].rank;\n        this.myRank = rank;\n        this.scores = this.scoreList[index].scores;\n      }\n      if (this.username == this.publisher) {\n        // 更新发布者“myPublished”中的平均分\n        this.$axios.post(this.api + \"/updateMyPublishedScores\", {\n          params: {\n            _id: this.userId,\n            taskId: this.diffId,\n            scoreList: this.scoreList,\n            techList: this.techList,\n            matchList: this.matchList,\n            averScores: this.averScores,\n            configuration: this.configuration,\n          },\n        });\n      } else if (\n        this.submitted.findIndex((item) => item === this.username) != -1 &&\n        this.username != this.publisher\n      ) {\n        //如若先前更新myTasks失败\n        var userTasks = [];\n        this.$axios\n          .get(this.api + \"/profile?name=\" + this.username)\n          .then((res) => {\n            userTasks = res.data[0].myTasks;\n            let newdate = this.$moment(new Date()).format(\n              \"YYYY/MM/DD HH:mm:ss\"\n            );\n            userTasks.push({\n              taskId: this.diffId,\n              videoId: this.video_id,\n              deadline: this.deadline,\n              authcode: this.authcode,\n              title: this.taskTitle,\n              label: this.taskLabels,\n              time: newdate,\n              scores: \"\",\n            });\n\n            // 更新用户“myTasks”中的分数\n            this.$axios.post(this.api + \"/updateMyTasksScores\", {\n              params: {\n                _id: this.userId,\n                taskId: this.diffId,\n                scores: this.scoreList[index].scores\n                  ? this.scoreList[index].scores\n                  : \"\",\n                userRank: this.myRank,\n                userTasks: userTasks,\n              },\n            });\n          });\n      }\n    },\n\n    //比较日期大小\n    compareDate(Date1, Date2) {\n      if (Date1.search(\"/\") == -1) {\n        //如果模式为\"2021/02/06 00:00:00\"\n        Date1 = Date1.replace(\"-\", \"/\"); //转换成标准格式\n      }\n      if (Date2.search(\"/\") == -1) {\n        Date2 = Date2.replace(\"-\", \"/\");\n      }\n      if (Date1.split(\" \")[0] == Date2.split(\" \")[0]) {\n        //如果是同一天，则比较时分秒\n        var time1 = Date1.split(\" \")[1].split(\":\");\n        var time2 = Date2.split(\" \")[1].split(\":\");\n        var total1 =\n          Number(time1[0]) * 3600 + Number(time1[1]) * 60 + Number(time1[2]);\n        var total2 =\n          Number(time2[0]) * 3600 + Number(time2[1]) * 60 + Number(time2[2]);\n        return total1 - total2 >= 0 ? true : false;\n      } else {\n        var oDate1 = new Date(Date1.split(\" \")[0]);\n        var oDate2 = new Date(Date2.split(\" \")[0]);\n        return oDate1 >= oDate2 ? true : false;\n      }\n    },\n    //查看分数列表\n    checkScoresDetails() {\n      if (this.isPublisher) {\n        var path = \"/diff/\" + this.diffId + \"/scores\";\n        this.$router.push(path);\n      } else {\n        var path = \"/diff/\" + this.diffId + \"/scoresStu\";\n        this.$router.push(path);\n      }\n    },\n    // 检查身份\n    checkStatus() {\n      var index = this.submitted.findIndex((item) => item == this.username);\n      if (this.username == this.publisher) {\n        this.isPublisher = true;\n        this.isSubmitted = true;\n      } else if (index != -1) {\n        this.isSubmitted = true;\n      }\n    },\n\n    manualCofirm() {\n      //手动确认后执行算分的函数\n      this.isScoresList();\n      this.isManual = !this.isManual;\n      this.isConfirm = !this.isConfirm;\n      this.setManual();\n    },\n\n    setManual() {\n      //设置是否手动确认分数\n      this.$axios.post(this.api + \"/updateIsManual\", {\n        params: {\n          _id: this.diffId,\n          isManual: this.isManual,\n          isConfirm: this.isConfirm,\n        },\n      });\n    },\n\n    //video play & load & pause\n    playFunc() {\n      this.isCountTime = true;\n      console.log(\"playing\");\n    },\n    pauseFunc() {\n      this.isCountTime = false;\n      console.log(\"pasused\");\n      // your code\n    },\n    loaded() {\n      this.isCountTime = false;\n      console.log(\"waiting\");\n    },\n    startTime() {\n      this.isCountTime = true;\n      console.log(\"moving\");\n    },\n\n    updateStudyTime() {\n      let newdate = this.$moment(new Date()).format(\"YYYY/MM/DD HH:mm:ss\");\n      var timespan = this.timespan;\n      this.$axios.post(\"/score/updateStudyTime\", {\n        params: {\n          _id: this.userId,\n          listenTime: timespan,\n          recordTime: newdate,\n        },\n      });\n    },\n  },\n  //页面生成前要做的工作\n  created() {\n    window.addEventListener(\"beforeunload\", this.updateStudyTime);\n    //可以考虑加个动画，因为有较多数据要加载，不然会显得页面卡顿\n    this.diffId = this.$route.params.diffId;\n    this.username = sessionStorage.getItem(\"userName\");\n    this.$axios.get(this.api + \"/profile?name=\" + this.username).then((res) => {\n      this.userId = res.data[0]._id;\n      this.userStatus = res.data[0].status;\n    });\n    this.$axios\n      .post(this.api + \"/getVersions\", { params: { _id: this.diffId } })\n      .then((res) => {\n        this.versionsList = res.data; //获取每个人的版本\n      });\n    //渲染之前请求数据，判断是否有第一版本\n    this.$axios\n      .get(this.api + \"/currentTask?_id=\" + this.diffId)\n      .then((res) => {\n        var video_id = res.data[0].videoId; //对应视频的_id\n        this.userList = res.data[0].userList;\n        this.diffList = res.data[0].diffList;\n        this.publisher = res.data[0].publisher;\n        this.submitted = res.data[0].submitted;\n        this.publishTime = res.data[0].time;\n        this.taskTitle = res.data[0].title;\n        this.deadline = res.data[0].deadline;\n        this.taskLabels = res.data[0].label;\n        this.scoreList = res.data[0].scoreList;\n        this.techList = res.data[0].techList;\n        this.matchList = res.data[0].matchList;\n        this.averScores = res.data[0].averScores;\n        this.isManual = res.data[0].isManual;\n        this.isConfirm = res.data[0].isConfirm;\n        this.video_id = res.data[0].videoId; //对应视频的_id\n        this.authcode = res.data[0].authcode;\n        this.configuration = res.data[0].configuration;\n        console.log(\"lll\", this.submitted);\n\n        // let date = new Date();\n        // let newdate = date.toLocaleString(\"chinese\", {\n        //   hour12: false,\n        // });\n        let newdate = this.$moment(new Date()).format(\"YYYY/MM/DD HH:mm:ss\");\n        var isOut = this.compareDate(newdate, this.deadline);\n        console.log(\"isOut\", isOut);\n        if (this.userStatus == \"1\") {\n          this.isTeacher = true;\n        }\n        if (this.userStatus == \"0\") {\n          this.isTeacher = false;\n          if (isOut) {\n            this.isreadonly = false;\n          }\n        }\n\n        this.$axios\n          .get(this.api + \"/currentVideoPublisher?name=\" + this.publisher)\n          .then((res) => {\n            this.status = res.data[0].status;\n            if (this.status == \"1\") {\n              this.identity = \"Teacher\";\n            }\n          });\n        // console.log(this.userList);\n        //获取视频路径，从服务器获取\n        this.$axios\n          .get(this.api + \"/currentVideo?_id=\" + video_id)\n          .then((res) => {\n            this.fileName = res.data[0].fileName;\n            var filetype = this.fileName.split(\".\")[1];\n            for (var i = 0; i < this.videoType.length; i++) {\n              if (filetype == this.videoType[i]) {\n                this.isVideo = true;\n              }\n            }\n          });\n        //先判断是否有修改记录，再判断是否有第一版本\n        if (this.diffList.length == 0) {\n          this.$axios\n            .get(this.api + \"/allVersions?_id=\" + this.diffId)\n            .then((res) => {\n              if (res.data.length == 0) {\n                //当前无人提交版本，显示输入框\n                this.isversion1 = false;\n                this.loading = false;\n              } else {\n                this.isversion1 = true;\n                this.loading = false;\n                this.text_v1 = res.data[0].version;\n              }\n            });\n        } else {\n          //形成综合版本\n          this.createFinalVersion();\n          this.isversion1 = true;\n          this.isFinal = true;\n        }\n      });\n    // if (this.submitted.length == 0) {\n    //   this.isScoresList();\n    // }\n  },\n  updated() {\n    //判断是音频还是视频\n    this.decidePlayer();\n    let newdate = this.$moment(new Date()).format(\"YYYY/MM/DD HH:mm:ss\");\n    //(\"2021/02/06 00:00:00\", \"2021/02/05 00:00:00\" newdate, this.deadline)\n    var isDDL = this.compareDate(newdate, this.deadline);\n    if (\n      // this.submitted.length >= 1 &&\n      !this.isManual &&\n      (isDDL || this.isConfirm)\n    ) {\n      //如果为自动计算，过了ddl或已经确认过，则运行函数\n      this.isScoresList();\n    }\n  },\n  mounted() {\n    setInterval(() => {\n      if (this.isCountTime) {\n        this.timespan += 0.1;\n        // console.log(this.timespan);\n      }\n    }, 100);\n    //window.addEventListener('beforeunload', this.updateStudyTime)\n    // window.addEventListener(\"keypress\", this.startTime());\n  },\n  destroyed() {\n    window.removeEventListener(\"beforeunload\", this.updateStudyTime);\n    // window.removeEventListener(\"scroll\", this.setHeadPosition, true);\n  },\n};\n</script>\n\n<style>\n.con {\n  z-index: 11000;\n  width: 950px;\n  height: 600px;\n  background-color: white;\n  position: fixed;\n  top: 15%;\n  left: 20%;\n  position: fixed;\n  box-shadow: 0px 0px 5px gray;\n  border-radius: 5px;\n}\n/* 浮框底部距离 */\n.el-collapse-item__content {\n  padding-bottom: 0;\n}\n\n.eltable {\n  width: 100%;\n  font-size: 90%;\n}\n\n.eltable th {\n  padding: 4px 0 !important;\n}\n\n.eltable td {\n  padding: 4px 0 !important;\n}\n\n.badge {\n  font-size: 1em;\n  padding: 0.28em 0.22em;\n  font-weight: normal;\n  /* 字体可能得改改 */\n}\n.buttons {\n  position: fixed;\n  right: 0;\n  margin-right: 6px;\n  display: inline-block;\n  margin-top: 150px;\n  z-index: 99;\n}\n\n.el-header,\n.el-footer {\n  background-color: #b3c0d1;\n  color: #333;\n  line-height: 60px;\n}\n\n.edit {\n  background-color: lavender;\n}\n\nins {\n  color: green;\n  font-weight: bold;\n}\n\nsubins {\n  color: blue;\n}\n\ndel {\n  color: indianred;\n}\n\n.el-main {\n  background: #d3cce3;\n  background: -webkit-linear-gradient(to left, #fbe9fd 10%, #eee2ff 100%);\n  background: linear-gradient(to left, #fbe9fd 10%, #eee2ff 100%);\n  border-radius: 2em;\n}\n.edit-tip {\n  color: purple;\n  font-size: 20px;\n  word-wrap: break-word;\n  word-break: break-all;\n}\n\n#textDiv {\n  margin-top: 0;\n  padding: 1% 2%;\n  font-size: 20px;\n  background-color: white;\n  border-radius: 6px;\n  width: 100%;\n  height: 85%;\n  text-align: left;\n}\n\n#insertText {\n  text-decoration: none;\n  color: #21bf73;\n}\n\n#deleteText {\n  color: #ef6c57;\n  text-decoration: line-through #ea4c4c solid;\n}\n.box-card {\n  width: 1000px;\n  margin-top: 2%;\n}\n.active:hover {\n  color: rgb(0, 0, 95);\n  border-radius: 2px;\n  border-bottom: 1px solid black;\n}\n#wordOperate {\n  display: none;\n  width: 600px;\n  padding: 5px 5px;\n  border-radius: 5px;\n  transition-duration: 100ms;\n  line-height: 100%;\n  box-shadow: 0px 0px 7px rgb(143, 141, 141);\n  z-index: 10001;\n}\n\n/* 视频css */\n.video-container {\n  margin: 1.5% auto;\n  display: flex;\n  justify-content: center;\n}\n\n.video-left-box,\n.video-right-box {\n  margin: 0 1.5em;\n}\n\n.example-player {\n  position: relative;\n  width: 750px;\n  height: 450px;\n  background-color: #000;\n  font-weight: normal;\n}\n\n/* 音频css */\ndiv.audio-box > .vueAudioBetter {\n  overflow: hidden;\n  width: 500px;\n  margin: 0 auto;\n  background-color: #e7d9ea;\n  border-radius: 8px;\n  box-shadow: 5px 5px 10px -4px #63645e;\n  background-image: linear-gradient(to top, #9656a1 0%, #fbc2eb 100%);\n  color: #4a0e5c;\n}\n\n.iconfont {\n  color: #45046a !important;\n}\n\n.process {\n  background: #ffc3e7 !important;\n}\n\n.thunk > .block {\n  border: 3px solid #ffc3e7 !important;\n}\n\n#audio {\n  margin-top: 1.75em;\n  width: 100%;\n}\n\n.audio-box {\n  width: 40em;\n}\n\n/* 信息卡片css */\n.my-info-card.q-card.q-card--bordered.q-card--flat.no-shadow {\n  width: 18em;\n}\n/* 信息卡片发布者头像 */\ncanvas.publisher-avt {\n    width: 40px;\n    height: 40px;\n    margin: 5px 1px;\n}\n\n/* 视频快进快退css */\n#menu,\n.submit-btn,\n.edit-btn {\n  display: flex;\n  justify-content: center;\n}\n\n/* .el-row {\n  margin-bottom: 20px;\n} */\n.el-col {\n  border-radius: 4px;\n}\n.row-bg {\n  padding: 10px 0;\n  /* background-color: #f9fafc; */\n}\n.el-textarea {\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  vertical-align: baseline;\n  font-size: 16px;\n  line-height: 1.5;\n}\nmain#mainContent {\n  padding-bottom: 4%;\n}\n.q-item__section.column.q-item__section--main.justify-center {\n  flex-direction: column;\n}\n.aui_close {\n  width: 15px;\n  height: 15px;\n  line-height: 15px;\n  display: block;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  font-family: Helvetica, STHeiti;\n  _font-family: \"\\u9ed1\\u4f53\", \"Book Antiqua\", Palatino;\n  font-size: 18px;\n  border-radius: 20px;\n  background: #999;\n  color: #fff;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n  -moz-transition: linear 0.06s;\n  -webkit-transition: linear 0.06s;\n  transition: linear 0.06s;\n  padding: 0;\n  text-align: center;\n  text-decoration: none;\n  outline: none;\n  cursor: pointer;\n  z-index: 20;\n}\n.aui_close:hover {\n  width: 17px;\n  height: 17px;\n  line-height: 17px;\n  right: 9px;\n  top: 9px;\n  color: #fff;\n  box-shadow: 0 1px 3px rgba(209, 40, 42, 0.5);\n  background: #d1282a;\n  border-radius: 24px;\n  transition: all 0.2s ease-out;\n  text-decoration: none;\n  opacity: 0.8;\n}\n.aui_close1 {\n  width: 25px;\n  height: 25px;\n  line-height: 25px;\n  display: block;\n  position: absolute;\n  right: 19px;\n  top: 8px;\n  font-family: Helvetica, STHeiti;\n  _font-family: \"\\u9ed1\\u4f53\", \"Book Antiqua\", Palatino;\n  font-size: 20px;\n  border-radius: 20px;\n  background: #999;\n  color: #fff;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n  -moz-transition: linear 0.06s;\n  -webkit-transition: linear 0.06s;\n  transition: linear 0.06s;\n  padding: 0;\n  text-align: center;\n  text-decoration: none;\n  outline: none;\n  cursor: pointer;\n  z-index: 20;\n}\n.aui_close1:hover {\n  width: 27px;\n  height: 27px;\n  line-height: 27px;\n  right: 18px;\n  top: 7px;\n  color: #fff;\n  box-shadow: 0 1px 3px rgba(209, 40, 42, 0.5);\n  background: #d1282a;\n  border-radius: 24px;\n  transition: all 0.2s ease-out;\n  text-decoration: none;\n  opacity: 0.8;\n}\n</style>\n"]}]}
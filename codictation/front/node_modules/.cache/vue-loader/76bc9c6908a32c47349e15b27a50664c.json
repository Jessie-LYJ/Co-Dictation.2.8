{"remainingRequest":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\src\\components\\scores.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\src\\components\\scores.vue","mtime":1615344212770},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["scores.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"scores.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div><Header></Header></div>\n    <div class=\"dashboard-container\">\n      <h2>分数展示</h2>\n      <el-button type=\"primary\" @click=\"handleDownload()\">导出</el-button>\n      <el-button type=\"primary\" @click=\"goBack()\">返回</el-button>\n      <br />\n      <br />\n      <p>修改参数：</p>\n      技术分总分：<input\n        type=\"text\"\n        v-model=\"techPoints\"\n        placeholder=\"技术总分\"\n      />\n      <br />\n      技术分扣除比例（0.00）：<input\n        type=\"text\"\n        v-model=\"percentD\"\n        placeholder=\"权重扣除总\"\n      />\n      <br />\n      时间差（min）：<input\n        type=\"text\"\n        v-model=\"timeDiff\"\n        placeholder=\"提交时间相差多少（min）\"\n      />\n      <br />\n      <br />\n      <el-button type=\"primary\" @click=\"pre()\">预览</el-button>\n      <el-button type=\"primary\" v-if=\"isPre\" @click=\"cancelPre()\"\n        >取消预览</el-button\n      >\n      <el-button type=\"primary\" v-if=\"isSave\" @click=\"savePre()\"\n        >确认修改</el-button\n      >\n      <p>平均分：{{ averScores }}</p>\n      <p>超过平均分人数：{{ exceedAverNum }}</p>\n      <p>总人数：{{ scoresData.length }}</p>\n      <p>及格率：{{ pass60Rate }}</p>\n      <p>超过平均分率：{{ passAverRate }}</p>\n      <p>最高分：{{ maxScore }}</p>\n      <p>最低分: {{ minScore }}</p>\n      <br />\n      <el-table\n        v-loading=\"loading\"\n        :data=\"scoresData\"\n        style=\"width: 100%\"\n        border\n        fit\n        highlight-current-row\n      >\n        <el-table-column type=\"index\" label=\"序号\"> </el-table-column>\n        <el-table-column prop=\"name\" sortable label=\"用户名\" />\n        <el-table-column prop=\"techScores\" sortable label=\"技术分\" />\n        <el-table-column prop=\"matchScores\" sortable label=\"匹配分\" />\n        <el-table-column prop=\"scores\" sortable label=\"总分\" />\n        <el-table-column label=\"详情\">\n          <template slot-scope=\"scope\">\n            <el-button\n              size=\"mini\"\n              type=\"primary\"\n              @click=\"handleCheck(scope.$index, scope.row)\"\n              >查看\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-pagination\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :current-page=\"currentpage\"\n      :page-sizes=\"[5, 10, 20, 50]\"\n      :page-size=\"pagesize\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      :total=\"totalData.length\"\n    >\n    </el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport XLSX, { WorkSheet } from \"xlsx\";\nimport Header from \"../components/basic/Header.vue\";\nconst _ = require(\"loadsh\");\n\nvar {\n  countTechScores,\n  countMatchPoints,\n  linearReg,\n} = require(\"../countScores.js\");\n\nexport default {\n  data() {\n    return {\n      name: \"\",\n      diffId: \"\",\n      userId: \"\",\n      averScores: \"\", //页面显示的平均分\n      oAverScores: \"\", //数据库中的平均分\n      oScoresData: [], //根据数据库中内容生成的表格\n      scoresData: [], //页面展示的中的表格\n      totalData:[],\n      api: \"/api\",\n      matchPoints: 40, //匹配总分\n      techPoints: 60, //技术总分\n      percentD: 0.6, //技术分扣除比例\n      timeDiff: 6, //相差时间\n      techList2: [], //参数调整后的技术详情\n      matchList2: [], //参数调整后的匹配详情\n      scoreList2: [], //参数调整后的分数详情\n      averScores2: \"\", //参数调整后的平均分\n      preScoresData: [], //参数调整后的表格\n      loading: true,\n      isPre: false,//是否预览\n      isSave: false,//是否保存\n      //页面\n      exceedAverNum: \"\",//超过平均分人数\n      pass60Rate: \"\",//超过60的比率\n      passAverRate: \"\",//超过平均分的比率\n      maxScore: \"\",//最大值\n      minScore: \"\",//最小值\n\n      // 数据库中获取到的值\n      oExceedAverNum: \"\",\n      oPass60Rate: \"\",\n      oPassAverRate: \"\",\n      oMaxScore: \"\",\n      oMinScore: \"\",\n      //分页\n      pagesize: 5,\n      currentpage: 1\n    };\n  },\n  methods: {\n    pre() {\n      this.loading = true;\n      this.$axios\n        .get(this.api + \"/currentTask?_id=\" + this.diffId)\n        .then((res) => {\n          //获取数据库中内容\n          var diffList = res.data[0].diffList;\n          var publisher = res.data[0].publisher;\n          var submitted = res.data[0].submitted;\n          var matchList = res.data[0].matchList;\n          //根据页面的参数再次进行计算\n          var { ts, fnl } = countTechScores(\n            diffList,\n            publisher,\n            this.techPoints,\n            submitted,\n            this.percentD,\n            this.timeDiff\n          );\n          var matchList2 = matchList;\n          for (var i = 0; i < matchList2.length; i++) {\n            this.matchPoints = 100 - this.techPoints;\n            matchList2[i].points = Math.round(\n              this.matchPoints * matchList2[i].matchRate\n            );\n          }\n          linearReg(matchList2);\n          //生成预览表格\n          this.formPreData(matchList2, ts, fnl);\n          this.$notify({\n            title: \"自定义位置\",\n            message: \"预览成功\",\n            position: \"bottom-right\",\n            type: \"success\",\n          });\n        });\n    },\n\n    formPreData(matchList, techList, fnl) {\n      this.techList2 = fnl;\n      this.matchList2 = matchList;\n      var sum = 0;\n      for (var i = 0; i < this.matchList2.length; i++) {\n        var name = this.matchList2[i].name;\n        var scores = Math.round(techList[name] + this.matchList2[i].points);\n        sum += scores;\n        this.scoreList2.push({\n          name: name,\n          techScores: techList[name],\n          matchScores: this.matchList2[i].points,\n          scores: scores,\n        });\n      }\n      this.averScores2 = Math.round(sum / this.matchList2.length);\n      //通过已获得数据进行计算，生成表格\n      var preScoresData = [];\n      for (var i = 0; i < matchList.length; i++) {\n        var name = matchList[i].name;\n        var points = matchList[i].points;\n        preScoresData.push({\n          name: name,\n          techScores: techList[name],\n          matchScores: points,\n          scores: Math.round(techList[name] + points),\n        });\n      }\n      this.countDetails(preScoresData,this.averScores2)\n      //生成预览\n      this.preScoresData = preScoresData;\n      this.averScores = this.averScores2;\n      this.totalData = this.preScoresData\n      this.scoresData = _.chunk(this.totalData, this.pagesize)[\n        this.currentpage - 1\n      ];\n      this.loading = false;\n      this.isPre = true;\n      this.isSave = true;\n    },\n\n    countDetails(scoresData, averScores) {\n      var pass60;\n      var slist = [];\n      for (var i = 0; i < scoresData.length; i++) {\n        slist.push(scoresData[i].scores);\n        if (scoresData[i].scores >= averScores) {\n          this.exceedAverNum += 1;\n        }\n        if (scoresData[i].scores >= 60) {\n          pass60 += 1;\n        }\n      }\n      this.pass60Rate = Math.round((pass60 / slist.length) * 100)\n      this.passAverRate = Math.round((this.exceedAverNum / slist.length) * 100)\n      this.pass60Rate = this.pass60Rate?this.pass60Rate + \"%\":0\n      this.passAverRate = this.passAverRate?this.passAverRate + \"%\":0\n      this.maxScore = Math.max.apply(null, slist);\n      this.minScore = Math.min.apply(null, slist);\n    },\n\n    cancelPre() {\n      //取消预览\n      this.totalData = this.oScoresData\n      this.scoresData = _.chunk(this.totalData, this.pagesize)[\n        this.currentpage - 1\n      ];\n      this.averScores = this.oAverScores;\n      this.exceedAverNum = this.oExceedAverNum\n      this.pass60Rate = this.oPass60Rate\n      this.passAverRate = this.oPassAverRate\n      this.maxScore = this.oMaxScore\n      this.minScore = this.oMinScore\n      this.isPre = false;\n      this.isSave = false;\n      this.$notify({\n        title: \"自定义位置\",\n        message: \"已取消预览\",\n        position: \"bottom-right\",\n      });\n    },\n\n    savePre() {\n      //更新数据库中内容\n      this.$confirm(\"是否确认修改?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n        center: true,\n      }).then(() => {\n        this.$axios.post(this.api + \"/updateScoresList\", {\n          params: {\n            _id: this.diffId,\n            scoreList: this.scoreList2,\n            techList: this.techList2,\n            matchList: this.matchList2,\n            averScores: this.averScores2,\n          },\n        });\n\n        this.$axios.post(this.api + \"/updateMyPublishedScores\", {\n          params: {\n            _id: this.userId,\n            taskId: this.diffId,\n            scoreList: this.scoreList2,\n            techList: this.techList2,\n            matchList: this.matchList2,\n            averScores: this.averScores2,\n          },\n        });\n\n        this.$axios.post(this.api + \"/updateStuScores\", {//保存修改后，对已查看分数的学生的分数进行修改\n          params: {\n            taskId: this.diffId,\n            scoreList: this.scoreList2,\n          },\n        });\n\n        this.isPre = false;\n        this.isSave = false;\n      });\n    },\n\n    formScoresData(matchList, scoreList) {\n      //根据已获得数据生成表格\n      for (var i = 0; i < matchList.length; i++) {\n        var name = matchList[i].name;\n        var index = scoreList.findIndex((item) => item.name == name);\n        this.oScoresData.push({\n          name: name,\n          techScores: scoreList[index].techScores,\n          matchScores: scoreList[index].matchScores,\n          scores: scoreList[index].scores,\n        });\n      }\n      //生成预览\n      this.totalData = this.oScoresData\n      this.scoresData = _.chunk(this.totalData, this.pagesize)[\n        this.currentpage - 1\n      ];\n      this.loading = false;\n    },\n\n    handleDownload() {\n      var tableHeader = [[\"用户名\", \"技术分\", \"匹配分\", \"总分\"]]; //表头\n      var dataList = [];\n      this.totalData.forEach((item) => {\n        dataList.push([\n          item.name,\n          item.techScores,\n          item.matchScores,\n          item.scores,\n        ]);\n      }); //表数据\n      var filename = this.timestamp(); //文件名，以时间命名\n      var sheet = \"sheet1\"; //存在第几个表\n      let aoa = [];\n\n      var overview = [];\n\n      overview.push(\n        [\"平均分\", String(this.averScores)],\n        [\"超过平均分人数\", String(this.exceedAverNum)],\n        [\"总人数\", String(dataList.length)],\n        [\"及格率\", String(this.pass60Rate)],\n        [\"超过平均分率\", String(this.passAverRate)],\n        [\"最高分\", String(this.maxScore)],\n        [\"最低分\", String(this.minScore)]\n      );\n      var a = [[], []]; //当a=[[],[]]时相当于空两行\n\n      // aoa的数据格式：[[],[],[],[]]   数组的第一个子数组可以指定为表头  根据情况而定\n      aoa = overview.concat(a, tableHeader, dataList);\n\n      let workSheet = XLSX.utils.aoa_to_sheet(aoa);\n      let workBook = XLSX.utils.book_new();\n\n      XLSX.utils.book_append_sheet(workBook, workSheet, sheet);\n      //保存\n      XLSX.writeFile(workBook, filename + \".xlsx\");\n    }, //导出Excel表\n\n    add0(m) {\n      return m < 10 ? \"0\" + m : m;\n    },\n\n    timestamp() {\n      var time = new Date();\n      var y = time.getFullYear();\n      var m = time.getMonth() + 1;\n      var d = time.getDate();\n      var h = time.getHours();\n      var mm = time.getMinutes();\n      var s = time.getSeconds();\n\n      return (\n        y +\n        this.add0(m) +\n        this.add0(d) +\n        this.add0(h) +\n        this.add0(mm) +\n        this.add0(s)\n      );\n    }, //生成时间戳\n\n    handleCheck(index, item) {\n      var path = \"/diff/\" + this.diffId + \"/scoresStu\";\n      this.$router.push({ path: path, query: { name: item.name } });\n    }, //编辑\n\n    goBack() {\n      //返回上一页\n      this.$router.go(-1);\n    },\n\n    handleSizeChange(val) {\n      this.pagesize = val;\n      this.scoresData = _.chunk(this.totalData, this.pagesize)[\n        this.currentpage - 1\n      ];\n    }, // 每页查看条数变化\n    handleCurrentChange(val) {\n      this.currentpage = val;\n      this.scoresData = _.chunk(this.totalData, this.pagesize)[\n        this.currentpage - 1\n      ];\n    }, // 当前页码变化\n  },\n\n  components: {\n    Header,\n  },\n  created() {\n    this.name = sessionStorage.getItem(\"userName\");\n    this.diffId = this.$route.params.diffId;\n    //请求数据\n    this.$axios.get(this.api + \"/profile?name=\" + this.name).then((res) => {\n      var myPublished = res.data[0].myPublished;\n      this.userId = res.data[0]._id;\n      var index = myPublished.findIndex((item) => item.taskId === this.diffId);\n      var techList = myPublished[index].techList;\n      var matchList = myPublished[index].matchList;\n      var scoreList = myPublished[index].scoreList;\n      this.averScores = myPublished[index].averScores;\n      this.oAverScores = this.averScores;\n      this.exceedAverNum = myPublished[index].exceedAverNum;\n      this.pass60Rate = myPublished[index].pass60Rate;\n      this.passAverRate = myPublished[index].passAverRate;\n      this.maxScore = myPublished[index].maxScore;\n      this.minScore = myPublished[index].minScore;\n      this.oExceedAverNum = myPublished[index].exceedAverNum;\n      this.oPass60Rate = myPublished[index].pass60Rate;\n      this.oPassAverRate = myPublished[index].passAverRate;\n      this.oMaxScore = myPublished[index].maxScore;\n      this.oMinScore = myPublished[index].minScore;\n      this.formScoresData(matchList, scoreList);\n    });\n    this.$forceUpdate();\n  },\n};\n</script>\n\n<style>\n.dashboard-container {\n  margin-top: 6%;\n}\n</style>"]}]}
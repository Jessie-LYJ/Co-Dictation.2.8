{"remainingRequest":"D:\\project\\codictation.2.7\\codictation\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js!D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js?kebab!D:\\project\\codictation.2.7\\codictation\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-1!D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\codictation.2.7\\codictation\\src\\components\\back\\task\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\codictation.2.7\\codictation\\src\\components\\back\\task\\index.vue","mtime":1614158443061},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js","mtime":499162500000},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <div class=\"filter-container\" style=\"margin: 0 0 10px 0\">\r\n      <el-input\r\n        v-model=\"Qlist.publisher\"\r\n        placeholder=\"发布者\"\r\n        style=\"width: 200px; margin-right: 5px\"\r\n        class=\"filter-item\"\r\n        @keyup.enter.native=\"handleFilter\"\r\n      />\r\n      <el-input\r\n        v-model=\"Qlist.title\"\r\n        placeholder=\"标题\"\r\n        style=\"width: 200px; margin-right: 5px\"\r\n        class=\"filter-item\"\r\n        @keyup.enter.native=\"handleFilter\"\r\n      />\r\n      <el-input\r\n        v-model=\"Qlist.label\"\r\n        placeholder=\"标签\"\r\n        style=\"width: 200px; margin-right: 7px\"\r\n        class=\"filter-item\"\r\n        @keyup.enter.native=\"handleFilter\"\r\n      />\r\n      <el-button\r\n        class=\"filter-item\"\r\n        type=\"primary\"\r\n        icon=\"el-icon-search\"\r\n        @click=\"handleFilter\"\r\n      >\r\n        搜索\r\n      </el-button>\r\n      <el-button\r\n        v-if=\"showBack\"\r\n        class=\"filter-item\"\r\n        type=\"primary\"\r\n        icon=\"el-icon-search\"\r\n        @click=\"closeFilter\"\r\n      >\r\n        返回\r\n      </el-button>\r\n      <el-button\r\n        class=\"filter-item\"\r\n        style=\"margin-left: 10px\"\r\n        type=\"primary\"\r\n        icon=\"el-icon-edit\"\r\n        @click=\"handleCreate\"\r\n      >\r\n        添加\r\n      </el-button>\r\n    </div>\r\n\r\n    <el-table\r\n      v-loading=\"loading\"\r\n      element-loading-text=\"拼命加载中\"\r\n      element-loading-spinner=\"el-icon-loading\"\r\n      element-loading-background=\"rgba(0, 0, 0, 0.8)\"\r\n      :data=\"users\"\r\n      style=\"width: 100%\"\r\n      border\r\n      fit\r\n      highlight-current-row\r\n      @sort-change=\"sortChange\"\r\n    >\r\n      <el-table-column type=\"index\" label=\"序号\"> </el-table-column>\r\n      <el-table-column prop=\"_id\" sortable=\"custom\" label=\"任务_id\" />\r\n      <el-table-column prop=\"videoId\" sortable=\"custom\" label=\"视频id\" />\r\n      <el-table-column prop=\"reference\" label=\"参考\" />\r\n      <el-table-column prop=\"deadline\" sortable=\"custom\" label=\"截止日期\" />\r\n      <el-table-column prop=\"time\" sortable=\"custom\" label=\"发布时间\" />\r\n      <el-table-column\r\n        prop=\"authcode\"\r\n        width=\"70\"\r\n        sortable=\"custom\"\r\n        label=\"验证码\"\r\n      />\r\n      <el-table-column prop=\"words\" sortable=\"custom\" label=\"限制字数\" />\r\n      <el-table-column prop=\"averScores\" sortable=\"custom\" label=\"平均分\" />\r\n      <el-table-column\r\n        prop=\"publisher\"\r\n        width=\"70\"\r\n        sortable=\"custom\"\r\n        label=\"发布者\"\r\n      />\r\n      <el-table-column prop=\"title\" sortable=\"custom\" label=\"标题\" />\r\n      <el-table-column prop=\"label\" width=\"70\" sortable=\"custom\" label=\"标签\" />\r\n      <el-table-column\r\n        label=\"更多\"\r\n        align=\"center\"\r\n        width=\"250\"\r\n        class-name=\"small-padding fixed-width\"\r\n      >\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"\r\n              drawer = true;\r\n              findDiffList(scope.$index, scope.row);\r\n            \"\r\n            >用户修改\r\n          </el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"\r\n              drawer = true;\r\n              findUserList(scope.$index, scope.row);\r\n            \"\r\n            >用户列表\r\n          </el-button>\r\n          <br />\r\n          <br />\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"\r\n              drawer = true;\r\n              findSubmitted(scope.$index, scope.row);\r\n            \"\r\n            >已提交列表\r\n          </el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"\r\n              drawer = true;\r\n              findComment(scope.$index, scope.row);\r\n            \"\r\n            >评论\r\n          </el-button>\r\n          <br />\r\n          <br />\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"\r\n              drawer = true;\r\n              findScoreList(scope.$index, scope.row);\r\n            \"\r\n            >分数\r\n          </el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"\r\n              drawer = true;\r\n              findTechList(scope.$index, scope.row);\r\n            \"\r\n            >技术\r\n          </el-button>\r\n          <br />\r\n          <br />\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"\r\n              drawer = true;\r\n              findMatchList(scope.$index, scope.row);\r\n            \"\r\n            >匹配\r\n          </el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"success\"\r\n            @click=\"handleEdit(scope.$index, scope.row)\"\r\n            >编辑\r\n          </el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"danger\"\r\n            @click=\"handleDelete(scope.$index, scope.row)\"\r\n            >删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <br />\r\n    <el-pagination\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"\r\n      :current-page=\"Qlist.pagenum\"\r\n      :page-sizes=\"[10, 20, 30, 50]\"\r\n      :page-size=\"Qlist.pagesize\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      :total=\"total\"\r\n    >\r\n    </el-pagination>\r\n\r\n    <!-- 抽屉+树状展示用户列表 -->\r\n    <el-drawer\r\n      :title=\"drawerTitle\"\r\n      :visible.sync=\"drawer\"\r\n      direction=\"rtl\"\r\n      :modal-append-to-body=\"false\"\r\n    >\r\n      <el-tree\r\n        :data=\"list\"\r\n        :props=\"defaultProps\"\r\n        @node-click=\"handleNodeClick\"\r\n      ></el-tree>\r\n      <el-scrollbar></el-scrollbar>\r\n    </el-drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst _ = require(\"loadsh\");\r\n\r\nexport default {\r\n  name: \"task\",\r\n  data() {\r\n    return {\r\n      api: \"/task\",\r\n      users: {},\r\n      totalData: [],\r\n      Qlist: {\r\n        pagenum: 1, //当前页数\r\n        pagesize: 20,\r\n        publisher: \"\",\r\n        title: \"\",\r\n        label: \"\",\r\n      },\r\n      total: \"\",\r\n      showBack: false,\r\n      drawerTitle: \"\",\r\n      drawer: false,\r\n      list: [],\r\n      defaultProps: {\r\n        children: \"children\",\r\n        label: \"label\",\r\n      },\r\n      loading: true,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.findUser();\r\n  },\r\n  methods: {\r\n    onSubmit() {\r\n      console.log(123434);\r\n    },\r\n    findUser() {\r\n      this.$axios.post(this.api + \"/find\").then((res) => {\r\n        this.users = _.chunk(res.data, this.Qlist.pagesize)[\r\n          this.Qlist.pagenum - 1\r\n        ];\r\n        this.totalData = res.data;\r\n        this.total = res.data.length;\r\n        this.loading = false;\r\n      });\r\n    }, //获取初始数据\r\n    sortChange(data) {\r\n      const { prop, order } = data;\r\n      this.$axios.post(this.api + \"/sort\", { prop, order }).then((res) => {\r\n        console.log(\"res:\", res);\r\n        this.users = res.data;\r\n      });\r\n    }, //对各列进行排序处理\r\n    handleEdit(index, item) {\r\n      this.$router.push({ path: \"/taskEditor\", query: { _id: item._id } });\r\n    }, //编辑\r\n    handleDelete(index, item) {\r\n      this.$axios.post(this.api + \"/delete\", item).then((res) => {\r\n        console.log(\"res:\", res);\r\n        this.findUser();\r\n      });\r\n    }, //删除\r\n    handleCreate() {\r\n      this.$router.push(\"/taskEditor\");\r\n    }, //创建\r\n    //筛选部分\r\n    handleFilter() {\r\n      if (\r\n        this.Qlist.publisher == \"\" &&\r\n        this.Qlist.title == \"\" &&\r\n        this.Qlist.label == \"\"\r\n      ) {\r\n        this.$message.error(\"请输入查询信息\");\r\n      } else {\r\n        this.$axios.post(this.api + \"/filter\", this.Qlist).then((res) => {\r\n          console.log(\"res:\", res);\r\n          this.users = res.data;\r\n          this.showBack = true;\r\n        });\r\n      }\r\n    }, //筛选数据\r\n    closeFilter() {\r\n      this.findUser();\r\n      this.Qlist = {\r\n        pagenum: 1, //当前页数\r\n        pagesize: 20,\r\n        publisher: \"\",\r\n        title: \"\",\r\n        label: \"\",\r\n      };\r\n      this.showBack = false;\r\n    }, //关闭筛选\r\n    // 分页部分\r\n    handleSizeChange(val) {\r\n      this.Qlist.pagesize = val;\r\n      this.users = _.chunk(this.totalData, this.Qlist.pagesize)[\r\n        this.Qlist.pagenum - 1\r\n      ];\r\n    }, // 每页查看条数变化\r\n    handleCurrentChange(val) {\r\n      this.Qlist.pagenum = val;\r\n      this.users = _.chunk(this.totalData, this.Qlist.pagesize)[\r\n        this.Qlist.pagenum - 1\r\n      ];\r\n    }, // 当前页码变化\r\n\r\n    handleNodeClick(data) {\r\n      console.log(data);\r\n    },\r\n\r\n    findMatchList(index, item) {\r\n      this.drawerTitle = \"匹配\";\r\n      var list = item.matchList;\r\n      this.list = [];\r\n      if (list.length == 0 || !list) {\r\n        this.list.push({ label: \"暂无数据\" });\r\n      } else {\r\n        for (var i = 0; i < list.length; i++) {\r\n          this.list.push({\r\n            label: list[i].name,\r\n            children: [\r\n              { label: \"匹配率:\" + list[i].matchRate },\r\n              { label: \"分数: \" + list[i].points },\r\n              { label: \"时间差: \" + list[i].day },\r\n            ],\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    findScoreList(index, item) {\r\n      this.drawerTitle = \"分数\";\r\n      var list = item.scoreList;\r\n      this.list = [];\r\n      if (list.length == 0 || !list) {\r\n        this.list.push({ label: \"暂无数据\" });\r\n      } else {\r\n        for (var i = 0; i < list.length; i++) {\r\n          this.list.push({\r\n            label: list[i].name,\r\n            children: [\r\n              { label: \"技术分:\" + list[i].techScores },\r\n              { label: \"匹配分: \" + list[i].matchScores },\r\n              { label: \"总分: \" + list[i].scores },\r\n            ],\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    findComment(index, item) {\r\n      this.drawerTitle = \"评论\";\r\n      var list = item.comments;\r\n      this.list = [];\r\n      if (list.length == 0 || !list) {\r\n        this.list.push({ label: \"暂无数据\" });\r\n      } else {\r\n        for (var i = 0; i < list.length; i++) {\r\n          this.list.push({\r\n            label: list[i].comment,\r\n            children: [\r\n              { label: \"发布者:\" + list[i].name },\r\n              { label: \"发布时间: \" + list[i].time },\r\n              { label: \"回复\", children: [] },\r\n            ],\r\n          });\r\n\r\n          var reply = list[i].reply;\r\n          for (var j = 0; j < reply.length; j++) {\r\n            this.list[i].children[2].children.push(\r\n              { label: \"回复者 :\" + reply[j].responder },\r\n              { label: \"回复 :\" + reply[j].comment },\r\n              { label: \"回复时间 :\" + reply[j].time }\r\n            );\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    findTechList(index, item) {\r\n      this.drawerTitle = \"技术\";\r\n      var list = item.techList;\r\n      this.list = [];\r\n      if (list.length == 0 || !list) {\r\n        this.list.push({ label: \"暂无数据\" });\r\n      } else {\r\n        var tl = {};\r\n        var sentenceList = [];\r\n        for (var j = 0; j < list.length; j++) {\r\n          var stn = list[j].sentence;\r\n          var names = list[j].names;\r\n          var names2 = [];\r\n          for (var k = 0; k < names.length; k++) {\r\n            names2.push(\r\n              names[k].name + \" \" + Math.round(names[k].percent * 100) + \"%\"\r\n            );\r\n          }\r\n          names = names2;\r\n          if (!tl[stn]) {\r\n            tl[stn] = [\r\n              {\r\n                word: list[j].word,\r\n                names: names,\r\n                len: list[j].len,\r\n                points: list[j].points,\r\n              },\r\n            ];\r\n            sentenceList.push(stn);\r\n          } else {\r\n            tl[stn].push({\r\n              word: list[j].word,\r\n              names: names,\r\n              len: list[j].len,\r\n              points: list[j].points,\r\n            });\r\n          }\r\n        }\r\n\r\n        for (var m = 0; m < sentenceList.length; m++) {\r\n          var stn = sentenceList[m];\r\n          this.list.push({\r\n            label: stn,\r\n            children: [],\r\n          });\r\n          for (var n = 0; n < tl[stn].length; n++) {\r\n            this.list[m].children.push({\r\n              label: tl[stn][n].word,\r\n              children: [\r\n                { label: \"名单: \" + tl[stn][n].names },\r\n                { label: \"人数：\" + tl[stn][n].len },\r\n                { label: \"分值：\" + tl[stn][n].points },\r\n              ],\r\n            });\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    findSubmitted(index, item) {\r\n      this.drawerTitle = \"已提交\";\r\n      var list = item.submitted;\r\n      this.list = [];\r\n      if (list.length == 0 || !list) {\r\n        this.list.push({ label: \"暂无数据\" });\r\n      } else {\r\n        for (var i = 0; i < list.length; i++) {\r\n          this.list.push({\r\n            label: list[i],\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    findLabel(index, item) {\r\n      this.drawerTitle = \"标签\";\r\n      var list = item.label;\r\n      this.list = [];\r\n      if (list.length == 0 || !list) {\r\n        this.list.push({ label: \"暂无数据\" });\r\n      } else {\r\n        for (var i = 0; i < list.length; i++) {\r\n          this.list.push({\r\n            label: list[i],\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    findUserList(index, item) {\r\n      this.drawerTitle = \"用户列表\";\r\n      var list = item.userList;\r\n      this.list = [];\r\n      if (list.length == 0 || !list) {\r\n        this.list.push({ label: \"暂无数据\" });\r\n      } else {\r\n        for (var i = 0; i < list.length; i++) {\r\n          this.list.push({\r\n            label: list[i].name,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    findDiffList(index, item) {\r\n      this.drawerTitle = \"修改详情\";\r\n      var list = item.diffList;\r\n      this.list = [];\r\n      if (list.length == 0 || !list) {\r\n        this.list.push({ label: \"暂无数据\" });\r\n      } else {\r\n        for (var i = 0; i < list.length; i++) {\r\n          this.list.push({\r\n            label: list[i].sentence,\r\n            children: [\r\n              { label: \"words\", children: [] },\r\n              { label: \"author: \" + list[i].author },\r\n              { label: \"versions\", children: [] },\r\n            ],\r\n          });\r\n\r\n          var sentenceDiffs = list[i].sentenceDiffs;\r\n          for (var j = 0; j < sentenceDiffs.length; j++) {\r\n            this.list[i].children[2].children.push({\r\n              label: sentenceDiffs[j].provider,\r\n              children: [{ label: \"版本： \" + sentenceDiffs[j].sentenceDiff }],\r\n            });\r\n          }\r\n\r\n          var words = list[i].words;\r\n          for (var j = 0; j < words.length; j++) {\r\n            this.list[i].children[0].children.push({\r\n              label: words[j].index + 1 + \". \" + words[j].word,\r\n              children: [\r\n                { label: \"已编辑： \" + words[j].isedited },\r\n                { label: \"编辑详情: \", children: [] },\r\n              ],\r\n            });\r\n\r\n            var diffs = words[j].diffs;\r\n            for (var m = 0; m < diffs.length; m++) {\r\n              this.list[i].children[0].children[j].children[1].children.push({\r\n                label: diffs[m].diff,\r\n                children: [\r\n                  { label: \"名单\", children: [] },\r\n                  { label: \"总人数: \" + diffs[m].num },\r\n                  { label: \"初版本时间: \" + diffs[m].time },\r\n                  { label: \"修改状态: \" + diffs[m].status },\r\n                ],\r\n              });\r\n\r\n              var names = diffs[m].names;\r\n              for (var n = 0; n < names.length; n++) {\r\n                this.list[i].children[0].children[j].children[1].children[\r\n                  m\r\n                ].children[0].children.push({\r\n                  label: names[n].username + \" \" + names[n].edittime,\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.el-drawer.rtl {\r\n  overflow: scroll;\r\n}\r\n\r\nel-button {\r\n  margin: 0, 5px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/back/task"}]}
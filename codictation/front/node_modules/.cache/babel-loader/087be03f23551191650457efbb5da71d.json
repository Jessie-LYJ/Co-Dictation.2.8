{"remainingRequest":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\babel-loader\\lib\\index.js!F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js!F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js?kebab!F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-1!F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\src\\components\\profile\\addUsers.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\src\\components\\profile\\addUsers.vue","mtime":1615344153052},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDgtYXJyYXkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBIZWFkZXIgZnJvbSAiLi4vYmFzaWMvSGVhZGVyLnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWNjb3VudExpc3Q6IFtdLAogICAgICB0YWJsZTogZmFsc2UsCiAgICAgIGNvdW50OiAwLAogICAgICAvL+mYu+atouaWh+S7tuS4iuS8oOaIkOWKn+S6i+S7tuinpuWPkeeahOS6jOasoeS4iuS8oAogICAgICB0YWc6ICIiLAogICAgICB0YWdMaXN0OiBbXSwKICAgICAgLy/ojrflj5bor6XnlKjmiLflt7Lmt7vliqDnmoR0YWdzCiAgICAgIHRhZ0V4aXN0OiBmYWxzZSwKICAgICAgb3duZXI6ICIiLAogICAgICBzdGF0dXM6ICIiLAogICAgICBhcGk6ICIvYXBpIgogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIEhlYWRlcjogSGVhZGVyCiAgfSwKICBtZXRob2RzOiB7CiAgICBzaG93VGFibGU6IGZ1bmN0aW9uIHNob3dUYWJsZSgpIHsKICAgICAgaWYgKHRoaXMuYWNjb3VudExpc3QubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMudGFibGUgPSAhdGhpcy50YWJsZTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgbWVzc2FnZTogIuW9k+WJjeacquWvvOWFpeWQjeWNleWTpiIsCiAgICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgICBwb3NpdGlvbjogImJvdHRvbS1yaWdodCIKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGdldEZpbGU6IGZ1bmN0aW9uIGdldEZpbGUoZXZlbnQpIHsKICAgICAgdGhpcy5jb3VudCsrOwoKICAgICAgaWYgKHRoaXMuY291bnQgPT0gMSkgewogICAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAgIHZhciBpbnB1dERPTSA9IHRoaXMuJHJlZnMuaW5wdXRlcjsgLy8g6YCa6L+HRE9N5Y+W5paH5Lu25pWw5o2uCgogICAgICAgIGlmIChldmVudC50YXJnZXQuZmlsZXMubGVuZ3RoID09IDEpIHsKICAgICAgICAgIHRoaXMuZmlsZSA9IGV2ZW50LnRhcmdldC5maWxlc1swXTsKICAgICAgICB9CgogICAgICAgIHZhciByQUJTID0gZmFsc2U7IC8v5piv5ZCm5bCG5paH5Lu26K+75Y+W5Li65LqM6L+b5Yi25a2X56ym5LiyCgogICAgICAgIHZhciBmID0gdGhpcy5maWxlOwogICAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOyAvL2lmICghRmlsZVJlYWRlci5wcm90b3R5cGUucmVhZEFzQmluYXJ5U3RyaW5nKSB7CgogICAgICAgIEZpbGVSZWFkZXIucHJvdG90eXBlLnJlYWRBc0JpbmFyeVN0cmluZyA9IGZ1bmN0aW9uIChmKSB7CiAgICAgICAgICB2YXIgYmluYXJ5ID0gIiI7CiAgICAgICAgICB2YXIgckFCUyA9IGZhbHNlOyAvL+aYr+WQpuWwhuaWh+S7tuivu+WPluS4uuS6jOi/m+WItuWtl+espuS4sgoKICAgICAgICAgIHZhciBwdCA9IHRoaXM7CiAgICAgICAgICB2YXIgd2I7IC8v6K+75Y+W5a6M5oiQ55qE5pWw5o2uCgogICAgICAgICAgdmFyIG91dGRhdGE7CiAgICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKCiAgICAgICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgdmFyIGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkocmVhZGVyLnJlc3VsdCk7CiAgICAgICAgICAgIHZhciBsZW5ndGggPSBieXRlcy5ieXRlTGVuZ3RoOwoKICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgICAgICAgIGJpbmFyeSArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGJ5dGVzW2ldKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdmFyIFhMU1ggPSByZXF1aXJlKCJ4bHN4Iik7CgogICAgICAgICAgICBpZiAockFCUykgewogICAgICAgICAgICAgIHdiID0gWExTWC5yZWFkKGJ0b2EoZml4ZGF0YShiaW5hcnkpKSwgewogICAgICAgICAgICAgICAgLy/miYvliqjovazljJYKICAgICAgICAgICAgICAgIHR5cGU6ICJiYXNlNjQiCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgd2IgPSBYTFNYLnJlYWQoYmluYXJ5LCB7CiAgICAgICAgICAgICAgICB0eXBlOiAiYmluYXJ5IgogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9IC8vIG91dGRhdGHlsLHmmK/kvaDmg7PopoHnmoTkuJzopb8gZXhjZWzlr7zlhaXnmoTmlbDmja4KCgogICAgICAgICAgICBvdXRkYXRhID0gWExTWC51dGlscy5zaGVldF90b19qc29uKHdiLlNoZWV0c1t3Yi5TaGVldE5hbWVzWzBdXSk7IC8vIGV4Y2VsIOaVsOaNruWGjeWkhOeQhgoKICAgICAgICAgICAgdmFyIGFyciA9IFtdOwogICAgICAgICAgICBvdXRkYXRhLm1hcChmdW5jdGlvbiAodikgewogICAgICAgICAgICAgIHZhciBvYmogPSB7fTsKICAgICAgICAgICAgICBvYmouc3R1aWQgPSB2LuWtpuWPtzsKICAgICAgICAgICAgICBvYmoubmFtZSA9IHYu5a2m5Y+3ICsgdi7lp5PlkI07CiAgICAgICAgICAgICAgb2JqLnN0dW5hbWUgPSB2LuWnk+WQjTsKICAgICAgICAgICAgICBvYmoucGFzc3dvcmQgPSB2LuWvhueggTsKICAgICAgICAgICAgICBhcnIucHVzaChvYmopOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgX3RoaXMuYWNjb3VudExpc3QgPSBbXS5jb25jYXQoYXJyKTsKICAgICAgICAgICAgdGhpcy5hYmxlID0gZmFsc2U7IC8vIGNvbnNvbGUubG9nKF90aGlzLmFjY291bnRMaXN0KTsKCiAgICAgICAgICAgIF90aGlzLnJlbG9hZCgpOwogICAgICAgICAgfTsKCiAgICAgICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZik7CiAgICAgICAgfTsKCiAgICAgICAgaWYgKHJBQlMpIHsKICAgICAgICAgIHJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcihmKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmVhZGVyLnJlYWRBc0JpbmFyeVN0cmluZyhmKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBzdWJtaXRMaXN0OiBmdW5jdGlvbiBzdWJtaXRMaXN0KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGlmICh0aGlzLmFjY291bnRMaXN0Lmxlbmd0aCA+IDApIHsKICAgICAgICB0aGlzLiRheGlvcy5wb3N0KHRoaXMuYXBpICsgIi9hZGRVc2VycyIsIHsKICAgICAgICAgIG93bmVyOiB0aGlzLm93bmVyLAogICAgICAgICAgdXNlckxpc3Q6IHRoaXMuYWNjb3VudExpc3QsCiAgICAgICAgICB0YWdOYW1lOiB0aGlzLnRhZwogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTsKICAgICAgICAgIGNvbnNvbGUubG9nKCLmlbDmja7lt7LkuIrkvKAiKTsKCiAgICAgICAgICBfdGhpczIuJG5vdGlmeSh7CiAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgbWVzc2FnZTogIuWvvOWFpeaIkOWKn++8gSIsCiAgICAgICAgICAgIHBvc2l0aW9uOiAiYm90b20tcmlnaHQiCiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgbWVzc2FnZTogIuW9k+WJjeacquWvvOWFpeWQjeWNleWTpiIsCiAgICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgICBwb3NpdGlvbjogImJvdHRvbS1yaWdodCIKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGNoZWNrVGFnOiBmdW5jdGlvbiBjaGVja1RhZygpIHsKICAgICAgLy/mo4DmtYvmoIfpopjmmK/lkKbph43lkI0KICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnRhZ0xpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAodGhpcy50YWdMaXN0W2ldID09IHRoaXMudGFnKSB7CiAgICAgICAgICB0aGlzLnRhZ0V4aXN0ID0gdHJ1ZTsgLy/ph43lkI3liJnml6Dms5Xmj5DkuqQKCiAgICAgICAgICByZXR1cm47CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMudGFnRXhpc3QgPSBmYWxzZTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBnZXRUYWdMaXN0OiBmdW5jdGlvbiBnZXRUYWdMaXN0KCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIC8v6L+e5o6l5pWw5o2u5bqT77yM6I635Y+W5pWw5o2u5bqT5Lit5bGe5LqO5b2T5YmN55So5oi355qEdGFn5YiX6KGoCiAgICAgIHRoaXMuJGF4aW9zLmdldCh0aGlzLmFwaSArICIvdGFnTGlzdD9vd25lcj0iICsgdGhpcy5vd25lcikudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIGRhdGEgPSByZXMuZGF0YTsKCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICBfdGhpczMudGFnTGlzdC5wdXNoKGRhdGFbaV0udGFnTmFtZSk7CiAgICAgICAgfQoKICAgICAgICBjb25zb2xlLmxvZyhfdGhpczMudGFnTGlzdCk7CiAgICAgIH0pOwogICAgfSwKICAgIGdldFN0YXR1czogZnVuY3Rpb24gZ2V0U3RhdHVzKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIC8v6L+e5o6l5pWw5o2u5bqT77yM6I635Y+W5pWw5o2u5bqT5Lit5bGe5LqO5b2T5YmN55So5oi355qEc3RhdHVzCiAgICAgIHRoaXMuJGF4aW9zLmdldCh0aGlzLmFwaSArICIvcHJvZmlsZT9uYW1lPSIgKyB0aGlzLm93bmVyKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczQuc3RhdHVzID0gcmVzLmRhdGFbMF0uc3RhdHVzOwogICAgICB9KTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLm93bmVyID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgidXNlck5hbWUiKTsKICAgIHRoaXMuZ2V0VGFnTGlzdCgpOwogICAgdGhpcy5nZXRTdGF0dXMoKTsKICB9Cn07"},{"version":3,"sources":["addUsers.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"q-pa-md\">\n    <p>导入学生名单</p>\n    <input type=\"file\" single accept=\".xlsx\" @change=\"getFile($event)\" />\n    <br />\n    添加名单标签：\n    <input type=\"text\" v-model=\"tag\" @keyup=\"checkTag()\" />\n    <p v-if=\"tagExist\" style=\"font-size: 80%; color: red\">\n      ×标签已存在，请重新命名\n    </p>\n    <el-button type=\"info\" @click=\"showTable()\">预览</el-button>\n    <el-button type=\"primary\" @click=\"submitList()\" :disabled=\"tagExist\"\n      >导入</el-button\n    >\n    <el-table\n      :data=\"accountList\"\n      border\n      style=\"width: 20%; margin-left: 33%; margin-top: 3%\"\n      v-if=\"table\"\n    >\n      <el-table-column prop=\"stuid\" label=\"学号\" width=\"160\"> </el-table-column>\n      <el-table-column prop=\"stuname\" label=\"姓名\"> </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport Header from \"../basic/Header.vue\";\nexport default {\n  data() {\n    return {\n      accountList: [],\n      table: false,\n      count: 0, //阻止文件上传成功事件触发的二次上传\n      tag: \"\",\n      tagList: [], //获取该用户已添加的tags\n      tagExist: false,\n      owner: \"\",\n      status: \"\",\n      api:\"/api\",\n    };\n  },\n  components: {\n    Header,\n  },\n  methods: {\n    showTable() {\n      if (this.accountList.length > 0) {\n        this.table = !this.table;\n      } else {\n        this.$notify({\n          message: \"当前未导入名单哦\",\n          type: \"warning\",\n          position: \"bottom-right\",\n        });\n      }\n    },\n    getFile(event) {\n      this.count++;\n      if (this.count == 1) {\n        let _this = this;\n        let inputDOM = this.$refs.inputer; // 通过DOM取文件数据\n        if (event.target.files.length == 1) {\n          this.file = event.target.files[0];\n        }\n        var rABS = false; //是否将文件读取为二进制字符串\n        var f = this.file;\n        var reader = new FileReader();\n        //if (!FileReader.prototype.readAsBinaryString) {\n        FileReader.prototype.readAsBinaryString = function (f) {\n          var binary = \"\";\n          var rABS = false; //是否将文件读取为二进制字符串\n          var pt = this;\n          var wb; //读取完成的数据\n          var outdata;\n          var reader = new FileReader();\n          reader.onload = function (e) {\n            var bytes = new Uint8Array(reader.result);\n            var length = bytes.byteLength;\n            for (var i = 0; i < length; i++) {\n              binary += String.fromCharCode(bytes[i]);\n            }\n            var XLSX = require(\"xlsx\");\n            if (rABS) {\n              wb = XLSX.read(btoa(fixdata(binary)), {\n                //手动转化\n                type: \"base64\",\n              });\n            } else {\n              wb = XLSX.read(binary, {\n                type: \"binary\",\n              });\n            }\n            // outdata就是你想要的东西 excel导入的数据\n            outdata = XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]]);\n            // excel 数据再处理\n            let arr = [];\n            outdata.map((v) => {\n              let obj = {};\n              obj.stuid = v.学号;\n              obj.name = v.学号 + v.姓名;\n              obj.stuname = v.姓名;\n              obj.password = v.密码;\n              arr.push(obj);\n            });\n            _this.accountList = [...arr];\n            this.able = false;\n            // console.log(_this.accountList);\n            _this.reload();\n          };\n          reader.readAsArrayBuffer(f);\n        };\n        if (rABS) {\n          reader.readAsArrayBuffer(f);\n        } else {\n          reader.readAsBinaryString(f);\n        }\n      }\n    },\n    submitList() {\n      if (this.accountList.length > 0) {\n        this.$axios\n          .post(this.api+\"/addUsers\", {\n            owner: this.owner,\n            userList: this.accountList,\n            tagName: this.tag,\n          })\n          .then((result) => {\n            console.log(result);\n            console.log(\"数据已上传\");\n            this.$notify({\n              type: \"success\",\n              message: \"导入成功！\",\n              position: \"botom-right\",\n            });\n          });\n      } else {\n        this.$notify({\n          message: \"当前未导入名单哦\",\n          type: \"warning\",\n          position: \"bottom-right\",\n        });\n      }\n    },\n    checkTag() {\n      //检测标题是否重名\n      for (var i = 0; i < this.tagList.length; i++) {\n        if (this.tagList[i] == this.tag) {\n          this.tagExist = true; //重名则无法提交\n          return;\n        } else {\n          this.tagExist = false;\n        }\n      }\n    },\n    getTagList() {\n      //连接数据库，获取数据库中属于当前用户的tag列表\n      this.$axios.get(this.api+\"/tagList?owner=\" + this.owner).then((res) => {\n        var data = res.data;\n        for (var i = 0; i < data.length; i++) {\n          this.tagList.push(data[i].tagName);\n        }\n        console.log(this.tagList);\n      });\n    },\n    getStatus() {\n      //连接数据库，获取数据库中属于当前用户的status\n      this.$axios.get(this.api+\"/profile?name=\" + this.owner).then((res) => {\n        this.status = res.data[0].status;\n      });\n    },\n  },\n  created() {\n    this.owner = sessionStorage.getItem(\"userName\");\n    this.getTagList();\n    this.getStatus();\n  },\n};\n</script>\n\n<style>\n</style>"],"sourceRoot":"src/components/profile"}]}
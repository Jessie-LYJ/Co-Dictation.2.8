{"remainingRequest":"D:\\project\\codictation.2.7\\codictation\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js!D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js?kebab!D:\\project\\codictation.2.7\\codictation\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-1!D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\codictation.2.7\\codictation\\src\\components\\diff.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\codictation.2.7\\codictation\\src\\components\\diff.vue","mtime":1618044121168},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js","mtime":499162500000},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["diff.vue"],"names":[],"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","sourcesContent":["<template>\n  <q-page style=\"margin-top: 60px\">\n    <!-- 按钮组合 -->\n    <div class=\"buttons\">\n      <q-btn\n        color=\"purple\"\n        icon=\"keyboard_arrow_down\"\n        round\n        @click=\"toBest('#mainContent')\"\n        style=\"margin-bottom: 3px\"\n      >\n        <q-tooltip\n          content-class=\"bg-accent\"\n          anchor=\"center left\"\n          self=\"center right\"\n          :offset=\"[10, 10]\"\n          >The Optimal Version</q-tooltip\n        >\n      </q-btn>\n      <br />\n      <q-btn\n        color=\"purple\"\n        icon=\"tv\"\n        round\n        v-if=\"isVideo\"\n        @click=\"pip()\"\n        slot=\"reference\"\n        style=\"margin-bottom: 3px\"\n      >\n        <q-tooltip\n          content-class=\"bg-accent\"\n          anchor=\"center left\"\n          self=\"center right\"\n          :offset=\"[10, 10]\"\n          >Picture in Picture Mode</q-tooltip\n        >\n      </q-btn>\n      <br />\n      <q-btn\n        color=\"purple\"\n        icon=\"keyboard_arrow_up\"\n        round\n        v-if=\"isVideo\"\n        @click=\"toTop()\"\n        style=\"margin-bottom: 3px\"\n      >\n        <q-tooltip\n          content-class=\"bg-accent\"\n          anchor=\"center left\"\n          self=\"center right\"\n          :offset=\"[10, 10]\"\n          >To The Top</q-tooltip\n        >\n      </q-btn>\n    </div>\n    <div>\n      <div class=\"video-container q-px-xl\">\n        <!-- 视频展现 -->\n        <div class=\"video-left-box\">\n          <div class=\"video-box q-mx-sm q-ml-lg\" v-if=\"isVideo\">\n            <vue-core-video-player\n              id=\"video\"\n              :src=\"require('../assets/video/' + fileName)\"\n              controls\n              :autoplay=\"autoplay\"\n              @play=\"playFunc\"\n              @pause=\"pauseFunc\"\n              @loadedmetadata=\"loaded\"\n            ></vue-core-video-player>\n          </div>\n          <div class=\"audio-box q-mr-sm q-mb-md\" v-else>\n            <!-- <vue-audio\n              id=\"audio\"\n              class=\"q-pa-lg\"\n              :audio-source=\"require('../assets/video/' + fileName)\"\n            ></vue-audio> -->\n            <audio\n              :src=\"require('../assets/video/' + fileName)\"\n              id=\"audio\"\n              controls\n              @play=\"playFunc\"\n              @pause=\"pauseFunc\"\n              @loadedmetadata=\"loaded\"\n              controlslist=\"nodownload\"\n            ></audio>\n          </div>\n          <div id=\"menu\" class=\"q-px-sm q-py-md row col-12\">\n            <div class=\"col-4 text-center\" v-if=\"isVideo == false\">\n              <q-select\n                id=\"selected\"\n                standout=\"bg-purple-4 text-white\"\n                color=\"purple\"\n                v-model=\"rateSelected\"\n                :options=\"options\"\n                @input=\"handleSpeed\"\n                label=\"Difficulty Degree\"\n                dense\n                class=\"q-mx-md\"\n              >\n                <template v-slot:prepend>\n                  <q-icon name=\"speed\" size=\"md\" />\n                </template>\n              </q-select>\n            </div>\n            <div class=\"col-8 text-center\">\n              <q-btn\n                class=\"q-mx-md\"\n                @click=\"goBack\"\n                color=\"purple-4\"\n                icon=\"replay_10\"\n                label=\"Backward\"\n                glossy\n                style=\"width: 14em; height: 2.75em\"\n              />\n              <q-btn\n                class=\"q-mx-md\"\n                @click=\"goForward\"\n                color=\"purple-4\"\n                icon-right=\"forward_10\"\n                label=\"Forward\"\n                glossy\n                style=\"width: 14em; height: 2.75em\"\n              />\n            </div>\n          </div>\n        </div>\n        <!-- 信息卡片 -->\n        <div class=\"video-right-box\">\n          <q-card class=\"my-info-card q-mr-lg\" flat bordered>\n            <q-item>\n              <q-item-section avatar>\n                <avatar-org\n                  :name=\"publisher\"\n                  class=\"publisher-avt\"\n                ></avatar-org>\n              </q-item-section>\n\n              <q-item-section>\n                <q-item-label\n                  >{{ publisher }} -「 {{ identity }} 」</q-item-label\n                >\n                <q-item-label caption\n                  >Posted on {{ publishTime.slice(0, 10) }} at\n                  {{ publishTime.slice(10) }}</q-item-label\n                >\n              </q-item-section>\n            </q-item>\n\n            <q-separator />\n\n            <q-list bordered separator>\n              <q-item clickable v-ripple class=\"row\">\n                <q-item-section class=\"col-4\">\n                  <div class=\"text-left text-weight-bold\">Title:</div>\n                </q-item-section>\n                <q-item-section class=\"col-8\">\n                  <div class=\"text-left\">{{ taskTitle }}</div>\n                </q-item-section>\n              </q-item>\n\n              <q-item clickable v-ripple class=\"row\">\n                <q-item-section class=\"col-4\">\n                  <div class=\"text-left text-weight-bold\">Deadline:</div>\n                </q-item-section>\n                <q-item-section class=\"col-8\">\n                  <div class=\"text-left\">{{ deadline }}</div>\n                </q-item-section>\n              </q-item>\n\n              <q-item clickable v-ripple class=\"row\">\n                <q-item-section class=\"col-4\">\n                  <div class=\"text-left text-weight-bold\">People:</div>\n                </q-item-section>\n                <q-item-section class=\"col-8\">\n                  <div class=\"text-left\">\n                    {{\n                      submitted.filter(\n                        (item, index, arr) => arr.indexOf(item) === index\n                      ).length\n                    }}\n                  </div>\n                </q-item-section>\n              </q-item>\n\n              <q-item\n                clickable\n                v-ripple\n                class=\"row\"\n                v-if=\"isSubmitted && username != publisher\"\n              >\n                <q-item-section class=\"col-4\">\n                  <div class=\"text-left text-weight-bold\">Rank:</div>\n                </q-item-section>\n                <q-item-section class=\"col-8\">\n                  <div class=\"text-left\">{{ myRank }}</div>\n                </q-item-section>\n              </q-item>\n\n              <q-item clickable v-ripple class=\"row\">\n                <q-item-section class=\"col-4\">\n                  <div class=\"text-left text-weight-bold\">Score:</div>\n                </q-item-section>\n                <q-item-section class=\"col-8\">\n                  <div class=\"text-left\">{{ scores }}</div>\n                </q-item-section>\n              </q-item>\n\n              <q-item v-if=\"isSubmitted\">\n                <q-item-section class=\"col-12 q-px-sm\">\n                  <div class=\"text-center\">\n                    <q-btn\n                      color=\"purple\"\n                      size=\"md\"\n                      @click=\"checkScoresDetails()\"\n                      class=\"score-btn\"\n                      >Score Details</q-btn\n                    >\n                  </div>\n                </q-item-section>\n              </q-item>\n\n              <q-item class=\"column\" v-if=\"username == publisher && !isConfirm\">\n                <q-item-section class=\"col q-my-sm\">\n                  <div class=\"text-center\">\n                    <el-switch\n                      v-model=\"isManual\"\n                      active-text=\"Manually\"\n                      inactive-text=\"Automatically\"\n                      @change=\"setManual()\"\n                    >\n                    </el-switch>\n                  </div>\n                </q-item-section>\n                <q-item-section\n                  class=\"col q-my-sm\"\n                  v-if=\"isManual && username == publisher\"\n                >\n                  <q-btn color=\"blue\" size=\"md\" @click=\"manualCofirm()\">\n                    Confirm\n                  </q-btn>\n                </q-item-section>\n              </q-item>\n            </q-list>\n          </q-card>\n        </div>\n      </div>\n\n      <el-main id=\"mainContent\" class=\"q-ma-xl\">\n        <el-row :gutter=\"21\" type=\"flex\" class=\"row-bg\" justify=\"center\">\n          <el-col :span=\"21\" v-if=\"isversion1\">\n            <p class=\"edit-tip\">The Optimal Version:</p>\n            <div id=\"textDiv\">\n              <div>\n                <span v-for=\"(item, index) in final_context\" :key=\"index\">\n                  <span\n                    v-for=\"(final_word, final_word_index) in item.final_words\"\n                    :key=\"final_word_index\"\n                    @click=\"showAll($event, final_word_index, index)\"\n                    :class=\"{ active: isActive }\"\n                  >\n                    <el-badge :is-dot=\"final_word.isedited\" class=\"badge\">\n                      <span\n                        v-if=\"regtest.test(final_word.diff)\"\n                        v-html=\"final_word.diff\"\n                      >\n                      </span>\n                      <span v-else>\n                        {{ final_word.diff }}\n                      </span>\n                    </el-badge>\n                  </span>\n                </span>\n              </div>\n            </div>\n            <div class=\"q-pa-md q-gutter-sm edit-btn\" v-if=\"isTeacher\">\n              <q-btn\n                glossy\n                color=\"purple-14\"\n                icon=\"publish\"\n                @click=\"changev1()\"\n                label=\"Submit Final Version\"\n                style=\"width: 20em\"\n              />\n            </div>\n            <div class=\"q-pa-md q-gutter-sm edit-btn\" v-else>\n              <q-btn\n                glossy\n                color=\"purple-14\"\n                icon=\"assignment_returned\"\n                @click=\"returnback()\"\n                label=\"Restore\"\n                v-show=\"isreadonly\"\n                style=\"width: 15em\"\n              />\n              <q-btn\n                glossy\n                color=\"purple-13\"\n                icon=\"edit\"\n                @click=\"changev1()\"\n                label=\"Edit\"\n                v-show=\"isreadonly\"\n                style=\"width: 15em\"\n              />\n            </div>\n          </el-col>\n          <el-col :span=\"20\" v-else>\n            <div>\n              <p class=\"edit-tip\">\n                Listen carefully and write what you hear in the box.\n              </p>\n              <el-input\n                type=\"textarea\"\n                :rows=\"15\"\n                :autosize=\"{ minRows: 15, maxRows: 30 }\"\n                placeholder=\"What is the speaker saying?\"\n                v-model=\"text1\"\n                style=\"font-size: 20px\"\n              ></el-input>\n              <div class=\"q-px-md q-pt-md q-gutter-sm submit-btn\">\n                <q-btn\n                  icon=\"upload\"\n                  color=\"purple-14\"\n                  @click=\"submitv1()\"\n                  style=\"width: 15em\"\n                  glossy\n                  label=\"Submit\"\n                />\n              </div>\n            </div>\n          </el-col>\n          <div><button @click=\"splitVideo()\">切割句子</button></div>\n          <el-col :span=\"12\" v-if=\"isedit\">\n            <div>\n              <p class=\"edit-tip\">Editing:</p>\n              <div v-for=\"(item, i) in sentenceList\" :key=\"i\">\n                <el-input\n                  type=\"textarea\"\n                  :rows=\"1\"\n                  :autosize=\"{ minRows: 1, maxRows: 4 }\"\n                  v-model=\"sentenceList[i]\"\n                ></el-input>\n              </div>\n              <div class=\"q-pa-md q-gutter-sm edit-btn\">\n                <q-btn\n                  style=\"width: 10em\"\n                  @click=\"cancelChangev1()\"\n                  color=\"deep-purple-4\"\n                  icon=\"clear\"\n                  label=\"Cancel\"\n                />\n                <q-btn\n                  style=\"width: 10em\"\n                  @click=\"tempsave()\"\n                  color=\"purple-14\"\n                  icon=\"save\"\n                  label=\"Save\"\n                />\n                <q-btn\n                  @click=\"submitmv()\"\n                  color=\"purple-13\"\n                  icon=\"check\"\n                  label=\"Confirm\"\n                  style=\"width: 10em\"\n                />\n              </div>\n            </div>\n          </el-col>\n        </el-row>\n      </el-main>\n      <q-btn\n        color=\"purple\"\n        icon=\"more\"\n        round\n        class=\"q-mt-md\"\n        @click=\"showTimeline()\"\n        style=\"left: 3%; margin-top: -40px; margin-bottom: 40px\"\n      >\n        <q-tooltip content-class=\"bg-accent\">Show More</q-tooltip>\n      </q-btn>\n      <div class=\"con\" v-show=\"isTimeline\" ref=\"history\">\n        <a class=\"aui_close1\" @click=\"closeTimeline()\">×</a>\n        <div class=\"q-px-lg q-pb-md\">\n          <q-timeline\n            color=\"purple\"\n            style=\"height: 550px; margin-top: 37px; overflow-y: auto\"\n          >\n            <q-timeline-entry\n              v-for=\"(version, index) in versions\"\n              :key=\"index\"\n              :title=\"version.name\"\n              :subtitle=\"version.time\"\n            >\n              <div>\n                {{ version.version }}\n              </div>\n            </q-timeline-entry>\n          </q-timeline>\n        </div>\n      </div>\n    </div>\n    <div id=\"wordOperate\" ref=\"main\">\n      <a class=\"aui_close\" @click=\"closeShow()\">×</a>\n      <el-table\n        :data=\"tableData.slice((currpage - 1) * pagesize, currpage * pagesize)\"\n        class=\"eltable\"\n      >\n        <el-table-column type=\"String\" prop=\"diff\" label=\"Diff Version\" width=\"200\">\n          <template slot-scope=\"scope\">\n            <span v-html=\"scope.row.diff\"></span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"names\" label=\"Users\" width=\"380\">\n          <template slot-scope=\"scope\">\n            <span v-for=\"(item, i) in scope.row.names\" :key=\"i\">\n              <span\n                v-if=\"item.username == submitted[0]\"\n                style=\"font-weight: bold\"\n                >{{ item.username + \"; \" }}</span\n              >\n              <span v-else>{{ item.username + \"; \" }}</span>\n            </span>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-pagination\n        layout=\"prev, pager, next\"\n        :page-size=\"pagesize\"\n        :current-page=\"currpage\"\n        :total=\"tableData.length\"\n        @current-change=\"handleCurrentChange\"\n        @size-change=\"handleSizeChange\"\n      >\n      </el-pagination>\n      <!-- 每个句子的不同详细版本 -->\n      <el-collapse>\n        <el-collapse-item style=\"padding-bottom: 1px\">\n          <template slot=\"title\">\n            Details:<i class=\"header-icon el-icon-info\"></i>\n          </template>\n          <el-table\n            :data=\"\n              senTableData.slice(\n                (currpageS - 1) * pagesizeS,\n                currpageS * pagesizeS\n              )\n            \"\n            class=\"eltable\"\n          >\n            <el-table-column prop=\"provider\" label=\"Username\" width=\"80\">\n              <template slot-scope=\"scope\">\n                <span>\n                  {{ scope.row.provider }}\n                </span>\n              </template>\n            </el-table-column>\n            <el-table-column\n              type=\"String\"\n              prop=\"sentenceDiff\"\n              label=\"Sentence\"\n              width=\"500\"\n            >\n              <template slot-scope=\"scope\">\n                <span\n                  v-html=\"scope.row.sentenceDiff\"\n                  style=\"word-wrap: break-word; width: 500px\"\n                ></span>\n              </template>\n            </el-table-column>\n          </el-table>\n          <el-pagination\n            layout=\"prev, pager, next\"\n            :page-size=\"pagesizeS\"\n            :current-page=\"currpageS\"\n            :total=\"senTableData.length\"\n            @current-change=\"handleCurrentChangeS\"\n            @size-change=\"handleSizeChangeS\"\n          >\n          </el-pagination>\n        </el-collapse-item>\n      </el-collapse>\n    </div>\n  </q-page>\n</template>\n\n<script>\nimport AvatarOrg from \"./basic/Avatar\";\nimport { QSpinnerFacebook } from \"quasar\";\n\nvar differ = require(\"../diff.js\").differ;\nvar {\n  countTechScores,\n  countMatchPoints,\n  linearReg,\n} = require(\"../countScores.js\");\n\nexport default {\n  data() {\n    return {\n      userStatus: 0,\n      isreadonly: true,\n      isTeacher: false,\n      text1: \"\", //当前用户作为第一个用户提交的第一版本\n      isversion1: false, //判断是否有第一个版本\n      isFinal: false, //判断是否有修改记录可以生成综合版本\n      text_v1: \"\", //从数据库取得的第一个用户提交的第一版本，可能与text1不一样\n      text_fn: \"\",\n      isedit: false, //控制是否显示修改框\n      textDiv: \"\", //当前页面的textDiv的值, 记录当前用户的修改版本\n      currentCompareText: \"\", //当前页面的textDiv的值, 用来做比较基础\n      sentences: [], //第一个用户提交的第一版本的分句结果\n      username: \"\",\n      diffList: [],\n      tableData: [], //分页相关\n      senTableData: [], //句子版本相关\n      pagesize: 3, //修改分页相关\n      currpage: 1, //修改分页相关\n      pagesizeS: 1, //句子版本分页相关\n      currpageS: 1, //句子版本分页相关\n      isActive: false,\n      seen: false,\n      tempindex: 0,\n      current: 0,\n      diffId: \"\", //当前任务的_id\n      fileName: \"\",\n      userList: [],\n      inUserList: false,\n      api: \"/api\",\n      player: \"\", //播放器\n      rateSelected: \"1.0\", //播放速度对象\n      isVideo: false, //文件类型是否为视频\n      videoType: [\"AVI\", \"baiwma\", \"rmvb\", \"rm\", \"flash\", \"mp4\", \"mid\", \"3GP\"], //视频类型\n      options: [\"0.5\", \"1.0\", \"1.25\", \"1.5\", \"2.0\"], //音频播放速度选项\n      sentenceList: [], //获得去掉标签之后各句子的综合版本，遍历填充修改框\n      final_context: [],\n      dbList: [],\n      regtest: /[<ins>|<del>|<subins>]/g,\n      publisher: \"\",\n      status: \"1\",\n      identity: \"\",\n      submitted: [], //已提交修改的名单\n      isAddition: false, //是否显示增加句子的文本框和按钮\n      addition: \"\", //增加的内容\n      autoplay: false, //控制视频自动播放\n      taskTitle: \"\",\n      deadline: \"\",\n      publishTime: \"\",\n      isTimeline: false,\n      versions: [],\n      reverse: true,\n      taskLabels: [],\n      userId: \"\",\n      versionsList: \"\", //在created中从后台获取数据\n      techScoreList: {}, //统计每个人得到的技术分\n      matchScoreList: {}, //统计每个人得到的匹配分\n      techList: [],\n      matchList: [],\n      scoreList: [], //总分\n      countMatchScores: [],\n      techPoints: 60, //总的技术分\n      matchPoints: 40, //总的匹配分\n      scores: \"Not announced yet.\",\n      averScores: \"\", //平均分\n      isPublisher: false,\n      isSubmitted: false,\n      taskCoins: 0, //每个任务可获得的金币\n      myRank: \"\",\n      timespan: 0, //video播放实际时间\n      isCountTime: false, //是否计时\n      isManual: \"\", //是否自动计算分数\n      isConfirm: \"\", //是否确认成绩\n      userTasks: \"\", //用户的tasks\n      video_id: \"\", //对应视频的_id\n      authcode: \"\", //对应任务的验证码\n      configuration: \"\", //该任务的偏好设置\n    };\n  },\n  components: {\n    AvatarOrg,\n  },\n  methods: {\n    tempsave() {\n      this.$axios\n        .get(this.api + \"/currentTask?_id=\" + this.diffId)\n        .then((res) => {\n          this.userList = res.data[0].userList;\n          var isName = false;\n          for (var uh = 0; uh < this.userList.length; uh++) {\n            if (this.username == this.userList[uh].name) {\n              isName = true;\n              this.userList[uh].my_sentences = this.sentenceList;\n            }\n          }\n          //如果没有则增加\n          if (isName == false) {\n            this.userList.push({\n              name: this.username,\n              my_sentences: this.sentenceList,\n            });\n          }\n\n          this.$axios.post(this.api + \"/tempsave\", {\n            params: {\n              _id: this.diffId,\n              userList: this.userList,\n            },\n          });\n          this.$notify({\n            type: \"success\",\n            message: \"success\",\n            position: \"top-right\",\n            offset: 100,\n          });\n          this.isedit = false;\n        });\n    },\n    returnback() {\n      if (this.submitted.indexOf(this.username) >= 0) {\n        if (this.submitted.indexOf(this.username) == 0) {\n          if (this.submitted.indexOf(this.username, 1) == -1) {\n            var user_index = this.userList.findIndex(\n              (attr) => attr.name == this.username\n            );\n            if (user_index >= 0) {\n              this.isedit = true;\n              this.sentenceList = this.userList[user_index].my_sentences;\n            } else {\n              this.isedit = false;\n              this.$notify({\n                // title: \"警告\",\n                type: \"warning\",\n                message: \"No recorded history\",\n                position: \"top-right\",\n                offset: 100,\n              });\n            }\n          } else {\n            this.isedit = false;\n            this.$notify({\n              // title: \"警告\",\n              type: \"warning\",\n              message: \"You have submitted your dictation before.\",\n              position: \"top-right\",\n              offset: 100,\n            });\n          }\n        } else {\n          this.isedit = false;\n          this.$notify({\n            // title: \"警告\",\n            type: \"warning\",\n            message: \"You have submitted your dictation before.\",\n            position: \"top-right\",\n            offset: 100,\n          });\n        }\n      } else {\n        var user_index = this.userList.findIndex(\n          (attr) => attr.name == this.username\n        );\n        if (user_index >= 0) {\n          this.sentenceList = this.userList[user_index].my_sentences;\n          this.isedit = true;\n        } else {\n          this.isedit = false;\n          this.$notify({\n            // title: \"警告\",\n            type: \"warning\",\n            message: \"No recorded history\",\n            position: \"top-right\",\n            offset: 100,\n          });\n        }\n      }\n    },\n    showTimeline() {\n      this.$axios\n        .get(this.api + \"/allVersions?_id=\" + this.diffId)\n        .then((res) => {\n          // console.log(\"res data\", res.data);\n          this.versions = res.data;\n          if (this.versions.length > 0) {\n            this.isTimeline = true;\n            document.addEventListener(\"click\", this.hidePanel1, false);\n          } else {\n            this.$notify({\n              // title: \"警告\",\n              type: \"warning\",\n              message: \"No one has finished the current task.\",\n              position: \"top-right\",\n              offset: 100,\n            });\n          }\n        });\n    },\n    closeTimeline() {\n      this.isTimeline = false;\n      document.removeEventListener(\"click\", this.hidePanel1, false);\n    },\n    //使用document.querySelector实现锚点的效果\n    toBest(idName) {\n      document.querySelector(idName).scrollIntoView(true);\n    },\n    //回到顶部\n    toTop() {\n      document.body.scrollTop = document.documentElement.scrollTop = 0;\n    },\n    //浮框\n    changePos(event) {\n      var wordOperate = document.getElementById(\"wordOperate\");\n      wordOperate.style.position = \"fixed\";\n      wordOperate.style.display = \"inline-block\";\n      wordOperate.style.backgroundColor = \"white\";\n      if (event.clientX < window.screen.width / 2) {\n        wordOperate.style.left = event.clientX + 5 + \"px\";\n      } else {\n        wordOperate.style.left = event.clientX - wordOperate.offsetWidth + \"px\";\n      }\n\n      if (event.clientY > window.screen.height / 2) {\n        wordOperate.style.top = event.clientY - wordOperate.offsetHeight + \"px\";\n      } else {\n        wordOperate.style.top = event.clientY + \"px\";\n      }\n    },\n    //确定是音频播放器还是视频播放器\n    decidePlayer() {\n      if (this.isVideo) {\n        this.player = document.querySelector(\"#video > video\");\n      } else {\n        this.player = document.getElementById(\"audio\");\n      }\n    },\n    //控制播放速度\n    handleSpeed() {\n      this.player.playbackRate = this.rateSelected;\n    },\n    //控制后退10秒\n    goBack() {\n      this.player.currentTime -= 10;\n    },\n    //控制前进10秒\n    goForward() {\n      this.player.currentTime += 10;\n    },\n    //分页相关\n    handleCurrentChange(val) {\n      this.currpage = val;\n    },\n    //分页相关\n    handleSizeChange(val) {\n      this.pagesize = val;\n    },\n    //分页相关\n    handleCurrentChangeS(val) {\n      this.currpageS = val;\n    },\n    //分页相关\n    handleSizeChangeS(val) {\n      this.pagesizeS = val;\n    },\n    //提交第一份，只执行一次，但会决定数据库的结构\n    submitv1() {\n      //获得当前时间\n      let newdate = this.$moment(new Date()).format(\"YYYY/MM/DD HH:mm:ss\");\n\n      var flag = true;\n      var regstr = /([A-Za-z0-9\\'\\\"\\!\\?\\-\\:\\;\\.\\,\\%\\$\\&\\[ \\]])/;\n      var limited_words = 0;\n      this.$axios\n        .get(this.api + \"/currentTask?_id=\" + this.diffId)\n        .then((res) => {\n          limited_words = res.data[0].words;\n          // console.log(limited_words);\n          var video_id = res.data[0].videoId; //对应视频的_id\n          var authcode = res.data[0].authcode; //对应任务的验证码\n          //输入的内容非空\n          if (this.text1) {\n            var t_length = this.text1.split(\" \").length;\n            // console.log(t_length)\n            if (t_length > limited_words) {\n              for (var a = 0; a < this.text1.length; a++) {\n                var regResult = regstr.test(this.text1[a]);\n                // console.log(\"-----1\", regResult);\n                if (regResult === false) {\n                  // console.log(\"aaa\");\n                  flag = false;\n                }\n              }\n              // console.log(\"flag\", flag);\n              if (flag) {\n                this.$axios\n                  .post(this.api + \"/updateVersion\", {\n                    //整篇更新到版本列表\n                    params: {\n                      _id: this.diffId,\n                      time: newdate,\n                      new_version: this.text1,\n                      username: this.username,\n                      userId: this.userId,\n                    },\n                  })\n                  .then((result) => {\n                    // console.log(\"aaa\");\n                    this.$axios\n                      .get(this.api + \"/currentTask?_id=\" + this.diffId)\n                      .then((res) => {\n                        // console.log(\"111\");\n                        this.diffList = res.data[0].diffList;\n                        // console.log(\"diffList1\", this.diffList)\n                        this.userList = res.data[0].userList;\n                        if (this.diffList.length == 0) {\n                          this.$axios\n                            .get(this.api + \"/allVersions?_id=\" + this.diffId)\n                            .then((res) => {\n                              // console.log(\"res data\", res.data);\n                              var owner = res.data[0].name; //第一个提交的用户\n                              if (owner == this.username) {\n                                this.$notify({\n                                  type: \"success\",\n                                  message:\n                                    \"Submitted and got 5 coins (Tip:The first one will get 10 coins)\",\n                                  position: \"top-right\",\n                                  offset: 100,\n                                });\n                                if (\n                                  this.userList.indexOf(\n                                    this.userList.find(\n                                      (obj) => obj.name == owner\n                                    )\n                                  ) == -1\n                                ) {\n                                  this.userList.push({\n                                    name: owner,\n                                    my_sentences: [],\n                                  });\n                                }\n                                this.submitted.push(owner);\n                                this.$axios\n                                  .get(\n                                    this.api + \"/profile?name=\" + this.username\n                                  )\n                                  .then((res) => {\n                                    var userId = res.data[0]._id;\n                                    var userTasks = res.data[0].myTasks;\n                                    userTasks.push({\n                                      taskId: this.diffId,\n                                      videoId: video_id,\n                                      deadline: this.deadline,\n                                      authcode: authcode,\n                                      title: this.taskTitle,\n                                      label: this.taskLabels,\n                                      time: newdate,\n                                      scores: \"\",\n                                    });\n                                    // 更新用户“myTasks”\n\n                                    this.userTasks = userTasks;\n\n                                    this.$axios\n                                      .post(this.api + \"/updateMyTasks\", {\n                                        params: {\n                                          _id: userId,\n                                          myTasks: userTasks,\n                                          time: newdate,\n                                        },\n                                      })\n                                      .then((res) => {\n                                        console.log(\"这里成功啦\");\n                                      })\n                                      .catch((error) => {\n                                        console.log(\"这次失败了\", error);\n                                      });\n                                  });\n                              } else {\n                                this.$notify({\n                                  // title: \"警告\",\n                                  type: \"warning\",\n                                  message:\n                                    \"Submitted (Not the first one)\",\n                                  position: \"top-right\",\n                                  offset: 100,\n                                });\n                              }\n                              this.isversion1 = true;\n                              this.text_v1 = res.data[0].version;\n                              var diffList1 = [];\n                              //分句并存储到数据库中\n                              this.sentences = this.text_v1.split(\n                                /(?<=[^A-Z].[.?]) +(?=[A-Z])/g\n                              );\n                              // console.log(this.sentences);\n                              for (\n                                var sen = 0;\n                                sen < this.sentences.length;\n                                sen++\n                              ) {\n                                var reg2 = /\\,\\s/g;\n                                var reg3 = /\\.\\s/g;\n                                var reg4 = /\\!\\s/g;\n                                var reg5 = /\\?\\s/g;\n                                this.sentences[sen] = this.sentences[sen] + \" \";\n                                if (reg2.test(this.sentences[sen]) === true) {\n                                  this.sentences[sen] = this.sentences[\n                                    sen\n                                  ].replace(reg2, \" , \");\n                                  // console.log(\"2t\", text)\n                                  console.log(\"2\");\n                                }\n                                if (reg3.test(this.sentences[sen]) === true) {\n                                  console.log(\"3\");\n                                  this.sentences[sen] = this.sentences[\n                                    sen\n                                  ].replace(reg3, \" . \");\n                                  // console.log(\"3t\", text)\n                                }\n                                if (reg4.test(this.sentences[sen]) === true) {\n                                  console.log(\"4\");\n                                  this.sentences[sen] = this.sentences[\n                                    sen\n                                  ].replace(reg4, \" ! \");\n                                }\n                                if (reg5.test(this.sentences[sen]) === true) {\n                                  console.log(\"5\");\n                                  this.sentences[sen] = this.sentences[\n                                    sen\n                                  ].replace(reg5, \" ? \");\n                                }\n                                let words = this.sentences[sen].split(\" \"); //分词\n                                //去掉空值\n                                for (var y = 0; y < words.length; y++) {\n                                  if (words[y] == \"\") {\n                                    words.splice(y, 1);\n                                    y = y - 1;\n                                  }\n                                }\n                                let word_list = []; //分词列表，包括用户列表\n                                var names = new Array();\n                                var user_item = {\n                                  username: this.username,\n                                  edittime: newdate,\n                                };\n                                names.push(user_item);\n                                for (var wor = 0; wor < words.length; wor++) {\n                                  var wordItem = {\n                                    // index: wor,\n                                    word: words[wor],\n                                    diffs: [\n                                      {\n                                        diff: words[wor],\n                                        names: names,\n                                        num: 1,\n                                        time: newdate,\n                                        status: 0, //0=>原词，没修改，初始值；1=>增加；2=>有增有删；-1=>删除\n                                      },\n                                    ],\n                                    isedited: false,\n                                    isfirst: true, //相对第一版，用于区分改版是否为增加的内容\n                                  };\n                                  word_list.push(wordItem);\n                                }\n                                //新改动\n                                var sentence_item = {\n                                  sentences: [\n                                    {\n                                      provider: this.username,\n                                      sentence: this.sentences[sen],\n                                      time: newdate,\n                                    },\n                                  ],\n                                  words: word_list,\n                                  author: this.username,\n                                  sentenceDiffs: [\n                                    {\n                                      provider: this.username,\n                                      sentenceDiff: this.sentences[sen],\n                                    },\n                                  ],\n                                };\n                                diffList1.push(sentence_item);\n                              }\n                              var user_index = this.userList.findIndex(\n                                (attr) => attr.name == this.username\n                              );\n                              this.userList[\n                                user_index\n                              ].my_sentences = this.sentences;\n                              // console.log(\"deffList2\", diffList1)\n                              this.$axios\n                                .post(this.api + \"/updatediff\", {\n                                  //将分词分句结果更新到数据库\n                                  params: {\n                                    _id: this.diffId,\n                                    diffList: diffList1,\n                                    userList: this.userList,\n                                    submitted: this.submitted,\n                                  },\n                                })\n                                .then((res) => {\n                                  // console.log(\"-------\" + res);\n                                  // this.$router.go(0);\n                                });\n                              this.$router.go(0);\n                              // this.createFinalVersion();\n                            });\n\n                          // this.createFinalVersion();\n                        } else {\n                          this.isversion1 = true;\n                          this.isFinal = true;\n                          //形成综合版本\n                          this.$router.go(0);\n                          // this.createFinalVersion();\n                          this.$notify({\n                            // title: \"警告\",\n                            type: \"warning\",\n                            message:\n                              \"Submitted (Not the first one)\",\n                            position: \"top-right\",\n                            offset: 100,\n                          });\n                        }\n                      });\n                  });\n                // this.$router.go(0);\n                // this.createFinalVersion();\n              } else {\n                // console.log(flag);\n                this.$notify({\n                  // title: \"警告\",\n                  type: \"warning\",\n                  message: \"Your dictation text contains illegal characters, please check!\",\n                  position: \"top-right\",\n                  offset: 100,\n                });\n              }\n            } else {\n              this.$notify({\n                // title: \"警告\",\n                type: \"warning\",\n                message: \"The current task needs to be more than \" + limited_words + \" words\",\n                position: \"top-right\",\n                offset: 100,\n              });\n            }\n          } else {\n            //输入的内容为空\n            this.$notify({\n              // title: \"警告\",\n              type: \"warning\",\n              message: \"You did not input anything.\",\n              position: \"top-right\",\n              offset: 100,\n            });\n          }\n        });\n      // this.$router.go(0); //刷新页面\n    },\n    //打开增加句子编辑面板\n    // editv1() {\n    //   this.$notify({\n    //     title: \"Tip\",\n    //     message: \"每次只能增加一个句子哦！\",\n    //     position: \"top-right\",\n    //     offset: 100,\n    //   });\n    //   this.isAddition = true;\n    //   this.addition = \"\";\n    // },\n    //点击修改按钮\n    changev1() {\n      this.$axios\n        .get(this.api + \"/currentTask?_id=\" + this.diffId)\n        .then((res) => {\n          // this.submitted = res.data[0].submitted;\n          // console.log(\"changev1 submitted\", this.submitted);\n          if (this.submitted.indexOf(this.username) >= 0) {\n            if (this.submitted.indexOf(this.username) == 0) {\n              if (this.submitted.indexOf(this.username, 1) == -1) {\n                //点击修改按钮\n                this.isedit = true;\n                //当前用户要提交的版本\n                // console.log(document.getElementById(\"textDiv\").innerHTML);\n                this.textDiv = document\n                  .getElementById(\"textDiv\")\n                  .innerHTML.replace(/(<span[^>]*?>)|(<\\/span>)/g, \"\");\n                //用于比较的文本，去除标签\n                this.currentCompareText = document\n                  .getElementById(\"textDiv\")\n                  .innerHTML.replace(/(<span[^>]*?>)|(<\\/span>)/g, \"\");\n              } else {\n                this.isedit = false;\n                this.$notify({\n                  // title: \"警告\",\n                  type: \"warning\",\n                  message: \"You have submitted your dictation before.\",\n                  position: \"top-right\",\n                  offset: 100,\n                });\n              }\n            } else {\n              this.isedit = false;\n              this.$notify({\n                // title: \"警告\",\n                type: \"warning\",\n                message: \"You have submitted your dictation before.\",\n                position: \"top-right\",\n                offset: 100,\n              });\n            }\n          } else {\n            //点击修改按钮\n            this.isedit = true;\n            //当前用户要提交的版本\n            this.textDiv = document\n              .getElementById(\"textDiv\")\n              .innerHTML.replace(/(<span[^>]*?>)|(<\\/span>)/g, \"\");\n\n            //用于比较的文本，去除标签\n            this.currentCompareText = document\n              .getElementById(\"textDiv\")\n              .innerHTML.replace(/(<span[^>]*?>)|(<\\/span>)/g, \"\");\n          }\n        });\n    },\n    //取消修改\n    cancelChangev1() {\n      this.isedit = false;\n    },\n    //确定数组里是否有某个元素\n    findElem(arrayToSearch, attr, val) {\n      for (var i = 0; i < arrayToSearch.length; i++) {\n        if (arrayToSearch[i][attr] == val) {\n          return i;\n        }\n      }\n      return -1;\n    },\n    //提交当前用户的版本\n    submitmv() {\n      this.$confirm(\"Each user can only submit once. Do you want to continue?\", \"Alert\", {\n        confirmButtonText: \"Confirm\",\n        cancelButtonText: \"Cancel\",\n        type: \"warning\",\n        center: true,\n      }).then(() => {\n        var flag1 = true;\n        var regstr = /([A-Za-z0-9\\'\\\"\\!\\?\\:\\-\\;\\.\\,\\%\\$\\&\\[ \\]])/;\n        for (var sl = 0; sl < this.sentenceList.length; sl++) {\n          //每个句子\n          for (var c = 0; c < this.sentenceList[sl].length; c++) {\n            var regResult = regstr.test(this.sentenceList[sl][c]);\n            // console.log(\"+++++3\", regResult);\n            if (regResult === false) {\n              // console.log(\"ccc\");\n              flag1 = false;\n            }\n          }\n        }\n        // console.log(\"flag1\", flag1);\n        if (flag1) {\n          //获得当前时间\n          let newdate = this.$moment(new Date()).format(\"YYYY/MM/DD HH:mm:ss\");\n          //获得最新的修改列表\n          this.$axios\n            .get(this.api + \"/currentTask?_id=\" + this.diffId)\n            .then((res) => {\n              this.dbList = res.data[0].diffList;\n            });\n          // console.log(\"dbDiffList\", this.dbList);\n          // console.log(\"sentenceList\", this.sentenceList);\n          var listLen = this.dbList.length;\n          //与第一版本比较，根据句子的数量进行循环（修改后提交内容对应的句子）\n          var final_result = []; //记录所有的修改情况\n          for (var len = 0; len < listLen; len++) {\n            var sen_result = []; //记录当前句子的修改情况\n            var sentence = this.sentenceList[len] + \" \";\n            sentence = sentence\n              .replace(/\\s{2,}/g, \" \")\n              .replace(/[\\r\\n]/g, \" \")\n              .replace(/(\\r\\n|\\n|\\r)/g, \" \")\n              .replace(/\\.\\s/g, \" . \")\n              .replace(/\\,\\s/g, \" , \")\n              .replace(/\\!\\s/g, \" ! \")\n              .replace(/\\?\\s/g, \" ? \");\n            //新改动：换成跟 最新版本 的 第一版本句子 比较\n            var v1_sentences = this.dbList[len].sentences.sort(\n              this.compare(\"time\")\n            );\n            // console.log(\"v1_sentences\", v1_sentences);\n            var v1_sentence = v1_sentences[v1_sentences.length - 1].sentence;\n            var s_result1 = differ\n              .parse(\" \" + v1_sentence, \" \" + sentence)\n              .replace(/%2C/g, \",\")\n              .replace(/%3F/g, \"?\")\n              .replace(/%27/g, \"'\")\n              .replace(/%3A/g, \":\")\n              .replace(/%21/g, \"!\");\n            //将单独的ins标签替换为del-ins标签\n            // console.log(\"s_result1\", s_result1);\n            var reg = /([a-zA-Z0-9]+[\\-\\'\\.\\:]?[a-zA-Z0-9]*\\s(<ins[^>]*?>.*?<\\/ins>\\s)+)|([\\,\\.\\?\\!]\\s(<ins[^>]*?>.*?<\\/ins>\\s)+)/g;\n            var insMatchResult = s_result1.match(reg);\n            // console.log(\"insMatchResult\", insMatchResult);\n            if (insMatchResult !== null) {\n              for (var m = 0; m < insMatchResult.length; m++) {\n                //去掉空的匹配结果\n                if (insMatchResult[m] == \"\") {\n                  insMatchResult.splice(m, 1);\n                  m = m - 1;\n                } else {\n                  s_result1 = s_result1.replace(insMatchResult[m], \"<>\"); //替换成特殊的符号 占位\n                  var del_content = insMatchResult[m].split(\" \")[0]; //原词\n                  var edited_ver =\n                    \"<del>\" +\n                    del_content +\n                    \"</del> <ins>\" +\n                    del_content +\n                    \"</ins>\";\n                  insMatchResult[m] = insMatchResult[m].replace(\n                    del_content,\n                    edited_ver\n                  );\n                }\n                s_result1 = s_result1\n                  .replace(\"<>\", insMatchResult[m])\n                  .replace(/(\\r\\n|\\n|\\r)/g, \" \");\n              }\n            }\n            // console.log(\"after\", s_result1);\n            var s_result_del = s_result1\n              .replace(/<ins[^>]*?>.*?<\\/ins>\\s/g, \"\")\n              .replace(/(\\r\\n|\\n|\\r)/g, \" \");\n            //去掉所有ins标签，用于确认del标签的index\n            var s_result_arr = s_result_del\n              .trim()\n              .split(/\\s/g)\n              .filter((d) => d);\n            // console.log(\"s_result_arr\", s_result_arr);\n            // 给 s_result_arr 数组中每个词都加一个index和flag，便于后期找index\n            var new_s_result_arr = s_result_arr.map((item, index) => {\n              var robj = {};\n              robj.index = index;\n              robj.word = item;\n              robj.flag = 0;\n              return robj;\n            });\n            // console.log(\"new_s_result_arr\", new_s_result_arr);\n            //匹配出所有的修改\n            var allMatchResult = s_result1.match(\n              /((<del[^>]*?>.*?<\\/del>\\s)*(<ins[^>]*?>.*?<\\/ins>\\s)*)/g\n            );\n            // console.log(\"allMatchResult: \", allMatchResult);\n            //对所有的匹配结果（修改）进行进一步的整合\n            for (var n = 0; n < allMatchResult.length; n++) {\n              //去掉空的匹配结果\n              if (allMatchResult[n] == \"\") {\n                allMatchResult.splice(n, 1);\n                n = n - 1;\n              } else {\n                var matchSplit = allMatchResult[n]\n                  .replace(\"\\n\", \" \")\n                  .replace(\"↵\", \" \")\n                  .trim()\n                  .split(/\\s/g);\n                // console.log(\"matchResult\", matchSplit);\n                var del = [];\n                var ins = [];\n                // var re1 = /<del[^>]*?>.*?<\\/del>/g;\n                // var re2 = /<ins[^>]*?>.*?<\\/ins>/g;\n                for (var t = 0; t < matchSplit.length; t++) {\n                  //存储到相反的数组？？？\n                  // console.log(\"m\");\n                  if (matchSplit[t].indexOf(\"<ins>\")) {\n                    // console.log(\"每个matchSplit：\", matchSplit[t]);\n                    // var del_index = s_result_arr.indexOf(matchSplit[t]);\n                    var finishedItem = new_s_result_arr.find(\n                      (item) => item.word == matchSplit[t] && item.flag == 0\n                    );\n                    if (finishedItem) {\n                      var finishedIndex = new_s_result_arr.findIndex(\n                        (item) => item == finishedItem\n                      );\n                      new_s_result_arr[finishedIndex].flag = 1;\n                      var del_index = finishedIndex;\n                      var del_item = {\n                        del: matchSplit[t],\n                        del_index: del_index,\n                      };\n                      del.push(del_item);\n                    }\n                  }\n                  if (matchSplit[t].indexOf(\"<del>\")) {\n                    ins.push(matchSplit[t]);\n                  }\n                }\n                // console.log(\"del arr\", del);\n                // console.log(\"ins arr\", ins);\n                if (ins.length == 0) {\n                  for (var d = 0; d < del.length; d++) {\n                    var diff1 = del[d].del.trim();\n                    // console.log(\"a\", diff1)\n                    var del_content1 = del[d].del.replace(\n                      /(<del[^>]*?>)|(<\\/del>)/g,\n                      \"\"\n                    );\n                    // console.log(\"del_content1\", del_content1)\n                    var item1 = {\n                      word: del_content1,\n                      diff: diff1,\n                      index: del[d].del_index,\n                      status: -1, //删除\n                    };\n                    sen_result.push(item1);\n                  }\n                }\n                if (del.length == 1 && ins.length > 0) {\n                  // console.log(\"del_del\", del[0]);\n                  var del_content2 = del[0].del\n                    .replace(/(<del[^>]*?>)|(<\\/del>)/g, \"\")\n                    .trim();\n                  var ins_content2 = ins[0].replace(\n                    /(<ins[^>]*?>)|(<\\/ins>)/g,\n                    \"\"\n                  );\n                  var ins_content22 = ins[ins.length - 1].replace(\n                    /(<ins[^>]*?>)|(<\\/ins>)/g,\n                    \"\"\n                  );\n                  // console.log(\"del_content2\", del_content2);\n                  // console.log(\"ins_content2\", ins_content2);\n                  var diff2 = del[0].del.trim() + ins.join(\" \");\n                  var status2 = 2; //修改\n                  if (del_content2 == ins_content2) {\n                    // console.log(\"del_content2 == ins_content2\");\n                    status2 = 1; //增加\n                    var ins_temp = ins.slice(1);\n                    diff2 = del_content2.trim() + \" \" + ins_temp.join(\" \");\n                  }\n                  // if (del_content2 == ins_content22) {\n                  //   console.log(\"del_content2 == ins_content22\");\n                  //   status2 = 1; //增加\n                  //   var ins_temp = ins.slice(-1);\n                  //   console.log(\"ins_temp\", ins_temp)\n                  //   diff2 = del_content2.trim() + \" \" + ins_temp.join(\" \");\n                  // }\n                  // console.log(\"diff2\", diff2);\n                  // console.log(\"del_content2\", del_content2);\n                  var item2 = {\n                    word: del_content2,\n                    diff: diff2,\n                    index: del[0].del_index,\n                    status: status2,\n                  };\n                  sen_result.push(item2);\n                }\n                if (del.length > 1) {\n                  if (del.length == ins.length) {\n                    for (var a = 0; a < del.length; a++) {\n                      // console.log(del[a])\n                      var del_content3 = del[a].del.replace(\n                        /(<del[^>]*?>)|(<\\/del>)/g,\n                        \"\"\n                      );\n                      var ins_content3 = ins[a].replace(\n                        /(<ins[^>]*?>)|(<\\/ins>)/g,\n                        \"\"\n                      );\n                      // console.log(\"c\", del_content3)\n                      if (del_content3 !== ins_content3) {\n                        var item3 = {\n                          word: del_content3,\n                          diff: del[a].del.trim() + ins[a],\n                          index: del[a].del_index,\n                          status: 2,\n                        };\n                        sen_result.push(item3);\n                      }\n                    }\n                  }\n                  if (del.length < ins.length) {\n                    for (var b = 0; b < del.length; b++) {\n                      var del_content4 = del[b].del.replace(\n                        /(<del[^>]*?>)|(<\\/del>)/g,\n                        \"\"\n                      );\n                      // console.log(\"d\", del_content4)\n                      var diff4 = \"\";\n                      if (b == del.length - 1) {\n                        var temp_ins = ins.slice(b);\n                        diff4 = del[b].del.trim() + temp_ins.join(\" \");\n                      } else {\n                        diff4 = del[b].del.trim() + ins[b];\n                      }\n                      // console.log(\"d\", diff4)\n                      var ins_content4 = ins[b].replace(\n                        /(<ins[^>]*?>)|(<\\/ins>)/g,\n                        \"\"\n                      );\n                      if (del_content4 !== ins_content4) {\n                        var item4 = {\n                          word: del_content4,\n                          diff: diff4,\n                          index: del[b].del_index,\n                          status: 2,\n                        };\n                        sen_result.push(item4);\n                      }\n                    }\n                  }\n                  if (del.length > ins.length) {\n                    var del1 = del[1].del\n                      .replace(/(<del[^>]*?>)|(<\\/del>)/g, \"\")\n                      .trim();\n                    var del0 = del[0].del\n                      .replace(/(<del[^>]*?>)|(<\\/del>)/g, \"\")\n                      .trim();\n                    if (del.length == 2 && ins.length == 1) {\n                      var ins0 = ins[0]\n                        .replace(/(<ins[^>]*?>)|(<\\/ins>)/g, \"\")\n                        .trim();\n                      if (del1 == ins0) {\n                        var item5 = {\n                          word: del0,\n                          diff: del[0].del.trim(),\n                          index: del[0].del_index,\n                          status: -1,\n                          isAbnormal: false,\n                        };\n                        sen_result.push(item5);\n                      } else {\n                    for (var c = 0; c < ins.length; c++) {\n                      var del_content5 = del[c].del\n                            .replace(/(<del[^>]*?>)|(<\\/del>)/g, \"\")\n                            .trim();\n                          var ins_content5 = ins[c]\n                            .replace(/(<ins[^>]*?>)|(<\\/ins>)/g, \"\")\n                            .trim();\n                          // console.log(\"e\", del_content5)\n                          if (del_content5 !== ins_content5) {\n                            var item5 = {\n                              word: del_content5,\n                              diff: del[c].del.trim() + ins[c],\n                              index: del[c].del_index,\n                              status: 2,\n                              isAbnormal: false,\n                            };\n                            sen_result.push(item5);\n                          }\n                        }\n                        var temp_del = del.slice(ins.length, del.length);\n                        for (var f = 0; f < temp_del.length; f++) {\n                          var diff6 = temp_del[f].del.trim();\n                          var del_content6 = temp_del[f].del.replace(\n                        /(<del[^>]*?>)|(<\\/del>)/g,\n                        \"\"\n                      );\n                      // console.log(\"e\", diff6)\n                          // console.log(\"e\", del_content6)\n                          var item6 = {\n                            word: del_content6,\n                            diff: diff6,\n                            index: temp_del[f].del_index,\n                            status: -1,\n                            isAbnormal: false,\n                          };\n                          sen_result.push(item6);\n                        }\n                      }\n                    } else {\n                      for (var c = 0; c < ins.length; c++) {\n                        var del_content5 = del[c].del\n                          .replace(/(<del[^>]*?>)|(<\\/del>)/g, \"\")\n                          .trim();\n                        var ins_content5 = ins[c]\n                          .replace(/(<ins[^>]*?>)|(<\\/ins>)/g, \"\")\n                          .trim();\n                      // console.log(\"e\", del_content5)\n                      if (del_content5 !== ins_content5) {\n                        var item5 = {\n                          word: del_content5,\n                          diff: del[c].del.trim() + ins[c],\n                          index: del[c].del_index,\n                          status: 2,\n                          isAbnormal: false,\n                        };\n                        sen_result.push(item5);\n                      }\n                    }\n                    var temp_del = del.slice(ins.length, del.length);\n                    for (var f = 0; f < temp_del.length; f++) {\n                      var diff6 = temp_del[f].del.trim();\n                      var del_content6 = temp_del[f].del.replace(\n                        /(<del[^>]*?>)|(<\\/del>)/g,\n                        \"\"\n                      );\n                      // console.log(\"e\", diff6)\n                      // console.log(\"e\", del_content6)\n                      var item6 = {\n                        word: del_content6,\n                        diff: diff6,\n                        index: temp_del[f].del_index,\n                        status: -1,\n                        isAbnormal: false,\n                      };\n                      sen_result.push(item6);\n                    }\n                  }\n                }\n              }\n            }\n            }\n            final_result.push(sen_result);\n          }\n          // console.log(\"final_result: \", final_result);\n          //再取一次数据，判断是属于哪个单词的修改，判断该修改是否存在\n          //如果存在，直接加入用户，如果不存在，加入该修改以及用户\n          this.$axios\n            .get(this.api + \"/currentTask?_id=\" + this.diffId)\n            .then((res) => {\n              this.dbList = res.data[0].diffList;\n            });\n          // console.log(\"dbDiffList2\", this.dbList);\n          for (var r = 0; r < final_result.length; r++) {\n            //r表示文本中的第r句\n            var s_orders = final_result[r]; //第r句的修改记录\n            // console.log(\"s_orders: \", s_orders);\n            var s_words = this.dbList[r].words; //第r句的分词结果\n            // console.log(\"s_words: \", s_words);\n            var s_sentences = this.dbList[r].sentenceDiffs; //第r句的不同版本\n            //新改动\n            var new_sentences = this.dbList[r].sentences;\n            if (s_orders.length == 0) {\n              //第r句的修改记录为空\n              s_sentences.push({\n                provider: this.username,\n                sentenceDiff: this.sentenceList[r],\n              });\n              // 由于数据库中的顺序会随机改变，所以先匹配再插入更改数据\n              s_words.forEach((item) => {\n                var no_edited_word = item.word;\n                var no_edited_index = item.diffs.findIndex(\n                  (attr) => attr.diff == no_edited_word\n                );\n                item.diffs[no_edited_index].names.push({\n                  username: this.username,\n                  edittime: newdate,\n                });\n                item.diffs[no_edited_index].num++;\n                item.diffs[no_edited_index].time = newdate;\n              });\n            } else {\n              //第r句的修改记录不为空\n              // 第一部分：将修改记录替换到不同句子的版本展示中，便于展示修改的地方\n              // 整合第二部分于第一部分中：判断每个词语是否有对应的修改\n              var editing_words = [];\n              s_words.forEach((item, index) => {\n                var itemIndex = index;\n                var replacedItemIndex = s_orders.indexOf(\n                  s_orders.find((element) => element.index == itemIndex)\n                );\n                if (replacedItemIndex != -1) {\n                  if (s_orders[replacedItemIndex].status == 1) {\n                    //对前一个词的处理   补充：句尾的标点符号\n                    var find_index = this.findElem(item.diffs, \"status\", 0);\n                    // console.log(\"find_indexaaaa\", find_index);\n                    item.diffs[find_index].names.push({\n                      username: this.username,\n                      edittime: newdate,\n                    });\n                    item.diffs[find_index].num++;\n                    item.diffs[find_index].time = newdate;\n\n                    var r_ins_words = s_orders[replacedItemIndex].diff.split(\n                      \" \"\n                    );\n                    var ins_words = r_ins_words.slice(1);\n                    var ins_words_arr = [\n                      {\n                        word: r_ins_words[0],\n                        diffs: [\n                          {\n                            styleDiff: r_ins_words[0], //展示数据\n                          },\n                        ],\n                        isedited: false,\n                      },\n                    ];\n\n                    //I love China.\n                    //I very love China too.\n                    ins_words.forEach((i, index) => {\n                      var i_word = i.replace(/(<ins[^>]*?>)|(<\\/ins>)/g, \"\");\n                      var i_index = s_orders[replacedItemIndex].index;\n                      var i_names = new Array();\n                      var user_item = {\n                        username: this.username,\n                        edittime: newdate,\n                      };\n                      i_names.push(user_item);\n                      var ins_wordItem = {\n                        index: i_index,\n                        word: i_word,\n                        diffs: [\n                          {\n                            diff: i_word,\n                            styleDiff: \"<subins>\" + i_word + \"</subins>\",\n                            names: i_names,\n                            num: 1,\n                            time: newdate,\n                            status: 0,\n                          },\n                        ],\n                        isedited: false,\n                        isfirst: false, //相对第一版，用于区分改版是否为增加的内容\n                      };\n                      ins_words_arr.push(ins_wordItem);\n                    });\n                    console.log(\"ins_words_arr aaaa\", ins_words_arr);\n                    editing_words.push(ins_words_arr);\n                  } else {\n                    var find_result = this.findElem(\n                      item.diffs,\n                      \"diff\",\n                      s_orders[replacedItemIndex].diff\n                    );\n                    if (find_result == -1) {\n                      //不存在\n                      var names = new Array();\n                      var user_item = {\n                        username: this.username,\n                        edittime: newdate,\n                      };\n                      names.push(user_item);\n                      var diff_item = {\n                        diff: s_orders[replacedItemIndex].diff,\n                        names: names,\n                        num: 1,\n                        time: newdate,\n                        status: s_orders[replacedItemIndex].status,\n                      };\n                      item.diffs.push(diff_item);\n                      item.isedited = true;\n                    } else {\n                      item.diffs[find_result].names.push({\n                        username: this.username,\n                        edittime: newdate,\n                      }); //将当前用户加入列表\n                      item.diffs[find_result].num++; //数量加1\n                      item.diffs[find_result].time = newdate; //更新日期\n                    }\n                    var word_diff = item.word.replace(\n                      item.word,\n                      s_orders[replacedItemIndex].diff\n                    );\n                    editing_words.push(word_diff);\n                  }\n                } else {\n                  var no_edited_word = item.word;\n                  console.log(\"no_edited_word\", no_edited_word);\n                  // console.log(\"item.diffs\", item.diffs);\n                  var no_edited_index = item.diffs.findIndex((attr) => {\n                    return attr.diff == no_edited_word;\n                  });\n                  console.log(\"no_edited_index\", no_edited_index);\n                  item.diffs[no_edited_index].names.push({\n                    username: this.username,\n                    edittime: newdate,\n                  });\n                  item.diffs[no_edited_index].num++;\n                  item.diffs[no_edited_index].time = newdate;\n\n                  if (item.isfirst == true) {\n                    editing_words.push(item.word);\n                  } else {\n                    // console.log(\n                    //   \"no_edited_word >> item.diffs[no_edited_index].styleDiff\",\n                    //   item.diffs[no_edited_index].styleDiff\n                    // );\n                    editing_words.push(item.diffs[no_edited_index].styleDiff);\n                  }\n                }\n              });\n              console.log(\"editing_words1\", editing_words);\n              var deepFlatten = (arr) =>\n                [].concat(\n                  ...arr.map((v) => (Array.isArray(v) ? deepFlatten(v) : v))\n                );\n\n              var more_ins_arr = []; //增加的原词数组\n              for (var ma = 0; ma < editing_words.length; ma++) {\n                if (Array.isArray(editing_words[ma])) {\n                  more_ins_arr.push(editing_words[ma].slice(1));\n                }\n              }\n              console.log(\"more_ins_arr\", more_ins_arr); //more_ins_arr [[1, 2, 3], [4, 5], [7, 8]]\n              var more_ins_arr1 = deepFlatten(more_ins_arr);\n              console.log(\"more_ins_arr1\", more_ins_arr1); //[1, 2, 3, 4, 5, 7, 8]\n\n              for (var va = 0; va < more_ins_arr1.length; va++) {\n                more_ins_arr1[va].index = more_ins_arr1[va].index + va + 1;\n                s_words.splice(more_ins_arr1[va].index, 0, more_ins_arr1[va]);\n              }\n              // console.log(\"s_words2222\", s_words);\n\n              //新改动\n              if (more_ins_arr1.length > 0) {\n                var v1_words = [];\n                v1_words = s_words.map((word) => {\n                  return word.word;\n                });\n                console.log(\"v1_words\", v1_words);\n                var new_sentence = v1_words.join(\" \");\n                var new_item = {\n                  provider: this.username,\n                  sentence: new_sentence,\n                  time: newdate,\n                };\n                new_sentences.push(new_item);\n              }\n\n              // console.log(\"s_words3333\", s_words);\n\n              editing_words = deepFlatten(\n                editing_words.map((w) => {\n                  if (Array.isArray(w) == true) {\n                    var sub_sen = w.map((iw) => {\n                      console.log(iw.diffs[0].styleDiff);\n                      return iw.diffs[0].styleDiff;\n                    });\n                    return sub_sen;\n                  } else {\n                    return w;\n                  }\n                })\n              );\n              // console.log(\"editing_words2\", editing_words);\n              //[\"In\", \"<subins>@@@</subins>\", \"<subins>@@@@@@@@@@@</subins>\", \"Turkey,\", \"<del>have</del><ins>had</ins>\", \"earthquake.\"]\n              //判断是否为标点符号\n              // var regE1 = /\\,|\\.|\\!|\\?|\\.\\\"|\\.\\'|\\!\\\"|\\!\\'|\\?\\\"|\\?\\'/;\n              var regE1 = /\\,|\\.|\\!|\\?/;\n              for (var ve = 0; ve < editing_words.length; ve++) {\n                if (regE1.test(editing_words[ve])) {\n                  editing_words[ve] = editing_words[ve];\n                } else {\n                  editing_words[ve] = \" \" + editing_words[ve];\n                }\n              }\n              var editing_sentence = editing_words.join(\" \");\n              s_sentences.push({\n                provider: this.username,\n                sentenceDiff: editing_sentence,\n              });\n              console.log(\"sentenceDiffs: \", s_sentences);\n            }\n          }\n          // console.log(\"bbb\", this.dbList);\n\n          //判断当前用户是否在userList中\n          for (var h = 0; h < this.userList.length; h++) {\n            if (this.username == this.userList[h].name) {\n              this.inUserList = true;\n            }\n          }\n          //如果没有则增加\n          if (this.inUserList == false) {\n            this.userList.push({\n              name: this.username,\n              my_sentences: this.sentenceList,\n            });\n          }\n          console.log(\"submitmv submitted\", this.submitted);\n          this.submitted.push(this.username);\n\n          //更新相应数据到数据库\n          this.$axios.post(this.api + \"/updatediff\", {\n            params: {\n              _id: this.diffId,\n              userList: this.userList,\n              diffList: this.dbList,\n              submitted: this.submitted,\n            },\n          });\n\n          var new_version = this.sentenceList.join(\" \");\n          this.$axios.post(this.api + \"/updateVersion\", {\n            params: {\n              _id: this.diffId,\n              new_version: new_version,\n              time: newdate,\n              username: this.username,\n              userId: this.userId,\n            },\n          });\n\n          // 当发布者超过截止日期后提交答案\n          this.$axios\n            .get(this.api + \"/currentTask?_id=\" + this.diffId)\n            .then((res) => {\n              //刷新diffList\n              this.diffList = res.data[0].diffList;\n              let newdate1 = this.$moment(new Date()).format(\n                \"YYYY/MM/DD HH:mm:ss\"\n              );\n              if (\n                this.username == this.publisher &&\n                !this.isManual &&\n                this.compareDate(newdate1, this.deadline)\n              ) {\n                this.countScores(); //\"2021/02/05 00:00:00\", this.deadline\n                this.isConfirm = true;\n              }\n            });\n\n          //关闭输入框\n          this.isedit = false;\n          this.loading = true;\n\n          this.$notify({\n            type: \"success\",\n            message: \"Success\",\n            position: \"top-right\",\n            offset: 100,\n          });\n          this.createFinalVersion();\n          // this.$router.go(0);\n          this.$axios\n            .get(this.api + \"/currentTask?_id=\" + this.diffId)\n            .then((res) => {\n              var video_id = res.data[0].videoId; //对应视频的_id\n              var authcode = res.data[0].authcode; //对应任务的验证码\n              this.$axios\n                .get(this.api + \"/profile?name=\" + this.username)\n                .then((res) => {\n                  var userId = res.data[0]._id;\n                  var userTasks = res.data[0].myTasks;\n                  userTasks.push({\n                    taskId: this.diffId,\n                    videoId: video_id,\n                    deadline: this.deadline,\n                    authcode: authcode,\n                    title: this.taskTitle,\n                    label: this.taskLabels,\n                    time: newdate,\n                    scores: \"\",\n                  });\n\n                  // 更新用户“myTasks”\n                  this.$axios.post(this.api + \"/updateMyTasks\", {\n                    params: {\n                      _id: userId,\n                      myTasks: userTasks,\n                    },\n                  });\n                });\n            });\n        } else {\n          this.$notify({\n            // title: \"警告\",\n            type: \"warning\",\n            message: \"Your dictation text contains illegal characters, please check!\",\n            position: \"top-right\",\n            offset: 100,\n          });\n        }\n      });\n      // .catch(() => {\n      //   this.$notify({\n      //     // title: \"警告\",\n      //     type: \"warning\",\n      //     message: \"Cancelled\",\n      //     position: \"top-right\",\n      //     offset: 100,\n      //   });\n      // });\n    },\n    //生成综合版本\n    createFinalVersion() {\n      this.$axios\n        .get(this.api + \"/currentTask?_id=\" + this.diffId)\n        .then((res) => {\n          // this.openFullScreen2()\n          this.dbList = res.data[0].diffList;\n          //加载动画\n          setTimeout(() => {\n            this.loading = false;\n          }, 1500);\n          // console.log(\"dbList\", this.dbList);\n          var final_sentences = [];\n          var only_sentences = [];\n          var only_sentences1 = [];\n          for (var k = 0; k < this.dbList.length; k++) {\n            var words = this.dbList[k].words;\n            var most_words = [];\n            for (var w = 0; w < words.length; w++) {\n              var words_diffs = words[w].diffs;\n              var most_edited_word = words_diffs[words_diffs.length - 1].diff; //初始值\n              //按时间排序\n              //按用户数量排序\n              var words_diffs2 = words_diffs\n                .sort(this.compare(\"time\"))\n                .sort(this.compare(\"num\"));\n              // console.log(\"words_diffs2\", words_diffs2)\n\n              if (words_diffs2[words_diffs.length - 1].styleDiff) {\n                most_edited_word = {\n                  diff: words_diffs2[words_diffs.length - 1].styleDiff,\n                  isedited: words[w].isedited,\n                };\n              } else {\n                most_edited_word = {\n                  diff: words_diffs2[words_diffs.length - 1].diff,\n                  isedited: words[w].isedited,\n                };\n              }\n              most_words.push(most_edited_word);\n            }\n            var final_sentence = \"\";\n            for (var s = 0; s < most_words.length; s++) {\n              most_words[s].diff.trim();\n              most_words[s].diff = most_words[s].diff + \" \";\n              final_sentence = final_sentence + most_words[s].diff;\n            }\n            // var final_sentence = most_words.join(\"\");\n            final_sentences.push({\n              final_sentence: final_sentence,\n              final_words: most_words,\n            });\n            only_sentences.push(final_sentence);\n          }\n          for (var t = 0; t < only_sentences.length; t++) {\n            var final_sentence1 = only_sentences[t]\n              .replace(/(<del[^>]*?>.*?<\\/del>)/g, \"\")\n              .replace(/(<ins[^>]*?>)|(<\\/ins>)/g, \"\")\n              .replace(/(<subins[^>]*?>)|(<\\/subins>)/g, \"\")\n              .replace(/\\s\\.\\s/g, \". \")\n              .replace(/\\s\\,\\s/g, \", \")\n              .replace(/\\s\\!\\s/g, \"! \")\n              .replace(/\\s\\?\\s/g, \"? \");\n            // console.log(only_sentences[t])\n            only_sentences1.push(final_sentence1);\n          }\n          // console.log(only_sentences1);\n          // console.log(\"final_context: \", final_sentences);\n          this.final_context = final_sentences;\n          this.sentenceList = only_sentences1;\n        });\n      // 生成或获取综合版本时的加载过渡动画\n      this.$q.loading.show({\n        spinner: QSpinnerFacebook,\n        spinnerColor: \"grey-2\",\n        spinnerSize: 60,\n        backgroundColor: \"purple-5\",\n      });\n      // hiding in 5s\n      this.timer = setTimeout(() => {\n        this.$q.loading.hide();\n        this.timer = void 0;\n      }, 3000);\n      // console.log(\"aaaa\", this.dbList);\n      //显示提示信息\n      // this.$message({\n      //   message: \"已更新\",\n      //   type: \"success\",\n      // });\n    },\n    compare(attr, rev) {\n      //第二个参数没有传递 默认升序排列\n      if (rev == undefined) {\n        rev = 1;\n      } else {\n        rev = rev ? 1 : -1;\n      }\n      return function (a, b) {\n        a = a[attr];\n        b = b[attr];\n        if (a < b) {\n          return rev * -1;\n        }\n        if (a > b) {\n          return rev * 1;\n        }\n        return 0;\n      };\n    },\n    //ES6语法 数组去重\n    unique(arr) {\n      return Array.from(new Set(arr));\n    },\n    showAll(event, index, s_index) {\n      event || (event = window.event);\n      event.stopPropagation\n        ? event.stopPropagation()\n        : (event.cancelBubble = true);\n      this.tableData = [];\n      //s_index表示句子序号；index表示单词序号\n      this.seen = true;\n      this.current = index;\n      this.tempindex = index;\n      this.isActive = true;\n      // this.isShowAll = true;\n      var words = this.dbList[s_index].words;\n      this.tableData = words[index].diffs;\n      // for (var i = 0; i < this.tableData.length; i++) {\n      //   this.tableData[i].names = this.unique(this.tableData[i].names);\n      // this.tableData[i].names = unique_names.join(\", \"); //bug：把names这个数组变成了字符串\n      // }\n      this.senTableData = this.dbList[s_index].sentenceDiffs;\n      // console.log(\"senTableData: \", this.senTableData);\n      // console.log(\"words: \", words);\n      // console.log(\"tableData: \", this.tableData);\n      this.changePos(event);\n      // console.log(event);\n      document.addEventListener(\"click\", this.hidePanel, false);\n    },\n    closeShow() {\n      this.seen = false;\n      this.current = null;\n      this.tempindex = null;\n      this.isActive = false;\n      // this.isShowAll = false;\n      var wordOperate = document.getElementById(\"wordOperate\");\n      wordOperate.style.display = \"none\";\n      document.removeEventListener(\"click\", this.hidePanel, false);\n    },\n    hidePanel(e) {\n      if (this.$refs.main && !this.$refs.main.contains(e.target)) {\n        //点击除弹出层外的空白区域\n        this.closeShow();\n      }\n    },\n    hidePanel1(e) {\n      if (this.$refs.history && !this.$refs.history.contains(e.target)) {\n        //点击除弹出层外的空白区域\n        this.closeTimeline();\n      }\n    },\n    pip() {\n      if (this.isVideo) {\n        var video = document.querySelector(\"#video > video\");\n        if (!document.pictureInPictureElement) {\n          //开启\n          video.requestPictureInPicture().catch((error) => {\n            console.log(\n              error,\n              \"Video failed to enter Picture-in-Picture mode.\"\n            );\n          });\n        } else {\n          //关闭\n          document.exitPictureInPicture().catch((error) => {\n            console.log(\n              error,\n              \"Video failed to leave Picture-in-Picture mode.\"\n            );\n          });\n        }\n      } else {\n        this.$notify({\n          // title: \"警告\",\n          type: \"warning\",\n          message: \"Picture-in-picture is not supported.\",\n          position: \"top-right\",\n          offset: 100,\n        });\n      }\n    },\n\n    // 计算分数\n    countScores() {\n      // this.$axios\n      //   .post(this.api + \"/getVersions\", { params: { _id: this.diffId } })\n      //   .then((res) => {\n      //     this.versionsList = res.data; //获取每个人的版本\n      //   });\n      var { ts, fnl } = countTechScores(\n        this.diffList,\n        this.publisher,\n        this.configuration.SMscore,\n        this.submitted,\n        this.configuration.timePercentage,\n        this.configuration.timeSpan\n      );\n      this.matchPoints = 100 - this.configuration.SMscore;\n      var { cms, ms } = countMatchPoints(\n        this.versionsList,\n        this.sentenceList,\n        this.publisher,\n        this.publishTime,\n        this.deadline,\n        this.matchPoints\n      );\n      this.techScoreList = ts;\n      this.matchScoreList = ms;\n      var sum = 0;\n      var scoreList = [];\n      var s = Array.from(new Set(this.submitted)); //如第一个人出现两次，则去除重复值\n      for (var j = 0; j < s.length; j++) {\n        var name = s[j];\n        this.techScoreList[name] = !this.techScoreList[name]\n          ? 0\n          : this.techScoreList[name];\n        this.matchScoreList[name] = !this.matchScoreList[name]\n          ? 0\n          : this.matchScoreList[name];\n        if (name != this.publisher) {\n          var scores =\n            Number(this.techScoreList[name]) +\n            Number(this.matchScoreList[name]);\n          sum += scores;\n          scoreList.push({\n            name: name,\n            matchScores: this.matchScoreList[name],\n            techScores: this.techScoreList[name],\n            scores: scores,\n          });\n        }\n      }\n      this.averScores = Math.round(sum / scoreList.length);\n\n      scoreList.sort(this.compare(\"scores\", false));\n      var rankList = [];\n\n      var pIndex = s.findIndex((item) => item == this.publisher);\n      pIndex != -1 ? s.splice(pIndex, 1) : s;\n      // 有发布者则把发布者去掉,无则保持原样\n\n      for (var j = 0; j < s.length; j++) {\n        scoreList[j].rank = j + 1;\n        rankList.push({ name: scoreList[j].name, rank: scoreList[j].rank });\n      }\n\n      if (scoreList != [] && this.averScores) {\n        this.techList = fnl;\n        this.matchList = cms;\n        this.scoreList = scoreList;\n        this.$axios.post(this.api + \"/updateScoresList\", {\n          params: {\n            _id: this.diffId,\n            scoreList: this.scoreList,\n            techList: this.techList,\n            matchList: this.matchList,\n            averScores: this.averScores,\n          },\n        });\n      }\n    },\n\n//标注每一句的音频的开始和结束位置\n    splitVideo(){\n      console.log(\"splitvideo\")\n        var sentenceList = this.sentenceList\n        var fileName = this.fileName\n        var videoId = this.video_id\n        console.log(sentenceList)\n        console.log(fileName)\n        this.$axios.post(\"/python/splitVideo\", {\n          params: {\n           sentences : sentenceList,\n           fileName : fileName,\n           videoId : videoId,\n          },\n        });\n    },\n\n    //获得分数列表\n    isScoresList() {\n      var index = null;\n      this.checkStatus(); //判断身份\n      // 判断提交名单是否存在发布者\n      var newLen = Array.from(new Set(this.submitted));\n      var pIndex = newLen.findIndex((item) => item == this.publisher);\n      // 有发布者则把数组长度扣去1,无则保持原样\n      newLen = pIndex != -1 ? newLen.length : newLen.length - 1;\n\n      if (\n        this.scoreList == \"\" ||\n        this.scoreList == undefined || //如果scoreList为空\n        !this.averScores //如果平均分为空\n        // || isExceed\n      ) {\n        if (newLen <= 0) {\n          //判断是否发布者为第一个提交的人\n          this.scores = \"No participants now!\";\n          this.isSubmitted = false;\n          return;\n        } else {\n          this.countScores();\n        }\n      }\n      this.scoreList.sort(this.compare(\"scores\"));\n      if (\n        this.submitted.findIndex((item) => item === this.username) == -1 ||\n        this.username == this.publisher\n      ) {\n        //该用户没有参与本次任务或是发布者\n        this.scores = this.averScores + \" (Average score)\";\n      } else {\n        var index = this.scoreList.findIndex(\n          (item) => item.name === this.username\n        );\n        var rank = this.scoreList[index].rank;\n        this.myRank = rank;\n        this.scores = this.scoreList[index].scores;\n      }\n      if (this.username == this.publisher) {\n        // 更新发布者“myPublished”中的平均分\n        this.$axios.post(this.api + \"/updateMyPublishedScores\", {\n          params: {\n            _id: this.userId,\n            taskId: this.diffId,\n            scoreList: this.scoreList,\n            techList: this.techList,\n            matchList: this.matchList,\n            averScores: this.averScores,\n            configuration: this.configuration,\n          },\n        });\n      } else if (\n        this.submitted.findIndex((item) => item === this.username) != -1 &&\n        this.username != this.publisher\n      ) {\n        //如若先前更新myTasks失败\n        var userTasks = [];\n        this.$axios\n          .get(this.api + \"/profile?name=\" + this.username)\n          .then((res) => {\n            userTasks = res.data[0].myTasks;\n            let newdate = this.$moment(new Date()).format(\n              \"YYYY/MM/DD HH:mm:ss\"\n            );\n            userTasks.push({\n              taskId: this.diffId,\n              videoId: this.video_id,\n              deadline: this.deadline,\n              authcode: this.authcode,\n              title: this.taskTitle,\n              label: this.taskLabels,\n              time: newdate,\n              scores: \"\",\n            });\n\n            // 更新用户“myTasks”中的分数\n            this.$axios.post(this.api + \"/updateMyTasksScores\", {\n              params: {\n                _id: this.userId,\n                taskId: this.diffId,\n                scores: this.scoreList[index].scores\n                  ? this.scoreList[index].scores\n                  : \"\",\n                userRank: this.myRank,\n                userTasks: userTasks,\n              },\n            });\n          });\n      }\n    },\n\n    //比较日期大小\n    compareDate(Date1, Date2) {\n      if (Date1.search(\"/\") == -1) {\n        //如果模式为\"2021/02/06 00:00:00\"\n        Date1 = Date1.replace(\"-\", \"/\"); //转换成标准格式\n      }\n      if (Date2.search(\"/\") == -1) {\n        Date2 = Date2.replace(\"-\", \"/\");\n      }\n      if (Date1.split(\" \")[0] == Date2.split(\" \")[0]) {\n        //如果是同一天，则比较时分秒\n        var time1 = Date1.split(\" \")[1].split(\":\");\n        var time2 = Date2.split(\" \")[1].split(\":\");\n        var total1 =\n          Number(time1[0]) * 3600 + Number(time1[1]) * 60 + Number(time1[2]);\n        var total2 =\n          Number(time2[0]) * 3600 + Number(time2[1]) * 60 + Number(time2[2]);\n        return total1 - total2 >= 0 ? true : false;\n      } else {\n        var oDate1 = new Date(Date1.split(\" \")[0]);\n        var oDate2 = new Date(Date2.split(\" \")[0]);\n        return oDate1 >= oDate2 ? true : false;\n      }\n    },\n    //查看分数列表\n    checkScoresDetails() {\n      if (this.isPublisher) {\n        var path = \"/diff/\" + this.diffId + \"/scores\";\n        this.$router.push(path);\n      } else {\n        var path = \"/diff/\" + this.diffId + \"/scoresStu\";\n        this.$router.push(path);\n      }\n    },\n    // 检查身份\n    checkStatus() {\n      var index = this.submitted.findIndex((item) => item == this.username);\n      if (this.username == this.publisher) {\n        this.isPublisher = true;\n        this.isSubmitted = true;\n      } else if (index != -1) {\n        this.isSubmitted = true;\n      }\n    },\n\n    manualCofirm() {\n      //手动确认后执行算分的函数\n      this.isScoresList();\n      this.isManual = !this.isManual;\n      this.isConfirm = !this.isConfirm;\n      this.setManual();\n    },\n\n    setManual() {\n      //设置是否手动确认分数\n      this.$axios.post(this.api + \"/updateIsManual\", {\n        params: {\n          _id: this.diffId,\n          isManual: this.isManual,\n          isConfirm: this.isConfirm,\n        },\n      });\n    },\n\n    //video play & load & pause\n    playFunc() {\n      this.isCountTime = true;\n      console.log(\"playing\");\n    },\n    pauseFunc() {\n      this.isCountTime = false;\n      console.log(\"pasused\");\n      // your code\n    },\n    loaded() {\n      this.isCountTime = false;\n      console.log(\"waiting\");\n    },\n    startTime() {\n      this.isCountTime = true;\n      console.log(\"moving\");\n    },\n\n    updateStudyTime() {\n      let newdate = this.$moment(new Date()).format(\"YYYY/MM/DD HH:mm:ss\");\n      var timespan = this.timespan;\n  if(timespan>0){      \n   this.$axios.post(\"/score/updateStudyTime\", {\n        params: {\n          _id: this.userId,\n          listenTime: timespan,\n          recordTime: newdate,\n        },\n      });\n    }\n    },\n  },\n  //页面生成前要做的工作\n  created() {\n    window.addEventListener(\"beforeunload\", this.updateStudyTime);\n    //可以考虑加个动画，因为有较多数据要加载，不然会显得页面卡顿\n    this.diffId = this.$route.params.diffId;\n    this.username = sessionStorage.getItem(\"userName\");\n    this.$axios.get(this.api + \"/profile?name=\" + this.username).then((res) => {\n      this.userId = res.data[0]._id;\n      this.userStatus = res.data[0].status;\n    });\n    this.$axios\n      .post(this.api + \"/getVersions\", { params: { _id: this.diffId } })\n      .then((res) => {\n        this.versionsList = res.data; //获取每个人的版本\n      });\n    //渲染之前请求数据，判断是否有第一版本\n    this.$axios\n      .get(this.api + \"/currentTask?_id=\" + this.diffId)\n      .then((res) => {\n        var video_id = res.data[0].videoId; //对应视频的_id\n        this.userList = res.data[0].userList;\n        this.diffList = res.data[0].diffList;\n        this.publisher = res.data[0].publisher;\n        this.submitted = res.data[0].submitted;\n        this.publishTime = res.data[0].time;\n        this.taskTitle = res.data[0].title;\n        this.deadline = res.data[0].deadline;\n        this.taskLabels = res.data[0].label;\n        this.scoreList = res.data[0].scoreList;\n        this.techList = res.data[0].techList;\n        this.matchList = res.data[0].matchList;\n        this.averScores = res.data[0].averScores;\n        this.isManual = res.data[0].isManual;\n        this.isConfirm = res.data[0].isConfirm;\n        this.video_id = res.data[0].videoId; //对应视频的_id\n        this.authcode = res.data[0].authcode;\n        this.configuration = res.data[0].configuration;\n        console.log(\"lll\", this.submitted);\n\n        // let date = new Date();\n        // let newdate = date.toLocaleString(\"chinese\", {\n        //   hour12: false,\n        // });\n        let newdate = this.$moment(new Date()).format(\"YYYY/MM/DD HH:mm:ss\");\n        var isOut = this.compareDate(newdate, this.deadline);\n        console.log(\"isOut\", isOut);\n        if (this.userStatus == \"1\") {\n          this.isTeacher = true;\n        }\n        if (this.userStatus == \"0\") {\n          this.isTeacher = false;\n          if (isOut || this.scoreList.length > 0) {\n            this.isreadonly = false;\n          }\n        }\n\n        this.$axios\n          .get(this.api + \"/currentVideoPublisher?name=\" + this.publisher)\n          .then((res) => {\n            this.status = res.data[0].status;\n            if (this.status == \"1\") {\n              this.identity = \"Teacher\";\n            }\n          });\n        // console.log(this.userList);\n        //获取视频路径，从服务器获取\n        this.$axios\n          .get(this.api + \"/currentVideo?_id=\" + video_id)\n          .then((res) => {\n            this.fileName = res.data[0].fileName;\n            var filetype = this.fileName.split(\".\")[1];\n            for (var i = 0; i < this.videoType.length; i++) {\n              if (filetype == this.videoType[i]) {\n                this.isVideo = true;\n              }\n            }\n          });\n        //先判断是否有修改记录，再判断是否有第一版本\n        if (this.diffList.length == 0) {\n          this.$axios\n            .get(this.api + \"/allVersions?_id=\" + this.diffId)\n            .then((res) => {\n              if (res.data.length == 0) {\n                //当前无人提交版本，显示输入框\n                this.isversion1 = false;\n                this.loading = false;\n              } else {\n                this.isversion1 = true;\n                this.loading = false;\n                this.text_v1 = res.data[0].version;\n              }\n            });\n        } else {\n          //形成综合版本\n          this.createFinalVersion();\n          this.isversion1 = true;\n          this.isFinal = true;\n        }\n      });\n    // if (this.submitted.length == 0) {\n    //   this.isScoresList();\n    // }\n  },\n  updated() {\n    //判断是音频还是视频\n    this.decidePlayer();\n    let newdate = this.$moment(new Date()).format(\"YYYY/MM/DD HH:mm:ss\");\n    //(\"2021/02/06 00:00:00\", \"2021/02/05 00:00:00\" newdate, this.deadline)\n    var isDDL = this.compareDate(newdate, this.deadline);\n    if (\n      // this.submitted.length >= 1 &&\n      !this.isManual &&\n      (isDDL || this.isConfirm)\n    ) {\n      //如果为自动计算，过了ddl或已经确认过，则运行函数\n      this.isScoresList();\n      //自启动splitvideo\n      // this.splitVideo();\n    }\n  },\n  mounted() {\n    setInterval(() => {\n      if (this.isCountTime) {\n        this.timespan += 0.1;\n        // console.log(this.timespan);\n      }\n    }, 100);\n    //window.addEventListener('beforeunload', this.updateStudyTime)\n    // window.addEventListener(\"keypress\", this.startTime());\n  },\n  destroyed() {\n    window.removeEventListener(\"beforeunload\", this.updateStudyTime);\n    // window.removeEventListener(\"scroll\", this.setHeadPosition, true);\n  },\n};\n</script>\n\n<style>\n.con {\n  z-index: 11000;\n  width: 950px;\n  height: 600px;\n  background-color: white;\n  position: fixed;\n  top: 15%;\n  left: 20%;\n  position: fixed;\n  box-shadow: 0px 0px 5px gray;\n  border-radius: 5px;\n}\n/* 浮框底部距离 */\n.el-collapse-item__content {\n  padding-bottom: 0;\n}\n\n.eltable {\n  width: 100%;\n  font-size: 90%;\n}\n\n.eltable th {\n  padding: 4px 0 !important;\n}\n\n.eltable td {\n  padding: 4px 0 !important;\n}\n\n.badge {\n  font-size: 1em;\n  padding: 0.28em 0.22em;\n  font-weight: normal;\n  /* 字体可能得改改 */\n}\n.buttons {\n  position: fixed;\n  right: 0;\n  margin-right: 6px;\n  display: inline-block;\n  margin-top: 150px;\n  z-index: 99;\n}\n\n.el-header,\n.el-footer {\n  background-color: #b3c0d1;\n  color: #333;\n  line-height: 60px;\n}\n\n.edit {\n  background-color: lavender;\n}\n\nins {\n  color: green;\n  font-weight: bold;\n}\n\nsubins {\n  color: blue;\n}\n\ndel {\n  color: indianred;\n}\n\n.el-main {\n  background: #d3cce3;\n  background: -webkit-linear-gradient(to left, #fbe9fd 10%, #eee2ff 100%);\n  background: linear-gradient(to left, #fbe9fd 10%, #eee2ff 100%);\n  border-radius: 2em;\n}\n.edit-tip {\n  color: purple;\n  font-size: 20px;\n  word-wrap: break-word;\n  word-break: break-all;\n}\n\n#textDiv {\n  margin-top: 0;\n  padding: 1% 2%;\n  font-size: 20px;\n  background-color: white;\n  border-radius: 6px;\n  width: 100%;\n  height: 85%;\n  text-align: left;\n}\n\n#insertText {\n  text-decoration: none;\n  color: #21bf73;\n}\n\n#deleteText {\n  color: #ef6c57;\n  text-decoration: line-through #ea4c4c solid;\n}\n.box-card {\n  width: 1000px;\n  margin-top: 2%;\n}\n.active:hover {\n  color: rgb(0, 0, 95);\n  border-radius: 2px;\n  border-bottom: 1px solid black;\n}\n#wordOperate {\n  display: none;\n  width: 600px;\n  padding: 5px 5px;\n  border-radius: 5px;\n  transition-duration: 100ms;\n  line-height: 100%;\n  box-shadow: 0px 0px 7px rgb(143, 141, 141);\n  z-index: 10001;\n}\n\n/* 视频css */\n.video-container {\n  margin: 1.5% auto;\n  display: flex;\n  justify-content: center;\n}\n\n.video-left-box,\n.video-right-box {\n  margin: 0 1.5em;\n}\n\n.example-player {\n  position: relative;\n  width: 750px;\n  height: 450px;\n  background-color: #000;\n  font-weight: normal;\n}\n\n/* 音频盒子css */\n.audio-box {\n  width: 45em;\n}\n\n/* 原生audio css */\naudio {\n  margin-top: 2em;\n  width: 100%;\n  height: 7em;\n  border-radius: 10px;\n  box-shadow: 5px 5px 10px -4px #63645e;\n}\naudio::-webkit-media-controls-panel {\n  background-image: linear-gradient(to top, #a94eb8 0%, #ffd3f3 100%);\n  height: 100%;\n  padding: 0 3em;\n}\naudio::-webkit-media-controls-enclosure {\n  max-height: 100% !important;\n  border-radius: 10px !important;\n}\naudio::-webkit-media-controls-play-button {\n  background-color: white;\n  border-radius: 50%;\n  height: 32px;\n  margin-right: 1em;\n}\naudio::-webkit-media-controls-mute-button {\n  background-color: white;\n  border-radius: 50%;\n  height: 32px;\n  margin-top: 7.5px;\n}\naudio::-webkit-media-controls-current-time-display,\naudio::-webkit-media-controls-time-remaining-display {\n  color: #4a0e5c;\n  font-weight: bold;\n  font-size: large;\n}\n\n/* 音频插件css */\ndiv.audio-box > .vueAudioBetter {\n  overflow: hidden;\n  width: 500px;\n  margin: 0 auto;\n  background-color: #e7d9ea;\n  border-radius: 8px;\n  box-shadow: 5px 5px 10px -4px #63645e;\n  background-image: linear-gradient(to top, #9656a1 0%, #fbc2eb 100%);\n  color: #4a0e5c;\n}\n\n.iconfont {\n  color: #45046a !important;\n}\n\n.process {\n  background: #ffc3e7 !important;\n}\n\n.thunk > .block {\n  border: 3px solid #ffc3e7 !important;\n}\n\n/* 信息卡片css */\n.my-info-card.q-card.q-card--bordered.q-card--flat.no-shadow {\n  width: 18em;\n}\n.score-btn {\n  width: 100%;\n}\n/* 信息卡片发布者头像 */\ncanvas.publisher-avt {\n  width: 40px;\n  height: 40px;\n  margin: 5px 1px;\n}\n\n/* 视频快进快退css */\n#menu,\n.submit-btn,\n.edit-btn {\n  display: flex;\n  justify-content: center;\n}\n\n/* .el-row {\n  margin-bottom: 20px;\n} */\n.el-col {\n  border-radius: 4px;\n}\n.row-bg {\n  padding: 10px 0;\n  /* background-color: #f9fafc; */\n}\n.el-textarea {\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  vertical-align: baseline;\n  font-size: 16px;\n  line-height: 1.5;\n}\nmain#mainContent {\n  padding-bottom: 4%;\n}\n.q-item__section.column.q-item__section--main.justify-center {\n  flex-direction: column;\n}\n.aui_close {\n  width: 15px;\n  height: 15px;\n  line-height: 15px;\n  display: block;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  font-family: Helvetica, STHeiti;\n  _font-family: \"\\u9ed1\\u4f53\", \"Book Antiqua\", Palatino;\n  font-size: 18px;\n  border-radius: 20px;\n  background: #999;\n  color: #fff;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n  -moz-transition: linear 0.06s;\n  -webkit-transition: linear 0.06s;\n  transition: linear 0.06s;\n  padding: 0;\n  text-align: center;\n  text-decoration: none;\n  outline: none;\n  cursor: pointer;\n  z-index: 20;\n}\n.aui_close:hover {\n  width: 17px;\n  height: 17px;\n  line-height: 17px;\n  right: 9px;\n  top: 9px;\n  color: #fff;\n  box-shadow: 0 1px 3px rgba(209, 40, 42, 0.5);\n  background: #d1282a;\n  border-radius: 24px;\n  transition: all 0.2s ease-out;\n  text-decoration: none;\n  opacity: 0.8;\n}\n.aui_close1 {\n  width: 25px;\n  height: 25px;\n  line-height: 25px;\n  display: block;\n  position: absolute;\n  right: 19px;\n  top: 8px;\n  font-family: Helvetica, STHeiti;\n  _font-family: \"\\u9ed1\\u4f53\", \"Book Antiqua\", Palatino;\n  font-size: 20px;\n  border-radius: 20px;\n  background: #999;\n  color: #fff;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n  -moz-transition: linear 0.06s;\n  -webkit-transition: linear 0.06s;\n  transition: linear 0.06s;\n  padding: 0;\n  text-align: center;\n  text-decoration: none;\n  outline: none;\n  cursor: pointer;\n  z-index: 20;\n}\n.aui_close1:hover {\n  width: 27px;\n  height: 27px;\n  line-height: 27px;\n  right: 18px;\n  top: 7px;\n  color: #fff;\n  box-shadow: 0 1px 3px rgba(209, 40, 42, 0.5);\n  background: #d1282a;\n  border-radius: 24px;\n  transition: all 0.2s ease-out;\n  text-decoration: none;\n  opacity: 0.8;\n}\n</style>\n"],"sourceRoot":"src/components"}]}
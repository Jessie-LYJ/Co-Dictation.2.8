{"remainingRequest":"E:\\FFFF\\codictation\\codictation\\node_modules\\babel-loader\\lib\\index.js!E:\\FFFF\\codictation\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js!E:\\FFFF\\codictation\\codictation\\node_modules\\quasar\\src\\components\\table\\table-column-selection.js","dependencies":[{"path":"E:\\FFFF\\codictation\\codictation\\node_modules\\quasar\\src\\components\\table\\table-column-selection.js","mtime":499162500000},{"path":"E:\\FFFF\\codictation\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FFFF\\codictation\\codictation\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\FFFF\\codictation\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRTovRkZGRi9jb2RpY3RhdGlvbi9jb2RpY3RhdGlvbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCB7IGlzTnVtYmVyIH0gZnJvbSAnLi4vLi4vdXRpbHMvaXMuanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIHZpc2libGVDb2x1bW5zOiBBcnJheQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNvbExpc3Q6IGZ1bmN0aW9uIGNvbExpc3QoKSB7CiAgICAgIGlmICh0aGlzLmNvbHVtbnMgIT09IHZvaWQgMCkgewogICAgICAgIHJldHVybiB0aGlzLmNvbHVtbnM7CiAgICAgIH0gLy8gd2UgaW5mZXIgY29sdW1ucyBmcm9tIGZpcnN0IHJvdwoKCiAgICAgIHZhciByb3cgPSB0aGlzLmRhdGFbMF07CiAgICAgIHJldHVybiByb3cgIT09IHZvaWQgMCA/IE9iamVjdC5rZXlzKHJvdykubWFwKGZ1bmN0aW9uIChuYW1lKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICBsYWJlbDogbmFtZS50b1VwcGVyQ2FzZSgpLAogICAgICAgICAgZmllbGQ6IG5hbWUsCiAgICAgICAgICBhbGlnbjogaXNOdW1iZXIocm93W25hbWVdKSA/ICdyaWdodCcgOiAnbGVmdCcsCiAgICAgICAgICBzb3J0YWJsZTogdHJ1ZQogICAgICAgIH07CiAgICAgIH0pIDogW107CiAgICB9LAogICAgY29tcHV0ZWRDb2xzOiBmdW5jdGlvbiBjb21wdXRlZENvbHMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgX3RoaXMkY29tcHV0ZWRQYWdpbmF0ID0gdGhpcy5jb21wdXRlZFBhZ2luYXRpb24sCiAgICAgICAgICBzb3J0QnkgPSBfdGhpcyRjb21wdXRlZFBhZ2luYXQuc29ydEJ5LAogICAgICAgICAgZGVzY2VuZGluZyA9IF90aGlzJGNvbXB1dGVkUGFnaW5hdC5kZXNjZW5kaW5nOwogICAgICB2YXIgY29scyA9IHRoaXMudmlzaWJsZUNvbHVtbnMgIT09IHZvaWQgMCA/IHRoaXMuY29sTGlzdC5maWx0ZXIoZnVuY3Rpb24gKGNvbCkgewogICAgICAgIHJldHVybiBjb2wucmVxdWlyZWQgPT09IHRydWUgfHwgX3RoaXMudmlzaWJsZUNvbHVtbnMuaW5jbHVkZXMoY29sLm5hbWUpID09PSB0cnVlOwogICAgICB9KSA6IHRoaXMuY29sTGlzdDsKICAgICAgcmV0dXJuIGNvbHMubWFwKGZ1bmN0aW9uIChjb2wpIHsKICAgICAgICB2YXIgYWxpZ24gPSBjb2wuYWxpZ24gfHwgJ3JpZ2h0JzsKICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBjb2wpLCB7fSwgewogICAgICAgICAgYWxpZ246IGFsaWduLAogICAgICAgICAgX19pY29uQ2xhc3M6ICJxLXRhYmxlX19zb3J0LWljb24gcS10YWJsZV9fc29ydC1pY29uLS0iLmNvbmNhdChhbGlnbiksCiAgICAgICAgICBfX3RoQ2xhc3M6ICJ0ZXh0LSIuY29uY2F0KGFsaWduKSArIChjb2wuaGVhZGVyQ2xhc3NlcyAhPT0gdm9pZCAwID8gJyAnICsgY29sLmhlYWRlckNsYXNzZXMgOiAnJykgKyAoY29sLnNvcnRhYmxlID09PSB0cnVlID8gJyBzb3J0YWJsZScgOiAnJykgKyAoY29sLm5hbWUgPT09IHNvcnRCeSA/ICIgc29ydGVkICIuY29uY2F0KGRlc2NlbmRpbmcgPT09IHRydWUgPyAnc29ydC1kZXNjJyA6ICcnKSA6ICcnKSwKICAgICAgICAgIF9fdGRDbGFzczogInRleHQtIi5jb25jYXQoYWxpZ24pLmNvbmNhdChjb2wuY2xhc3NlcyAhPT0gdm9pZCAwID8gJyAnICsgY29sLmNsYXNzZXMgOiAnJykKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgY29tcHV0ZWRDb2xzTWFwOiBmdW5jdGlvbiBjb21wdXRlZENvbHNNYXAoKSB7CiAgICAgIHZhciBuYW1lcyA9IHt9OwogICAgICB0aGlzLmNvbXB1dGVkQ29scy5mb3JFYWNoKGZ1bmN0aW9uIChjb2wpIHsKICAgICAgICBuYW1lc1tjb2wubmFtZV0gPSBjb2w7CiAgICAgIH0pOwogICAgICByZXR1cm4gbmFtZXM7CiAgICB9LAogICAgY29tcHV0ZWRDb2xzcGFuOiBmdW5jdGlvbiBjb21wdXRlZENvbHNwYW4oKSB7CiAgICAgIHJldHVybiB0aGlzLnRhYmxlQ29sc3BhbiAhPT0gdm9pZCAwID8gdGhpcy50YWJsZUNvbHNwYW4gOiB0aGlzLmNvbXB1dGVkQ29scy5sZW5ndGggKyAodGhpcy5oYXNTZWxlY3Rpb25Nb2RlID09PSB0cnVlID8gMSA6IDApOwogICAgfQogIH0KfTs="},{"version":3,"sources":["E:/FFFF/codictation/codictation/node_modules/quasar/src/components/table/table-column-selection.js"],"names":["isNumber","props","visibleColumns","Array","computed","colList","columns","row","data","Object","keys","map","name","label","toUpperCase","field","align","sortable","computedCols","computedPagination","sortBy","descending","cols","filter","col","required","includes","__iconClass","__thClass","headerClasses","__tdClass","classes","computedColsMap","names","forEach","computedColspan","tableColspan","length","hasSelectionMode"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,mBAAzB;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,cAAc,EAAEC;AADX,GADM;AAKbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OADQ,qBACG;AACT,UAAI,KAAKC,OAAL,KAAiB,KAAK,CAA1B,EAA6B;AAC3B,eAAO,KAAKA,OAAZ;AACD,OAHQ,CAKT;;;AACA,UAAMC,GAAG,GAAG,KAAKC,IAAL,CAAU,CAAV,CAAZ;AAEA,aAAOD,GAAG,KAAK,KAAK,CAAb,GACHE,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eAAK;AAC9BA,UAAAA,IAAI,EAAJA,IAD8B;AAE9BC,UAAAA,KAAK,EAAED,IAAI,CAACE,WAAL,EAFuB;AAG9BC,UAAAA,KAAK,EAAEH,IAHuB;AAI9BI,UAAAA,KAAK,EAAEhB,QAAQ,CAACO,GAAG,CAACK,IAAD,CAAJ,CAAR,GAAsB,OAAtB,GAAgC,MAJT;AAK9BK,UAAAA,QAAQ,EAAE;AALoB,SAAL;AAAA,OAAzB,CADG,GAQH,EARJ;AASD,KAlBO;AAoBRC,IAAAA,YApBQ,0BAoBQ;AAAA;;AAAA,kCACiB,KAAKC,kBADtB;AAAA,UACNC,MADM,yBACNA,MADM;AAAA,UACEC,UADF,yBACEA,UADF;AAGd,UAAMC,IAAI,GAAG,KAAKpB,cAAL,KAAwB,KAAK,CAA7B,GACT,KAAKG,OAAL,CAAakB,MAAb,CAAoB,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,QAAJ,KAAiB,IAAjB,IAAyB,KAAI,CAACvB,cAAL,CAAoBwB,QAApB,CAA6BF,GAAG,CAACZ,IAAjC,MAA2C,IAAxE;AAAA,OAAvB,CADS,GAET,KAAKP,OAFT;AAIA,aAAOiB,IAAI,CAACX,GAAL,CAAS,UAAAa,GAAG,EAAI;AACrB,YAAMR,KAAK,GAAGQ,GAAG,CAACR,KAAJ,IAAa,OAA3B;AAEA,+CACKQ,GADL;AAEER,UAAAA,KAAK,EAALA,KAFF;AAGEW,UAAAA,WAAW,mDAA4CX,KAA5C,CAHb;AAIEY,UAAAA,SAAS,EAAE,eAAQZ,KAAR,KACRQ,GAAG,CAACK,aAAJ,KAAsB,KAAK,CAA3B,GAA+B,MAAML,GAAG,CAACK,aAAzC,GAAyD,EADjD,KAERL,GAAG,CAACP,QAAJ,KAAiB,IAAjB,GAAwB,WAAxB,GAAsC,EAF9B,KAGRO,GAAG,CAACZ,IAAJ,KAAaQ,MAAb,qBAAiCC,UAAU,KAAK,IAAf,GAAsB,WAAtB,GAAoC,EAArE,IAA4E,EAHpE,CAJb;AAQES,UAAAA,SAAS,iBAAUd,KAAV,SAAkBQ,GAAG,CAACO,OAAJ,KAAgB,KAAK,CAArB,GAAyB,MAAMP,GAAG,CAACO,OAAnC,GAA6C,EAA/D;AARX;AAUD,OAbM,CAAP;AAcD,KAzCO;AA2CRC,IAAAA,eA3CQ,6BA2CW;AACjB,UAAMC,KAAK,GAAG,EAAd;AACA,WAAKf,YAAL,CAAkBgB,OAAlB,CAA0B,UAAAV,GAAG,EAAI;AAC/BS,QAAAA,KAAK,CAACT,GAAG,CAACZ,IAAL,CAAL,GAAkBY,GAAlB;AACD,OAFD;AAGA,aAAOS,KAAP;AACD,KAjDO;AAmDRE,IAAAA,eAnDQ,6BAmDW;AACjB,aAAO,KAAKC,YAAL,KAAsB,KAAK,CAA3B,GACH,KAAKA,YADF,GAEH,KAAKlB,YAAL,CAAkBmB,MAAlB,IAA4B,KAAKC,gBAAL,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAAjE,CAFJ;AAGD;AAvDO;AALG,CAAf","sourcesContent":["import { isNumber } from '../../utils/is.js'\n\nexport default {\n  props: {\n    visibleColumns: Array\n  },\n\n  computed: {\n    colList () {\n      if (this.columns !== void 0) {\n        return this.columns\n      }\n\n      // we infer columns from first row\n      const row = this.data[0]\n\n      return row !== void 0\n        ? Object.keys(row).map(name => ({\n          name,\n          label: name.toUpperCase(),\n          field: name,\n          align: isNumber(row[name]) ? 'right' : 'left',\n          sortable: true\n        }))\n        : []\n    },\n\n    computedCols () {\n      const { sortBy, descending } = this.computedPagination\n\n      const cols = this.visibleColumns !== void 0\n        ? this.colList.filter(col => col.required === true || this.visibleColumns.includes(col.name) === true)\n        : this.colList\n\n      return cols.map(col => {\n        const align = col.align || 'right'\n\n        return {\n          ...col,\n          align,\n          __iconClass: `q-table__sort-icon q-table__sort-icon--${align}`,\n          __thClass: `text-${align}` +\n            (col.headerClasses !== void 0 ? ' ' + col.headerClasses : '') +\n            (col.sortable === true ? ' sortable' : '') +\n            (col.name === sortBy ? ` sorted ${descending === true ? 'sort-desc' : ''}` : ''),\n          __tdClass: `text-${align}${col.classes !== void 0 ? ' ' + col.classes : ''}`\n        }\n      })\n    },\n\n    computedColsMap () {\n      const names = {}\n      this.computedCols.forEach(col => {\n        names[col.name] = col\n      })\n      return names\n    },\n\n    computedColspan () {\n      return this.tableColspan !== void 0\n        ? this.tableColspan\n        : this.computedCols.length + (this.hasSelectionMode === true ? 1 : 0)\n    }\n  }\n}\n"]}]}
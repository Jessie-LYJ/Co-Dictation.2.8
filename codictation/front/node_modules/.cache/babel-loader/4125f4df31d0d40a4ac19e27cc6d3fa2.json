{"remainingRequest":"E:\\FFFF\\codictation\\codictation\\node_modules\\babel-loader\\lib\\index.js!E:\\FFFF\\codictation\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js!E:\\FFFF\\codictation\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js?kebab!E:\\FFFF\\codictation\\codictation\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-1!E:\\FFFF\\codictation\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\FFFF\\codictation\\codictation\\src\\components\\back\\tag\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\FFFF\\codictation\\codictation\\src\\components\\back\\tag\\index.vue","mtime":1614180887773},{"path":"E:\\FFFF\\codictation\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FFFF\\codictation\\codictation\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\FFFF\\codictation\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js","mtime":499162500000},{"path":"E:\\FFFF\\codictation\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"E:\\FFFF\\codictation\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FFFF\\codictation\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <div class=\"filter-container\" style=\"margin: 0 0 10px 0\">\r\n      <el-input\r\n        v-model=\"Qlist.owner\"\r\n        placeholder=\"创建人\"\r\n        style=\"width: 200px; margin-right: 5px\"\r\n        class=\"filter-item\"\r\n        @keyup.enter.native=\"handleFilter\"\r\n      />\r\n      <el-input\r\n        v-model=\"Qlist.tagName\"\r\n        placeholder=\"标签名称\"\r\n        style=\"width: 200px; margin-right: 7px\"\r\n        class=\"filter-item\"\r\n        @keyup.enter.native=\"handleFilter\"\r\n      />\r\n      <el-button\r\n        class=\"filter-item\"\r\n        type=\"primary\"\r\n        icon=\"el-icon-search\"\r\n        @click=\"handleFilter\"\r\n      >\r\n        搜索\r\n      </el-button>\r\n      <el-button\r\n        v-if=\"showBack\"\r\n        class=\"filter-item\"\r\n        type=\"primary\"\r\n        icon=\"el-icon-search\"\r\n        @click=\"closeFilter\"\r\n      >\r\n        返回\r\n      </el-button>\r\n      <el-button\r\n        class=\"filter-item\"\r\n        style=\"margin-left: 10px\"\r\n        type=\"primary\"\r\n        icon=\"el-icon-edit\"\r\n        @click=\"handleCreate\"\r\n      >\r\n        添加\r\n      </el-button>\r\n    </div>\r\n\r\n    <el-table\r\n      v-loading=\"loading\"\r\n      element-loading-text=\"拼命加载中\"\r\n      element-loading-spinner=\"el-icon-loading\"\r\n      element-loading-background=\"rgba(0, 0, 0, 0.8)\"\r\n      :data=\"users\"\r\n      style=\"width: 100%\"\r\n      border\r\n      fit\r\n      highlight-current-row\r\n      @sort-change=\"sortChange\"\r\n    >\r\n      <el-table-column type=\"index\" label=\"序号\"> </el-table-column>\r\n      <el-table-column prop=\"_id\" sortable=\"custom\" label=\"标签_id\" />\r\n      <el-table-column\r\n        label=\"用户列表\"\r\n        align=\"center\"\r\n        class-name=\"small-padding fixed-width\"\r\n      >\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"\r\n              drawer = true;\r\n              findUserList(scope.$index, scope.row);\r\n            \"\r\n            >详情\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"owner\" sortable=\"custom\" label=\"创建人\" />\r\n      <el-table-column prop=\"tagName\" sortable=\"custom\" label=\"标签名称\" />\r\n      <el-table-column\r\n        label=\"操作\"\r\n        align=\"center\"\r\n        width=\"230\"\r\n        class-name=\"small-padding fixed-width\"\r\n      >\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"handleEdit(scope.$index, scope.row)\"\r\n            >编辑\r\n          </el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"danger\"\r\n            @click=\"handleDelete(scope.$index, scope.row)\"\r\n            >删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <br />\r\n    <el-pagination\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"\r\n      :current-page=\"Qlist.pagenum\"\r\n      :page-sizes=\"[10, 20, 30, 50]\"\r\n      :page-size=\"Qlist.pagesize\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      :total=\"total\"\r\n    >\r\n    </el-pagination>\r\n\r\n    <!-- 抽屉+树状展示用户列表 -->\r\n    <el-drawer\r\n      title=\"用户列表\"\r\n      :visible.sync=\"drawer\"\r\n      direction=\"rtl\"\r\n      :modal-append-to-body=\"false\"\r\n      style=\"position: absolute\"\r\n    >\r\n      <el-tree\r\n        class=\"treeitems\"\r\n        :data=\"userList\"\r\n        :props=\"defaultProps\"\r\n        @node-click=\"handleNodeClick\"\r\n        ref=\"tree\"\r\n      >\r\n        <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\r\n          <span>{{ node.label }}</span>\r\n          <span class=\"fr\" style=\"position: absolute; right: 10%\">\r\n            <el-button type=\"text\" size=\"mini\" @click=\"() => edit(node, data)\">\r\n              编辑\r\n            </el-button>\r\n            <el-button\r\n              type=\"text\"\r\n              size=\"mini\"\r\n              v-if=\"data.children\"\r\n              @click=\"() => add(node, data)\"\r\n            >\r\n              新增\r\n            </el-button>\r\n            <el-button\r\n              class=\"fontRed\"\r\n              v-if=\"data.isSys !== 1\"\r\n              type=\"text\"\r\n              size=\"mini\"\r\n              @click=\"() => del(node, data)\"\r\n            >\r\n              删除\r\n            </el-button>\r\n          </span>\r\n        </span>\r\n      </el-tree>\r\n\r\n      <el-scrollbar></el-scrollbar>\r\n    </el-drawer>\r\n\r\n    <el-dialog\r\n      :title=\"dialogTitle\"\r\n      :visible.sync=\"dialogVisible\"\r\n      width=\"30%\"\r\n      :modal-append-to-body=\"false\"\r\n    >\r\n      <el-input v-model=\"msg\" placeholder=\"请输入内容\"></el-input>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button\r\n          @click=\"\r\n            dialogVisible = false;\r\n            msg = '';\r\n          \"\r\n          >取 消</el-button\r\n        >\r\n        <el-button type=\"primary\" @click=\"onConfirm()\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst _ = require(\"loadsh\");\r\n\r\nexport default {\r\n  name: \"tag\",\r\n  data() {\r\n    return {\r\n      api: \"/tag\",\r\n      totalData: [],\r\n      users: {},\r\n      Qlist: {\r\n        pagenum: 1, //当前页数\r\n        pagesize: 20,\r\n        owner: \"\",\r\n        tagName: \"\",\r\n      },\r\n      total: \"\",\r\n      showBack: false,\r\n      drawer: false,\r\n      userList: [],\r\n      defaultProps: {\r\n        children: \"children\",\r\n        label: \"label\",\r\n        isLeaf: \"leaf\",\r\n      },\r\n      loading: true,\r\n      dialogVisible: false,\r\n      dialogTitle: \"\",\r\n      msg: \"\",\r\n      treeNode: [],\r\n      treeData: [],\r\n      _id: \"\",\r\n      listData: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.findUser();\r\n  },\r\n  methods: {\r\n    findUser() {\r\n      this.$axios.post(this.api + \"/find\").then((res) => {\r\n        this.users = _.chunk(res.data, this.Qlist.pagesize)[\r\n          this.Qlist.pagenum - 1\r\n        ];\r\n        this.totalData = res.data;\r\n        this.total = res.data.length;\r\n        this.loading = false;\r\n      });\r\n    }, //获取初始数据\r\n    sortChange(data) {\r\n      const { prop, order } = data;\r\n      this.$axios.post(this.api + \"/sort\", { prop, order }).then((res) => {\r\n        console.log(\"res:\", res);\r\n        this.users = res.data;\r\n      });\r\n    }, //对各列进行排序处理\r\n    handleEdit(index, item) {\r\n      this.$router.push({ path: \"/tagEditor\", query: { _id: item._id } });\r\n    }, //编辑\r\n    handleDelete(index, item) {\r\n      this.$axios.post(this.api + \"/delete\", item).then((res) => {\r\n        console.log(\"res:\", res);\r\n        this.findUser();\r\n      });\r\n    }, //删除\r\n    handleCreate() {\r\n      this.$router.push(\"/tagEditor\");\r\n    }, //创建\r\n    //筛选部分\r\n    handleFilter() {\r\n      if (this.Qlist.owner == \"\" && this.Qlist.tagName == \"\") {\r\n        this.$message.error(\"请输入查询信息\");\r\n      } else {\r\n        this.$axios.post(this.api + \"/filter\", this.Qlist).then((res) => {\r\n          console.log(\"res:\", res);\r\n          this.users = res.data;\r\n          this.showBack = true;\r\n        });\r\n      }\r\n    }, //筛选数据\r\n    closeFilter() {\r\n      this.findUser();\r\n      this.Qlist = {\r\n        pagenum: 1, //当前页数\r\n        pagesize: 20,\r\n        owner: \"\",\r\n        tagName: \"\",\r\n      };\r\n      this.showBack = false;\r\n    }, //关闭筛选\r\n    // 分页部分\r\n    handleSizeChange(val) {\r\n      this.Qlist.pagesize = val;\r\n      this.users = _.chunk(this.totalData, this.Qlist.pagesize)[\r\n        this.Qlist.pagenum - 1\r\n      ];\r\n    }, // 每页查看条数变化\r\n    handleCurrentChange(val) {\r\n      this.Qlist.pagenum = val;\r\n      this.users = _.chunk(this.totalData, this.Qlist.pagesize)[\r\n        this.Qlist.pagenum - 1\r\n      ];\r\n    }, // 当前页码变化\r\n\r\n    // 树形控件\r\n    findUserList(index, item) {\r\n      var userList = item.userList;\r\n      this.userList = [];\r\n\r\n      this._id = item._id;\r\n      this.listData = userList;\r\n\r\n      if (userList.length == 0) {\r\n        this.userList.push({ label: \"暂无数据\" });\r\n      } else {\r\n        for (var i = 0; i < userList.length; i++) {\r\n          this.userList.push({\r\n            label: \"学生id: \" + userList[i].stuid,\r\n            children: [\r\n              {\r\n                label: \"用户名: \" + userList[i].name,\r\n              },\r\n              { label: \"姓名: \" + userList[i].stuname },\r\n              {\r\n                label: \"密码: \" + userList[i].password,\r\n              },\r\n            ],\r\n          });\r\n        }\r\n      }\r\n    },\r\n    handleNodeClick(data) {\r\n      // console.log(data);\r\n      // // this.treeClickCount++;\r\n      // // if (this.treeClickCount >= 2) {\r\n      // //   return;\r\n      // // }\r\n      // // window.setTimeout(() => {\r\n      // //   if (this.treeClickCount == 1) {\r\n      // //     this.treeClickCount = 0;\r\n      // //     console.log(data);\r\n      // //   } else if (this.treeClickCount > 1) {\r\n      // //     this.treeClickCount = 0;\r\n      // //     // data.label += \"修改成功\"\r\n      // //     var a = Number(data.$treeNodeId);\r\n      // //     console.log(\"11\", a, a + 1);\r\n      // //   }\r\n      // // }, 300);\r\n    },\r\n\r\n    onConfirm() {\r\n      var index = this.treeNode.parent.data.findIndex(\r\n        (item) => item.label == this.treeData.label\r\n      );\r\n      if (this.dialogTitle == \"编辑\") {\r\n        this.treeData.label = this.msg;\r\n      } else if (this.dialogTitle == \"增加\") {\r\n        var arr = {\r\n          label: this.msg,\r\n          children: [\r\n            {\r\n              label: \"用户名: \",\r\n            },\r\n            { label: \"姓名: \" },\r\n            {\r\n              label: \"密码: \",\r\n            },\r\n          ],\r\n        };\r\n        this.userList.splice(index + 1, 0, arr);\r\n      }\r\n      this.dialogVisible = false;\r\n      this.msg = \"\";\r\n      // this.treeToList()\r\n      // this.updateList()\r\n    },\r\n\r\n    edit(node, data) {\r\n      this.dialogVisible = true;\r\n      this.dialogTitle = \"编辑\";\r\n      this.msg = data.label;\r\n      this.treeNode = node;\r\n      this.treeData = data;\r\n    },\r\n\r\n    add(node, data) {\r\n      this.msg = \"学生id: \";\r\n      this.dialogVisible = true;\r\n      this.dialogTitle = \"增加\";\r\n      this.treeData = data;\r\n      this.treeNode = node;\r\n    },\r\n\r\n    del(node, data) {\r\n      var index = node.parent.data.findIndex(\r\n        (item) => item.label == data.label\r\n      );\r\n      this.userList.splice(index, 1);\r\n      // this.treeToList()\r\n      // this.updateList()\r\n    },\r\n\r\n    updateListData(data,index,dialogTitle) {\r\n      var index = this.treeToList.fin\r\n      var userList = item.userList;\r\n      this.userList = [];\r\n      this._id = item._id;\r\n      if (userList.length == 0) {\r\n        this.userList.push({ label: \"暂无数据\" });\r\n      } else {\r\n        for (var i = 0; i < userList.length; i++) {\r\n          this.userList.push({\r\n            label: \"学生id: \" + userList[i].stuid,\r\n            children: [\r\n              {\r\n                label: \"用户名: \" + userList[i].name,\r\n              },\r\n              { label: \"姓名: \" + userList[i].stuname },\r\n              {\r\n                label: \"密码: \" + userList[i].password,\r\n              },\r\n            ],\r\n          });\r\n        }\r\n      }\r\n\r\n      // var newItem = {\r\n      //   stuid:\r\n      //   name:\r\n      //   stuname:\r\n      //   password:\r\n      // }\r\n      // if(dialogTitle == \"编辑\"){\r\n\r\n      // }\r\n    },\r\n\r\n    updateList() {\r\n      this.$axios.post(this.api + \"/updateList\", {\r\n        params: {\r\n          _id: this._id,\r\n          userList: this.userList,\r\n        },\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.el-drawer.rtl {\r\n  overflow: scroll;\r\n}\r\n\r\nel-button {\r\n  margin: 0, 5px;\r\n}\r\n/* .dashboard-container {\r\n\r\n} */\r\n</style>\r\n"],"sourceRoot":"src/components/back/tag"}]}
{"remainingRequest":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\src\\components\\back\\video\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\src\\components\\back\\video\\index.vue","mtime":1613994755593},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\codictation\\collection\\final project\\codictation\\codictation2.0\\codictation.2.2\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpjb25zdCBfID0gcmVxdWlyZSgibG9hZHNoIik7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogInZpZGVvIiwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgYXBpOiAiL3ZpZGVvIiwNCiAgICAgIHVzZXJzOiB7fSwNCiAgICAgIHRvdGFsRGF0YTogW10sDQogICAgICBRbGlzdDogew0KICAgICAgICBwYWdlbnVtOiAxLCAvL+W9k+WJjemhteaVsA0KICAgICAgICBwYWdlc2l6ZTogMjAsDQogICAgICAgIHRpdGxlOiAiIiwNCiAgICAgICAgbGFiZWw6ICIiLA0KICAgICAgfSwNCiAgICAgIHRvdGFsOiAiIiwNCiAgICAgIHNob3dCYWNrOiBmYWxzZSwNCiAgICAgIGxvYWRpbmc6IHRydWUsDQogICAgfTsNCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICB0aGlzLmZpbmRVc2VyKCk7DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBmaW5kVXNlcigpIHsNCiAgICAgIHRoaXMuJGF4aW9zLnBvc3QodGhpcy5hcGkgKyAiL2ZpbmQiKS50aGVuKChyZXMpID0+IHsNCiAgICAgICAgdGhpcy51c2VycyA9IF8uY2h1bmsocmVzLmRhdGEsIHRoaXMuUWxpc3QucGFnZXNpemUpWw0KICAgICAgICAgIHRoaXMuUWxpc3QucGFnZW51bSAtIDENCiAgICAgICAgXTsNCiAgICAgICAgdGhpcy50b3RhbERhdGEgPSByZXMuZGF0YTsNCiAgICAgICAgdGhpcy50b3RhbCA9IHJlcy5kYXRhLmxlbmd0aDsNCiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7DQogICAgICB9KTsNCiAgICB9LCAvL+iOt+WPluWIneWni+aVsOaNrg0KICAgIHNvcnRDaGFuZ2UoZGF0YSkgew0KICAgICAgY29uc3QgeyBwcm9wLCBvcmRlciB9ID0gZGF0YTsNCiAgICAgIHRoaXMuJGF4aW9zLnBvc3QodGhpcy5hcGkgKyAiL3NvcnQiLCB7IHByb3AsIG9yZGVyIH0pLnRoZW4oKHJlcykgPT4gew0KICAgICAgICBjb25zb2xlLmxvZygicmVzOiIsIHJlcyk7DQogICAgICAgIHRoaXMudXNlcnMgPSByZXMuZGF0YTsNCiAgICAgIH0pOw0KICAgIH0sIC8v5a+55ZCE5YiX6L+b6KGM5o6S5bqP5aSE55CGDQogICAgaGFuZGxlRWRpdChpbmRleCwgaXRlbSkgew0KICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBwYXRoOiAiL3ZpZGVvRWRpdG9yIiwgcXVlcnk6IHsgX2lkOiBpdGVtLl9pZCB9IH0pOw0KICAgIH0sIC8v57yW6L6RDQogICAgaGFuZGxlRGVsZXRlKGluZGV4LCBpdGVtKSB7DQogICAgICB0aGlzLiRheGlvcy5wb3N0KHRoaXMuYXBpICsgIi9kZWxldGUiLCBpdGVtKS50aGVuKChyZXMpID0+IHsNCiAgICAgICAgY29uc29sZS5sb2coInJlczoiLCByZXMpOw0KICAgICAgICB0aGlzLmZpbmRVc2VyKCk7DQogICAgICB9KTsNCiAgICB9LCAvL+WIoOmZpA0KICAgIGhhbmRsZUNyZWF0ZSgpIHsNCiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvdmlkZW9FZGl0b3IiKTsNCiAgICB9LCAvL+WIm+W7ug0KICAgIC8v562b6YCJ6YOo5YiGDQogICAgaGFuZGxlRmlsdGVyKCkgew0KICAgICAgaWYgKHRoaXMuUWxpc3QudGl0bGUgPT0gIiIgJiYgdGhpcy5RbGlzdC5sYWJlbCA9PSAiIikgew0KICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCLor7fovpPlhaXmn6Xor6Lkv6Hmga8iKTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuJGF4aW9zLnBvc3QodGhpcy5hcGkgKyAiL2ZpbHRlciIsIHRoaXMuUWxpc3QpLnRoZW4oKHJlcykgPT4gew0KICAgICAgICAgIGNvbnNvbGUubG9nKCJyZXM6IiwgcmVzKTsNCiAgICAgICAgICB0aGlzLnVzZXJzID0gcmVzLmRhdGE7DQogICAgICAgICAgdGhpcy5zaG93QmFjayA9IHRydWU7DQogICAgICAgIH0pOw0KICAgICAgfQ0KICAgIH0sIC8v562b6YCJ5pWw5o2uDQogICAgY2xvc2VGaWx0ZXIoKSB7DQogICAgICB0aGlzLmZpbmRVc2VyKCk7DQogICAgICB0aGlzLlFsaXN0ID0gew0KICAgICAgICBwYWdlbnVtOiAxLCAvL+W9k+WJjemhteaVsA0KICAgICAgICBwYWdlc2l6ZTogMjAsDQogICAgICAgIHRpdGxlOiAiIiwNCiAgICAgICAgbGFiZWw6ICIiLA0KICAgICAgfTsNCiAgICAgIHRoaXMuc2hvd0JhY2sgPSBmYWxzZTsNCiAgICB9LCAvL+WFs+mXreetm+mAiQ0KICAgIC8vIOWIhumhtemDqOWIhg0KICAgIGhhbmRsZVNpemVDaGFuZ2UodmFsKSB7DQogICAgICB0aGlzLlFsaXN0LnBhZ2VzaXplID0gdmFsOw0KICAgICAgdGhpcy51c2VycyA9IF8uY2h1bmsodGhpcy50b3RhbERhdGEsIHRoaXMuUWxpc3QucGFnZXNpemUpWw0KICAgICAgICB0aGlzLlFsaXN0LnBhZ2VudW0gLSAxDQogICAgICBdOw0KICAgIH0sIC8vIOavj+mhteafpeeci+adoeaVsOWPmOWMlg0KICAgIGhhbmRsZUN1cnJlbnRDaGFuZ2UodmFsKSB7DQogICAgICB0aGlzLlFsaXN0LnBhZ2VudW0gPSB2YWw7DQogICAgICB0aGlzLnVzZXJzID0gXy5jaHVuayh0aGlzLnRvdGFsRGF0YSwgdGhpcy5RbGlzdC5wYWdlc2l6ZSlbDQogICAgICAgIHRoaXMuUWxpc3QucGFnZW51bSAtIDENCiAgICAgIF07DQogICAgfSwgLy8g5b2T5YmN6aG156CB5Y+Y5YyWDQogIH0sDQp9Ow0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/back/video","sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <div class=\"filter-container\" style=\"margin: 0 0 10px 0\">\r\n      <el-input\r\n        v-model=\"Qlist.title\"\r\n        placeholder=\"标题\"\r\n        style=\"width: 200px; margin-right: 5px\"\r\n        class=\"filter-item\"\r\n        @keyup.enter.native=\"handleFilter\"\r\n      />\r\n      <el-input\r\n        v-model=\"Qlist.label\"\r\n        placeholder=\"标签\"\r\n        style=\"width: 200px; margin-right: 7px\"\r\n        class=\"filter-item\"\r\n        @keyup.enter.native=\"handleFilter\"\r\n      />\r\n      <el-button\r\n        class=\"filter-item\"\r\n        type=\"primary\"\r\n        icon=\"el-icon-search\"\r\n        @click=\"handleFilter\"\r\n      >\r\n        搜索\r\n      </el-button>\r\n      <el-button\r\n        v-if=\"showBack\"\r\n        class=\"filter-item\"\r\n        type=\"primary\"\r\n        icon=\"el-icon-search\"\r\n        @click=\"closeFilter\"\r\n      >\r\n        返回\r\n      </el-button>\r\n      <el-button\r\n        class=\"filter-item\"\r\n        style=\"margin-left: 10px\"\r\n        type=\"primary\"\r\n        icon=\"el-icon-edit\"\r\n        @click=\"handleCreate\"\r\n      >\r\n        添加\r\n      </el-button>\r\n    </div>\r\n\r\n    <el-table\r\n      v-loading=\"loading\"\r\n      element-loading-text=\"拼命加载中\"\r\n      element-loading-spinner=\"el-icon-loading\"\r\n      element-loading-background=\"rgba(0, 0, 0, 0.8)\"\r\n      :data=\"users\"\r\n      style=\"width: 100%\"\r\n      border\r\n      fit\r\n      highlight-current-row\r\n      @sort-change=\"sortChange\"\r\n    >\r\n      <el-table-column type=\"index\" label=\"序号\"> </el-table-column>\r\n      <el-table-column prop=\"_id\" sortable=\"custom\" label=\"视频_id\" />\r\n      <el-table-column prop=\"title\" sortable=\"custom\" label=\"标题\" />\r\n      <el-table-column prop=\"fileName\" sortable=\"custom\" label=\"视频文件名\" />\r\n      <el-table-column prop=\"path\" label=\"视频储存路径\" />\r\n      <el-table-column prop=\"label\" sortable=\"custom\" label=\"标签\" />\r\n      <el-table-column\r\n        label=\"操作\"\r\n        align=\"center\"\r\n        width=\"230\"\r\n        class-name=\"small-padding fixed-width\"\r\n      >\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"handleEdit(scope.$index, scope.row)\"\r\n            >编辑\r\n          </el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"danger\"\r\n            @click=\"handleDelete(scope.$index, scope.row)\"\r\n            >删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <br />\r\n    <el-pagination\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"\r\n      :current-page=\"Qlist.pagenum\"\r\n      :page-sizes=\"[10, 20, 30, 50]\"\r\n      :page-size=\"Qlist.pagesize\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      :total=\"total\"\r\n    >\r\n    </el-pagination>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst _ = require(\"loadsh\");\r\n\r\nexport default {\r\n  name: \"video\",\r\n  data() {\r\n    return {\r\n      api: \"/video\",\r\n      users: {},\r\n      totalData: [],\r\n      Qlist: {\r\n        pagenum: 1, //当前页数\r\n        pagesize: 20,\r\n        title: \"\",\r\n        label: \"\",\r\n      },\r\n      total: \"\",\r\n      showBack: false,\r\n      loading: true,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.findUser();\r\n  },\r\n  methods: {\r\n    findUser() {\r\n      this.$axios.post(this.api + \"/find\").then((res) => {\r\n        this.users = _.chunk(res.data, this.Qlist.pagesize)[\r\n          this.Qlist.pagenum - 1\r\n        ];\r\n        this.totalData = res.data;\r\n        this.total = res.data.length;\r\n        this.loading = false;\r\n      });\r\n    }, //获取初始数据\r\n    sortChange(data) {\r\n      const { prop, order } = data;\r\n      this.$axios.post(this.api + \"/sort\", { prop, order }).then((res) => {\r\n        console.log(\"res:\", res);\r\n        this.users = res.data;\r\n      });\r\n    }, //对各列进行排序处理\r\n    handleEdit(index, item) {\r\n      this.$router.push({ path: \"/videoEditor\", query: { _id: item._id } });\r\n    }, //编辑\r\n    handleDelete(index, item) {\r\n      this.$axios.post(this.api + \"/delete\", item).then((res) => {\r\n        console.log(\"res:\", res);\r\n        this.findUser();\r\n      });\r\n    }, //删除\r\n    handleCreate() {\r\n      this.$router.push(\"/videoEditor\");\r\n    }, //创建\r\n    //筛选部分\r\n    handleFilter() {\r\n      if (this.Qlist.title == \"\" && this.Qlist.label == \"\") {\r\n        this.$message.error(\"请输入查询信息\");\r\n      } else {\r\n        this.$axios.post(this.api + \"/filter\", this.Qlist).then((res) => {\r\n          console.log(\"res:\", res);\r\n          this.users = res.data;\r\n          this.showBack = true;\r\n        });\r\n      }\r\n    }, //筛选数据\r\n    closeFilter() {\r\n      this.findUser();\r\n      this.Qlist = {\r\n        pagenum: 1, //当前页数\r\n        pagesize: 20,\r\n        title: \"\",\r\n        label: \"\",\r\n      };\r\n      this.showBack = false;\r\n    }, //关闭筛选\r\n    // 分页部分\r\n    handleSizeChange(val) {\r\n      this.Qlist.pagesize = val;\r\n      this.users = _.chunk(this.totalData, this.Qlist.pagesize)[\r\n        this.Qlist.pagenum - 1\r\n      ];\r\n    }, // 每页查看条数变化\r\n    handleCurrentChange(val) {\r\n      this.Qlist.pagenum = val;\r\n      this.users = _.chunk(this.totalData, this.Qlist.pagesize)[\r\n        this.Qlist.pagenum - 1\r\n      ];\r\n    }, // 当前页码变化\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"]}]}
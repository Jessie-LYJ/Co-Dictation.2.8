{"remainingRequest":"D:\\资料\\codictation.2.4\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\资料\\codictation.2.4\\codictation\\src\\components\\profile\\mytasks.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\资料\\codictation.2.4\\codictation\\src\\components\\profile\\mytasks.vue","mtime":1616018363384},{"path":"D:\\资料\\codictation.2.4\\codictation\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\资料\\codictation.2.4\\codictation\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\资料\\codictation.2.4\\codictation\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\资料\\codictation.2.4\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"D:\\资料\\codictation.2.4\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\资料\\codictation.2.4\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmF2ZXItc2NvcmUsIC5jaGFydC10aXRsZSAudGV4dC1oNiwgaDQgIHsKICBmb250LWZhbWlseTogQ2FtYnJpYSwgIlRpbWVzIE5ldyBSb21hbiIsIFRpbWVzLCDjgIBIZWx2ZXRpY2EsIFRhaG9tYSwgQXJpYWwsCiAgICBTVFhpaGVpLCDigJzljY7mlofnu4bpu5HigJ0sIEhlaXRpLCDigJzpu5HkvZPigJ0sIOKAnE1pY3Jvc29mdCBZYUhlaeKAnSwg4oCc5b6u6L2v6ZuF6buR4oCdLCBTaW1TdW4sCiAgICDigJzlrovkvZPigJ0sIHNhbnMtc2VyaWY7Cn0KCiNlQ2hhcnRzQ29udGFpbmVyIGNhbnZhcyB7CiAgYm9yZGVyLXJhZGl1czogMDsKfQoKLmNoYXJ0LXRpdGxlIHsKICAgIG1hcmdpbi10b3A6IDZweDsKfQouY2hhcnQtYmFyIHsKICBwYWRkaW5nOiAzcHggMTZweDsKfQouY2hhcnQtYm94IHsKICBtYXJnaW4tdG9wOiAtMS43ZW07Cn0K"},{"version":3,"sources":["mytasks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiUA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mytasks.vue","sourceRoot":"src/components/profile","sourcesContent":["<template>\n  <q-page class=\"q-pa-lg\">\n    <div class=\"row\" style=\"width: 90%\">\n      <h3 class=\"col-7 q-my-md\">My Tasks</h3>\n      <h4 class=\"col-5 q-my-sm text-center justify-center q-pt-md\">\n        <span class=\"aver-score\" style=\"font-size:80%\">「　Personal average score：{{ stuAverScore }} 」</span>\n      </h4>\n    </div>\n    <q-separator insert style=\"width: 55%\" />\n    <div>\n      <div class=\"col-12\">\n        <div class=\"q-px-sm q-mb-md\">\n          <q-card flat class=\"no-border-radius text-grey-9\" style=\"width: 85%\">\n            <q-card-section class=\"row items-center chart-bar\">\n              <q-item-label class=\"col q-gutter-sm text-left row chart-title\">\n                <q-avatar\n                  color=\"purple-1\"\n                  size=\"lg\"\n                  text-color=\"purple\"\n                  class=\"q-mr-sm\"\n                  icon=\"insights\"\n                ></q-avatar>\n                <div class=\"text-h6 text-weight-bold\">「　Score line Chart： 」</div>\n              </q-item-label>\n              <q-item-label class=\"col q-gutter-sm text-right\">\n                <q-select\n                  standout=\"bg-brown-7 text-white\" \n                  color=\"brown\"\n                  label=\"Range of Choice\"\n                  v-model=\"labelSelected\"\n                  :options=\"options\"\n                  class=\"float-right\"\n                  style=\"min-width: 250px\"\n                  @change=\"formEcharts(labelSelected)\"\n                >\n                  <template v-slot:prepend>\n                    <q-icon name=\"date_range\" />\n                  </template>\n                </q-select>\n              </q-item-label>\n            </q-card-section>\n            <div class=\"row q-pa-sm chart-box\">\n              <q-item-label\n                class=\"col-md-10 col-xs-12 q-mb-sm\"\n                :class=\"{ 'q-pr-md': $q.screen.gt.sm }\"\n              >\n                <div class=\"q-mt-none\">\n                  <div\n                    id=\"eChartsContainer\"\n                    style=\"height: 240%;\"\n                  ></div>\n                </div>\n              </q-item-label>\n            </div>\n          </q-card>\n        </div>\n      </div>\n    </div>\n    \n    <div\n      v-if=\"myTasks.length > 0\"\n      class=\"q-pa-md q-gutter-sm\"\n      style=\"max-width: 90%;\"\n    >\n      <q-separator insert style=\"width: 95%; margin-top: -1.75em;\"/>\n      <q-list\n        bordered\n        class=\"rounded-borders row\"\n        style=\"max-width: 95%\"\n        v-model=\"currentContent\"\n        v-for=\"(item, index) in currentContent\"\n        :key=\"index\"\n      >\n        <q-item clickable @click=\"intoTask(index)\" class=\"col-9\">\n          <q-item-section avatar top>\n            <q-icon name=\"assignment\" color=\"purple\" size=\"28px\" />\n          </q-item-section>\n\n          <q-item-section top class=\"col-4 gt-sm\">\n            <q-item-label class=\"q-mt-sm\">{{ item.title }}</q-item-label>\n          </q-item-section>\n\n          <q-item-section top>\n            <q-item-label caption lines=\"1\">\n              <span class=\"text-grey\">Release Date: {{ item.time }}</span>\n            </q-item-label>\n            <q-item-label caption lines=\"1\">\n              <span class=\"text-purple-9\">Deadline: {{ item.deadline }}</span>\n            </q-item-label>\n          </q-item-section>\n        </q-item>\n\n        <q-item class=\"col-2\">\n          <q-item-section top side>\n            <div class=\"text-grey-8 q-gutter-xs\">\n              <q-btn\n                class=\"gt-xs\"\n                size=\"14px\"\n                flat\n                dense\n                @click=\"startEx(index)\"\n              >\n                {{ item.scores ? item.scores : \"SCORE\" }}\n              </q-btn>\n            </div>\n          </q-item-section>\n        </q-item>\n\n        <q-item class=\"col-1\">\n          <q-item-section top side>\n            <div class=\"text-grey-8 q-gutter-xs\">\n              <q-btn\n                class=\"gt-md text-red-9\"\n                size=\"16px\"\n                flat\n                round\n                dense\n                icon=\"delete_forever\"\n                @click=\"deleteTask(item.taskId)\"\n              />\n            </div>\n          </q-item-section>\n        </q-item>\n      </q-list>\n      <el-pagination\n        style=\"margin-top: 3%\"\n        background\n        layout=\"prev, pager, next\"\n        :total=\"myTasks.length\"\n        :page-size=\"pagesize\"\n        :current-page.sync=\"currentpage\"\n        hide-on-single-page\n      >\n      </el-pagination>\n    </div>\n\n    <div v-else>亲~快去做任务哟！</div>\n  </q-page>\n</template>\n\n<script>\nvar echarts = require(\"../../echarts.min.js\");\n\nexport default {\n  data() {\n    return {\n      name: \"\", //当前用户的用户名\n      userId: \"\", //当前用户的_id  可根据这两个信息去数据库User取数据\n      api: \"/api\",\n      myTasks: [],\n      pagesize: 8,\n      currentpage: 1,\n      currentContent: [],\n      stuAverScore: 0,\n      labelSelected: \"\",\n      options: [\n        { label: \"All\", value: \"all\" },\n        { label: \"Last 10 tasks\", value: \"10\" },\n        { label: \"Last 20 tasks\", value: \"20\" },\n        { label: \"Last 40 tasks\", value: \"40\" },\n      ],\n    };\n  },\n  watch: {\n    currentpage() {\n      this.showCurrent(this.currentpage);\n    },\n  },\n  created() {\n    this.name = sessionStorage.getItem(\"userName\");\n    console.log(this.name);\n    this.$axios.get(this.api + \"/profile?name=\" + this.name).then((res) => {\n      this.userId = res.data[0]._id; //找地方保存\n      this.myTasks = res.data[0].myTasks.reverse();\n      var totalscore = 0;\n      var total = 0;\n      for (var i = 0; i < this.myTasks.length; i++) {\n        if (this.myTasks[i].scores != \"\") {\n          totalscore += Number(this.myTasks[i].scores);\n          total += 1;\n        }\n      }\n      this.stuAverScore = Math.round(totalscore / total);\n      this.showCurrent(this.currentpage);\n      console.log(this.currentContent);\n    });\n  },\n  updated() {\n    this.formEcharts(this.labelSelected);\n  },\n  methods: {\n    showCurrent(cpage) {\n      var min = (cpage - 1) * this.pagesize;\n      var max = cpage * this.pagesize;\n      this.currentContent = this.myTasks.slice(min, max);\n    },\n    // 进入到任务详情页面\n    intoTask(index) {\n      var diffId = this.myTasks[index].taskId; //任务_id\n      var path = \"/diff/\" + diffId;\n      this.$axios.get(this.api + \"/currentTask?_id=\" + diffId).then((res) => {\n        if (res.data.length == 0) {\n          this.$notify({\n            type: \"warning\",\n            message: \"该任务已被发布者删除！\",\n            position: \"top-right\",\n            offset: 100,\n          });\n        } else {\n          this.$router.push(path);\n        }\n      });\n    },\n    // 学生进入个人分数详情页面\n    startEx(index) {\n      var diffId = this.myTasks[index].taskId; //任务_id\n      var path = \"/diff/\" + diffId;\n      if (this.currentContent[index].scores) {\n        path = \"/diff/\" + diffId + \"/scoresStu\";\n      }\n      this.$axios.get(this.api + \"/currentTask?_id=\" + diffId).then((res) => {\n        if (res.data.length == 0) {\n          this.$notify({\n            type: \"warning\",\n            message: \"该任务已被删除, 无法查看分数！\",\n            position: \"top-right\",\n            offset: 100,\n          });\n        } else {\n          this.$router.push(path);\n        }\n      });\n    },\n    //确定数组里是否有某个元素\n    findElem(arrayToSearch, attr, val) {\n      for (var i = 0; i < arrayToSearch.length; i++) {\n        if (arrayToSearch[i][attr] == val) {\n          return i;\n        }\n      }\n      return -1;\n    },\n    //删除user-myTasks里面的任务\n    deleteTask(taskId) {\n      this.$q\n        .dialog({\n          title: \"Confirm Deletion\",\n          message: \"Delete this task permanently?\",\n          ok: {\n            push: true,\n          },\n          cancel: {\n            push: true,\n            color: \"negative\",\n          },\n          persistent: true,\n        })\n        .onOk(() => {\n          var find_result = this.findElem(this.myTasks, \"taskId\", taskId);\n          this.myTasks.splice(find_result, 1);\n          this.$axios.post(this.api + \"/deleteMyTasks\", {\n            params: {\n              username: this.name,\n              myTasks: this.myTasks,\n            },\n          });\n          this.showCurrent(this.currentpage);\n          this.$q.notify({\n            progress: true,\n            message: \"Deleted!\",\n            color: \"purple\",\n            icon: \"auto_delete\",\n          });\n        });\n    },\n\n    formEcharts(labelSelected) {\n      var container = document.getElementById(\"eChartsContainer\");\n      var myChart = echarts.init(container);\n      var xData = [];\n      var yData = [];\n      for (var i = this.myTasks.length - 1; i >= 0; i--) {\n        if (this.myTasks[i].scores != \"\") {\n          xData.push(this.myTasks[i].title);\n          yData.push(this.myTasks[i].scores);\n\n          if (xData.length == labelSelected.value) {\n            break;\n          }\n        }\n      }\n      if (yData.length <= 1) {\n        container.remove();\n        return;\n      } else {\n        // 指定图表的配置项和数据\n        var option = {\n          xAxis: {\n            name: \"Task title\",\n            type: \"category\",\n            data: xData,\n          },\n          yAxis: {\n            type: \"value\",\n          },\n          series: [\n            {\n              data: yData,\n              type: \"line\",\n            },\n          ],\n        };\n        // 使用刚指定的配置项和数据显示图表。\n        myChart.setOption(option);\n      }\n    },\n  },\n};\n</script>\n\n<style>\n.aver-score, .chart-title .text-h6, h4  {\n  font-family: Cambria, \"Times New Roman\", Times, 　Helvetica, Tahoma, Arial,\n    STXihei, “华文细黑”, Heiti, “黑体”, “Microsoft YaHei”, “微软雅黑”, SimSun,\n    “宋体”, sans-serif;\n}\n\n#eChartsContainer canvas {\n  border-radius: 0;\n}\n\n.chart-title {\n    margin-top: 6px;\n}\n.chart-bar {\n  padding: 3px 16px;\n}\n.chart-box {\n  margin-top: -1.7em;\n}\n</style>\n"]}]}
{"remainingRequest":"D:\\project\\codictation.2.7\\codictation\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js!D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js?kebab!D:\\project\\codictation.2.7\\codictation\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-1!D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\codictation.2.7\\codictation\\src\\components\\profile\\addUsers.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\codictation.2.7\\codictation\\src\\components\\profile\\addUsers.vue","mtime":1618040047817},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js","mtime":499162500000},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\codictation.2.7\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["addUsers.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <q-page class=\"q-pa-md\">\n    <h3 class=\"q-my-md\">Add Users</h3>\n    <q-separator insert style=\"width: 55%\" class=\"q-mb-lg\" />\n    <div class=\"row col-12 q-px-md\">\n      <div class=\"col-8\">\n        <!-- 上传小组名单 -->\n        <q-input\n          single\n          type=\"file\"\n          standout=\"bg-purple-5 text-white\"\n          bottom-slots\n          accept=\".xlsx\"\n          class=\"q-mb-sm\"\n          @change=\"getFile($event)\"\n          v-model=\"fileName\"\n        >\n          <template v-slot:before>\n            <q-icon name=\"group_add\" size=\"lg\" color=\"purple\" class=\"q-mr-sm\" />\n          </template>\n\n          <template v-slot:hint>\n            Group List\n          </template>\n\n          <template v-slot:append>\n            <q-icon name=\"upload_file\" size=\"md\" />\n          </template>\n        </q-input>\n\n        <!-- 小组标签：不可重复 -->\n        <q-input\n          standout=\"bg-purple-5 text-white\"\n          color=\"white\"\n          clearable\n          clear-icon=\"close\"\n          v-model=\"tag\"\n          label=\"Account Tag\"\n          hint=\"No Repeating Account Tag\"\n          error-message=\"× Account Tag Already Existed. Please Change Another One.\"\n          :error=\"isRepeted\"\n          lazy-rules\n          bottom-slots\n          id=\"task-title\"\n          autocomplete=\"off\"\n          class=\"q-mb-sm\"\n        >\n          <template v-slot:before>\n            <q-icon name=\"new_label\" size=\"lg\" color=\"purple\" class=\"q-mr-sm\" />\n          </template>\n        </q-input>\n      </div>\n      <div class=\"col-4 justify-center q-gutter-md q-px-md q-py-lg\">\n        <div class=\"row\">\n          <q-btn\n            class=\"q-mx-md\"\n            label=\"Preview\"\n            color=\"purple-13\"\n            push\n            icon=\"preview\"\n            @click=\"showTable()\"\n            style=\"width: 15em\"\n          />\n        </div>\n        <div class=\"row\">\n          <q-btn\n            class=\"q-mx-md\"\n            label=\"Import\"\n            color=\"purple-14\"\n            push\n            icon=\"upload\"\n            @click=\"submitList()\"\n            style=\"width: 15em\"\n            :disabled=\"tagExist\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"q-pa-md row justify-start\">\n      <div class=\"col-7 q-px-md\">\n        <q-item>\n          <q-item-section>\n            <q-item-label class=\"text-h6 text-weight-bold\">\n              Group Tag List\n            </q-item-label>\n            <q-separator insert style=\"width: 75%\" class=\"q-my-sm\" />\n          </q-item-section>\n        </q-item>\n        <q-list\n          bordered\n          class=\"rounded-borders\"\n          v-for=\"(item, index) in allData\"\n          :key=\"index\"\n        >\n          <q-expansion-item icon=\"sell\" :label=\"item.tagName\">\n            <q-card>\n              <q-card-section class=\"row justify-center\">\n                <q-table\n                  :data=\"item.userList\"\n                  :columns=\"columns\"\n                  row-key=\"stuid\"\n                  style=\"width: 85%\"\n                />\n              </q-card-section>\n            </q-card>\n          </q-expansion-item>\n        </q-list>\n      </div>\n\n      <div class=\"col-5 q-px-lg\" v-if=\"table\">\n        <q-item>\n          <q-item-section>\n            <q-item-label class=\"text-h6 text-weight-bold\">\n              Preview\n            </q-item-label>\n            <q-separator insert style=\"width: 75%\" class=\"q-my-sm\" />\n          </q-item-section>\n        </q-item>\n        <q-table\n          :data=\"accountList\"\n          :columns=\"columns\"\n          row-key=\"stuid\"\n          style=\"width: 100%\"\n        />\n      </div>\n    </div>\n  </q-page>\n</template>\n\n<script>\nimport Header from \"../basic/Header.vue\";\nexport default {\n  data() {\n    return {\n      accountList: [],\n      table: false,\n      count: 0, //阻止文件上传成功事件触发的二次上传\n      tag: \"\",\n      tagList: [], //获取该用户已添加的tags\n      tagExist: false,\n      owner: \"\",\n      status: \"\",\n      api: \"/api\",\n      allData: [],\n      fileName: null, // 所上传的文件名\n      columns: [\n        {\n          name: \"stuid\",\n          required: true,\n          label: \"Student ID\",\n          align: \"center\",\n          field: \"stuid\",\n          sortable: true,\n          headerClasses: \"bg-purple text-white\",\n          style: \"max-width: 100px\",\n        },\n        {\n          name: \"stuname\",\n          align: \"center\",\n          label: \"Name\",\n          align: \"center\",\n          field: \"stuname\",\n          sortable: false,\n          headerClasses: \"bg-purple text-white\",\n        },\n      ],\n    };\n  },\n  components: {\n    Header,\n  },\n  computed: {\n    // 检测名单标签是否重名\n    isRepeted() {\n      for (var i = 0; i < this.tagList.length; i++) {\n        if (this.tag == this.tagList[i]) {\n          return true; //重名则无法提交\n        }\n      }\n    },\n  },\n  methods: {\n    showTable() {\n      if (this.accountList.length > 0) {\n        this.table = !this.table;\n      } else {\n        this.$notify({\n          message: \"Haven't added name list yet\",\n          type: \"warning\",\n          position: \"top-right\",\n          offset: 100,\n        });\n      }\n    },\n    getFile(event) {\n      this.count = 0;\n      this.accountList = [];\n      this.count++;\n      if (this.count == 1) {\n        let _this = this;\n        let inputDOM = this.$refs.inputer; // 通过DOM取文件数据\n        if (event.target.files.length == 1) {\n          this.file = event.target.files[0];\n        }\n        var rABS = false; //是否将文件读取为二进制字符串\n        var f = this.file;\n        var reader = new FileReader();\n        //if (!FileReader.prototype.readAsBinaryString) {\n        FileReader.prototype.readAsBinaryString = function(f) {\n          var binary = \"\";\n          var rABS = false; //是否将文件读取为二进制字符串\n          var pt = this;\n          var wb; //读取完成的数据\n          var outdata;\n          var reader = new FileReader();\n          reader.onload = function(e) {\n            var bytes = new Uint8Array(reader.result);\n            var length = bytes.byteLength;\n            for (var i = 0; i < length; i++) {\n              binary += String.fromCharCode(bytes[i]);\n            }\n            var XLSX = require(\"xlsx\");\n            if (rABS) {\n              wb = XLSX.read(btoa(fixdata(binary)), {\n                //手动转化\n                type: \"base64\",\n              });\n            } else {\n              wb = XLSX.read(binary, {\n                type: \"binary\",\n              });\n            }\n            // outdata就是你想要的东西 excel导入的数据\n            outdata = XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]]);\n            // excel 数据再处理\n            let arr = [];\n            outdata.map((v) => {\n              let obj = {};\n              obj.stuid = v.学号;\n              obj.name = v.学号 + v.姓名;\n              obj.stuname = v.姓名;\n              obj.password = v.密码;\n              arr.push(obj);\n            });\n            _this.accountList = [...arr];\n            this.able = false;\n            console.log(_this.accountList);\n            // _this.reload();\n          };\n          reader.readAsArrayBuffer(f);\n        };\n        if (rABS) {\n          reader.readAsArrayBuffer(f);\n        } else {\n          reader.readAsBinaryString(f);\n        }\n      }\n    },\n    submitList() {\n      if (this.accountList.length > 0) {\n        if (this.tag.trim().length > 0) {\n          this.$axios\n            .post(this.api + \"/addUsers\", {\n              owner: this.owner,\n              userList: this.accountList,\n              tagName: this.tag,\n            })\n            .then((result) => {\n              console.log(result);\n              console.log(\"数据已上传\");\n              this.$notify({\n                type: \"success\",\n                message: \"Import name list successfully\",\n                position: \"top-right\",\n                offset: 100,\n              });\n              this.$router.go(0);\n            });\n        } else {\n          this.$notify({\n            type: \"warning\",\n            message: \"The tag cannot be empty\",\n            position: \"top-right\",\n            offset: 100,\n          });\n        }\n      } else {\n        this.$notify({\n          message: \"当前未导入名单哦\",\n          type: \"warning\",\n          position: \"top-right\",\n          offset: 100,\n        });\n      }\n    },\n    checkTag() {\n      //检测标题是否重名\n      for (var i = 0; i < this.tagList.length; i++) {\n        if (this.tagList[i] == this.tag) {\n          this.tagExist = true; //重名则无法提交\n          return;\n        } else {\n          this.tagExist = false;\n        }\n      }\n    },\n    getTagList() {\n      //连接数据库，获取数据库中属于当前用户的tag列表\n      this.$axios.get(this.api + \"/tagList?owner=\" + this.owner).then((res) => {\n        this.allData = res.data;\n        for (var i = 0; i < this.allData.length; i++) {\n          this.tagList.push(this.allData[i].tagName);\n        }\n        console.log(this.allData);\n      });\n    },\n    getStatus() {\n      //连接数据库，获取数据库中属于当前用户的status\n      this.$axios.get(this.api + \"/profile?name=\" + this.owner).then((res) => {\n        this.status = res.data[0].status;\n      });\n    },\n  },\n  created() {\n    this.owner = sessionStorage.getItem(\"userName\");\n    this.getTagList();\n    this.getStatus();\n  },\n};\n</script>\n\n<style>\n.q-field__native[type=\"file\"] {\n  line-height: 3em;\n}\n</style>\n"],"sourceRoot":"src/components/profile"}]}
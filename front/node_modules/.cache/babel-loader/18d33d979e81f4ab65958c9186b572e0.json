{"remainingRequest":"E:\\FFFF\\codictation.2.4\\codictation\\node_modules\\babel-loader\\lib\\index.js!E:\\FFFF\\codictation.2.4\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js!E:\\FFFF\\codictation.2.4\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js?kebab!E:\\FFFF\\codictation.2.4\\codictation\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-1!E:\\FFFF\\codictation.2.4\\codictation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\FFFF\\codictation.2.4\\codictation\\src\\components\\profile\\addUsers.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\FFFF\\codictation.2.4\\codictation\\src\\components\\profile\\addUsers.vue","mtime":1615686750031},{"path":"E:\\FFFF\\codictation.2.4\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FFFF\\codictation.2.4\\codictation\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\FFFF\\codictation.2.4\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.transform-quasar-imports.js","mtime":499162500000},{"path":"E:\\FFFF\\codictation.2.4\\codictation\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.auto-import.js","mtime":499162500000},{"path":"E:\\FFFF\\codictation.2.4\\codictation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\FFFF\\codictation.2.4\\codictation\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["addUsers.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <q-page class=\"q-pa-md\">\n    <h3 class=\"q-my-md\">Add Users</h3>\n    <q-separator insert style=\"width: 55%\" class=\"q-mb-lg\" />\n    <input type=\"file\" single accept=\".xlsx\" @change=\"getFile($event)\" />\n    <br />\n    添加名单标签：\n    <input type=\"text\" style=\"margin-top:15px\" v-model=\"tag\" @keyup=\"checkTag()\" />\n    <p v-if=\"tagExist\" style=\"font-size: 80%; color: red\">\n      ×标签已存在，请重新命名\n    </p>\n    <br>\n    <el-button type=\"info\" @click=\"showTable()\" style=\"margin-top:15px\">Preview</el-button>\n    <el-button type=\"primary\" @click=\"submitList()\" :disabled=\"tagExist\"\n      >Import</el-button\n    >\n    <el-table\n      :data=\"accountList\"\n      border\n      style=\"width: 30%; margin-left: 30%; margin-top: 3%\"\n      v-if=\"table\"\n    >\n      <el-table-column prop=\"stuid\" label=\"学号\" width=\"200\"> </el-table-column>\n      <el-table-column prop=\"stuname\" label=\"姓名\"> </el-table-column>\n    </el-table>\n\n    <el-table :data=\"allData\" style=\"width: 80%; margin-top: 50px\">\n      <el-table-column type=\"expand\">\n        <template slot-scope=\"props\">\n          <el-table :data=\"props.row.userList\" height=\"200\" border>\n            <el-table-column prop=\"stuid\" label=\"学号\"></el-table-column>\n            <el-table-column prop=\"stuname\" label=\"姓名\"></el-table-column>\n          </el-table>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"小组标签列表\" prop=\"tagName\"> </el-table-column>\n    </el-table>\n  </q-page>\n</template>\n\n<script>\nimport Header from \"../basic/Header.vue\";\nexport default {\n  data() {\n    return {\n      accountList: [],\n      table: false,\n      count: 0, //阻止文件上传成功事件触发的二次上传\n      tag: \"\",\n      tagList: [], //获取该用户已添加的tags\n      tagExist: false,\n      owner: \"\",\n      status: \"\",\n      api: \"/api\",\n      allData: [],\n    };\n  },\n  components: {\n    Header,\n  },\n  methods: {\n    showTable() {\n      if (this.accountList.length > 0) {\n        this.table = !this.table;\n      } else {\n        this.$notify({\n          message: \"当前未导入名单哦\",\n          type: \"warning\",\n          position: \"top-right\",\n          offset: 100,\n        });\n      }\n    },\n    getFile(event) {\n      this.count++;\n      if (this.count == 1) {\n        let _this = this;\n        let inputDOM = this.$refs.inputer; // 通过DOM取文件数据\n        if (event.target.files.length == 1) {\n          this.file = event.target.files[0];\n        }\n        var rABS = false; //是否将文件读取为二进制字符串\n        var f = this.file;\n        var reader = new FileReader();\n        //if (!FileReader.prototype.readAsBinaryString) {\n        FileReader.prototype.readAsBinaryString = function (f) {\n          var binary = \"\";\n          var rABS = false; //是否将文件读取为二进制字符串\n          var pt = this;\n          var wb; //读取完成的数据\n          var outdata;\n          var reader = new FileReader();\n          reader.onload = function (e) {\n            var bytes = new Uint8Array(reader.result);\n            var length = bytes.byteLength;\n            for (var i = 0; i < length; i++) {\n              binary += String.fromCharCode(bytes[i]);\n            }\n            var XLSX = require(\"xlsx\");\n            if (rABS) {\n              wb = XLSX.read(btoa(fixdata(binary)), {\n                //手动转化\n                type: \"base64\",\n              });\n            } else {\n              wb = XLSX.read(binary, {\n                type: \"binary\",\n              });\n            }\n            // outdata就是你想要的东西 excel导入的数据\n            outdata = XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]]);\n            // excel 数据再处理\n            let arr = [];\n            outdata.map((v) => {\n              let obj = {};\n              obj.stuid = v.学号;\n              obj.name = v.学号 + v.姓名;\n              obj.stuname = v.姓名;\n              obj.password = v.密码;\n              arr.push(obj);\n            });\n            _this.accountList = [...arr];\n            this.able = false;\n            // console.log(_this.accountList);\n            _this.reload();\n          };\n          reader.readAsArrayBuffer(f);\n        };\n        if (rABS) {\n          reader.readAsArrayBuffer(f);\n        } else {\n          reader.readAsBinaryString(f);\n        }\n      }\n    },\n    submitList() {\n      if (this.accountList.length > 0) {\n        if (this.tag.trim().length > 0) {\n          this.$axios\n            .post(this.api + \"/addUsers\", {\n              owner: this.owner,\n              userList: this.accountList,\n              tagName: this.tag,\n            })\n            .then((result) => {\n              console.log(result);\n              console.log(\"数据已上传\");\n              this.$notify({\n                type: \"success\",\n                message: \"导入成功！\",\n                position: \"top-right\",\n                offset: 100,\n              });\n              this.$router.go(0);\n            });\n        } else {\n          this.$notify({\n            type: \"warning\",\n            message: \"标题不能为空！\",\n            position: \"top-right\",\n            offset: 100,\n          });\n        }\n      } else {\n        this.$notify({\n          message: \"当前未导入名单哦\",\n          type: \"warning\",\n          position: \"top-right\",\n          offset: 100,\n        });\n      }\n    },\n    checkTag() {\n      //检测标题是否重名\n      for (var i = 0; i < this.tagList.length; i++) {\n        if (this.tagList[i] == this.tag) {\n          this.tagExist = true; //重名则无法提交\n          return;\n        } else {\n          this.tagExist = false;\n        }\n      }\n    },\n    getTagList() {\n      //连接数据库，获取数据库中属于当前用户的tag列表\n      this.$axios.get(this.api + \"/tagList?owner=\" + this.owner).then((res) => {\n        this.allData = res.data;\n        for (var i = 0; i < this.allData.length; i++) {\n          this.tagList.push(this.allData[i].tagName);\n        }\n        console.log(this.allData);\n      });\n    },\n    getStatus() {\n      //连接数据库，获取数据库中属于当前用户的status\n      this.$axios.get(this.api + \"/profile?name=\" + this.owner).then((res) => {\n        this.status = res.data[0].status;\n      });\n    },\n  },\n  created() {\n    this.owner = sessionStorage.getItem(\"userName\");\n    this.getTagList();\n    this.getStatus();\n  },\n};\n</script>\n\n<style scoped>\n</style>"],"sourceRoot":"src/components/profile"}]}